OPTS: -p size=1000 -p bits=23
JAVA_OPTS: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
Running JMH ...
# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.arraysSort
# Parameters: (bits = 23, padding = 7, scenario = UNIFORM, seed = 0, size = 1000)

# Run progress: 0,00% complete, ETA 00:05:15
# Fork: 1 of 1
# Warmup Iteration   1: 38627,690 ops/s
# Warmup Iteration   2: 46949,413 ops/s
# Warmup Iteration   3: 47249,683 ops/s
# Warmup Iteration   4: 47574,415 ops/s
# Warmup Iteration   5: 47418,622 ops/s
Iteration   1: 47720,464 ops/s
Iteration   2: 47786,691 ops/s
Iteration   3: 47442,460 ops/s
Iteration   4: 47784,266 ops/s
Iteration   5: 47448,997 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.arraysSort":
  47636,576 ±(99.9%) 678,662 ops/s [Average]
  (min, avg, max) = (47442,460, 47636,576, 47786,691), stdev = 176,246
  CI (99.9%): [46957,914, 48315,238] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.arraysSort
# Parameters: (bits = 23, padding = 7, scenario = CONTIGUOUS, seed = 0, size = 1000)

# Run progress: 4,76% complete, ETA 00:05:16
# Fork: 1 of 1
# Warmup Iteration   1: 1892350,432 ops/s
# Warmup Iteration   2: 1998429,767 ops/s
# Warmup Iteration   3: 2006136,681 ops/s
# Warmup Iteration   4: 2004514,378 ops/s
# Warmup Iteration   5: 2003508,146 ops/s
Iteration   1: 2002871,086 ops/s
Iteration   2: 2005723,188 ops/s
Iteration   3: 2005673,628 ops/s
Iteration   4: 2002413,595 ops/s
Iteration   5: 2005299,521 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.arraysSort":
  2004396,203 ±(99.9%) 6228,469 ops/s [Average]
  (min, avg, max) = (2002413,595, 2004396,203, 2005723,188), stdev = 1617,514
  CI (99.9%): [1998167,734, 2010624,673] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.arraysSort
# Parameters: (bits = 23, padding = 7, scenario = CONTIGUOUS_REVERSE, seed = 0, size = 1000)

# Run progress: 9,52% complete, ETA 00:04:59
# Fork: 1 of 1
# Warmup Iteration   1: 619640,173 ops/s
# Warmup Iteration   2: 689715,108 ops/s
# Warmup Iteration   3: 689999,792 ops/s
# Warmup Iteration   4: 689895,555 ops/s
# Warmup Iteration   5: 691301,139 ops/s
Iteration   1: 689050,503 ops/s
Iteration   2: 689086,875 ops/s
Iteration   3: 689365,367 ops/s
Iteration   4: 686222,331 ops/s
Iteration   5: 685913,720 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.arraysSort":
  687927,759 ±(99.9%) 6567,482 ops/s [Average]
  (min, avg, max) = (685913,720, 687927,759, 689365,367), stdev = 1705,554
  CI (99.9%): [681360,277, 694495,241] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.arraysSort
# Parameters: (bits = 23, padding = 7, scenario = ALMOST_CONTIGUOUS, seed = 0, size = 1000)

# Run progress: 14,29% complete, ETA 00:04:43
# Fork: 1 of 1
# Warmup Iteration   1: 115654,779 ops/s
# Warmup Iteration   2: 161535,843 ops/s
# Warmup Iteration   3: 159175,344 ops/s
# Warmup Iteration   4: 157367,659 ops/s
# Warmup Iteration   5: 161880,068 ops/s
Iteration   1: 162165,532 ops/s
Iteration   2: 162264,738 ops/s
Iteration   3: 161663,309 ops/s
Iteration   4: 161663,136 ops/s
Iteration   5: 161945,544 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.arraysSort":
  161940,452 ±(99.9%) 1071,214 ops/s [Average]
  (min, avg, max) = (161663,136, 161940,452, 162264,738), stdev = 278,191
  CI (99.9%): [160869,237, 163011,666] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.arraysSort
# Parameters: (bits = 23, padding = 7, scenario = SORTED, seed = 0, size = 1000)

# Run progress: 19,05% complete, ETA 00:04:27
# Fork: 1 of 1
# Warmup Iteration   1: 1896249,911 ops/s
# Warmup Iteration   2: 1992949,842 ops/s
# Warmup Iteration   3: 1994879,372 ops/s
# Warmup Iteration   4: 1988804,009 ops/s
# Warmup Iteration   5: 1990999,576 ops/s
Iteration   1: 1999537,946 ops/s
Iteration   2: 1995906,933 ops/s
Iteration   3: 1999507,698 ops/s
Iteration   4: 1999383,095 ops/s
Iteration   5: 1999395,761 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.arraysSort":
  1998746,287 ±(99.9%) 6117,479 ops/s [Average]
  (min, avg, max) = (1995906,933, 1998746,287, 1999537,946), stdev = 1588,690
  CI (99.9%): [1992628,808, 2004863,765] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.arraysSort
# Parameters: (bits = 23, padding = 7, scenario = ALMOST_SORTED, seed = 0, size = 1000)

# Run progress: 23,81% complete, ETA 00:04:11
# Fork: 1 of 1
# Warmup Iteration   1: 183877,212 ops/s
# Warmup Iteration   2: 218157,707 ops/s
# Warmup Iteration   3: 212939,836 ops/s
# Warmup Iteration   4: 213296,597 ops/s
# Warmup Iteration   5: 212828,120 ops/s
Iteration   1: 212693,753 ops/s
Iteration   2: 212906,144 ops/s
Iteration   3: 212148,234 ops/s
Iteration   4: 212716,802 ops/s
Iteration   5: 213640,560 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.arraysSort":
  212821,099 ±(99.9%) 2072,375 ops/s [Average]
  (min, avg, max) = (212148,234, 212821,099, 213640,560), stdev = 538,189
  CI (99.9%): [210748,724, 214893,474] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.arraysSort
# Parameters: (bits = 23, padding = 7, scenario = EXP, seed = 0, size = 1000)

# Run progress: 28,57% complete, ETA 00:03:55
# Fork: 1 of 1
# Warmup Iteration   1: 34460,080 ops/s
# Warmup Iteration   2: 43697,743 ops/s
# Warmup Iteration   3: 43917,930 ops/s
# Warmup Iteration   4: 43940,067 ops/s
# Warmup Iteration   5: 44077,592 ops/s
Iteration   1: 44015,168 ops/s
Iteration   2: 44039,009 ops/s
Iteration   3: 43950,899 ops/s
Iteration   4: 43853,490 ops/s
Iteration   5: 43939,578 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.arraysSort":
  43959,629 ±(99.9%) 279,865 ops/s [Average]
  (min, avg, max) = (43853,490, 43959,629, 44039,009), stdev = 72,680
  CI (99.9%): [43679,764, 44239,494] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.basicBuffer
# Parameters: (bits = 23, padding = 7, scenario = UNIFORM, seed = 0, size = 1000)

# Run progress: 33,33% complete, ETA 00:03:39
# Fork: 1 of 1
# Warmup Iteration   1: 47235,191 ops/s
# Warmup Iteration   2: 53880,950 ops/s
# Warmup Iteration   3: 54530,439 ops/s
# Warmup Iteration   4: 53763,786 ops/s
# Warmup Iteration   5: 54022,240 ops/s
Iteration   1: 56616,641 ops/s
Iteration   2: 56654,455 ops/s
Iteration   3: 56355,590 ops/s
Iteration   4: 56705,934 ops/s
Iteration   5: 56644,864 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.basicBuffer":
  56595,497 ±(99.9%) 531,166 ops/s [Average]
  (min, avg, max) = (56355,590, 56595,497, 56705,934), stdev = 137,942
  CI (99.9%): [56064,331, 57126,663] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.basicBuffer
# Parameters: (bits = 23, padding = 7, scenario = CONTIGUOUS, seed = 0, size = 1000)

# Run progress: 38,10% complete, ETA 00:03:24
# Fork: 1 of 1
# Warmup Iteration   1: 41173,314 ops/s
# Warmup Iteration   2: 45619,182 ops/s
# Warmup Iteration   3: 46752,171 ops/s
# Warmup Iteration   4: 46267,256 ops/s
# Warmup Iteration   5: 46260,845 ops/s
Iteration   1: 47166,519 ops/s
Iteration   2: 47552,806 ops/s
Iteration   3: 47543,890 ops/s
Iteration   4: 47817,622 ops/s
Iteration   5: 47837,024 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.basicBuffer":
  47583,572 ±(99.9%) 1046,553 ops/s [Average]
  (min, avg, max) = (47166,519, 47583,572, 47837,024), stdev = 271,786
  CI (99.9%): [46537,019, 48630,125] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.basicBuffer
# Parameters: (bits = 23, padding = 7, scenario = CONTIGUOUS_REVERSE, seed = 0, size = 1000)

# Run progress: 42,86% complete, ETA 00:03:08
# Fork: 1 of 1
# Warmup Iteration   1: 40645,239 ops/s
# Warmup Iteration   2: 45083,690 ops/s
# Warmup Iteration   3: 46140,747 ops/s
# Warmup Iteration   4: 45695,285 ops/s
# Warmup Iteration   5: 45701,235 ops/s
Iteration   1: 46692,231 ops/s
Iteration   2: 47362,688 ops/s
Iteration   3: 47564,285 ops/s
Iteration   4: 47581,084 ops/s
Iteration   5: 47320,094 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.basicBuffer":
  47304,076 ±(99.9%) 1391,687 ops/s [Average]
  (min, avg, max) = (46692,231, 47304,076, 47581,084), stdev = 361,417
  CI (99.9%): [45912,389, 48695,764] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.basicBuffer
# Parameters: (bits = 23, padding = 7, scenario = ALMOST_CONTIGUOUS, seed = 0, size = 1000)

# Run progress: 47,62% complete, ETA 00:02:52
# Fork: 1 of 1
# Warmup Iteration   1: 41005,884 ops/s
# Warmup Iteration   2: 45454,125 ops/s
# Warmup Iteration   3: 46544,717 ops/s
# Warmup Iteration   4: 46134,714 ops/s
# Warmup Iteration   5: 46113,424 ops/s
Iteration   1: 46952,944 ops/s
Iteration   2: 47530,798 ops/s
Iteration   3: 47469,952 ops/s
Iteration   4: 47501,522 ops/s
Iteration   5: 47498,098 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.basicBuffer":
  47390,663 ±(99.9%) 945,869 ops/s [Average]
  (min, avg, max) = (46952,944, 47390,663, 47530,798), stdev = 245,639
  CI (99.9%): [46444,794, 48336,531] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.basicBuffer
# Parameters: (bits = 23, padding = 7, scenario = SORTED, seed = 0, size = 1000)

# Run progress: 52,38% complete, ETA 00:02:37
# Fork: 1 of 1
# Warmup Iteration   1: 45186,282 ops/s
# Warmup Iteration   2: 50585,727 ops/s
# Warmup Iteration   3: 51304,371 ops/s
# Warmup Iteration   4: 51002,488 ops/s
# Warmup Iteration   5: 50979,021 ops/s
Iteration   1: 56398,559 ops/s
Iteration   2: 56266,683 ops/s
Iteration   3: 56358,533 ops/s
Iteration   4: 56463,616 ops/s
Iteration   5: 55889,638 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.basicBuffer":
  56275,406 ±(99.9%) 874,683 ops/s [Average]
  (min, avg, max) = (55889,638, 56275,406, 56463,616), stdev = 227,152
  CI (99.9%): [55400,723, 57150,088] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.basicBuffer
# Parameters: (bits = 23, padding = 7, scenario = ALMOST_SORTED, seed = 0, size = 1000)

# Run progress: 57,14% complete, ETA 00:02:21
# Fork: 1 of 1
# Warmup Iteration   1: 47404,393 ops/s
# Warmup Iteration   2: 53975,551 ops/s
# Warmup Iteration   3: 54963,451 ops/s
# Warmup Iteration   4: 54470,785 ops/s
# Warmup Iteration   5: 54503,482 ops/s
Iteration   1: 56298,201 ops/s
Iteration   2: 56291,136 ops/s
Iteration   3: 56336,880 ops/s
Iteration   4: 56672,020 ops/s
Iteration   5: 56581,623 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.basicBuffer":
  56435,972 ±(99.9%) 685,345 ops/s [Average]
  (min, avg, max) = (56291,136, 56435,972, 56672,020), stdev = 177,982
  CI (99.9%): [55750,627, 57121,317] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.basicBuffer
# Parameters: (bits = 23, padding = 7, scenario = EXP, seed = 0, size = 1000)

# Run progress: 61,90% complete, ETA 00:02:05
# Fork: 1 of 1
# Warmup Iteration   1: 40992,500 ops/s
# Warmup Iteration   2: 45380,877 ops/s
# Warmup Iteration   3: 46419,168 ops/s
# Warmup Iteration   4: 46213,178 ops/s
# Warmup Iteration   5: 46234,791 ops/s
Iteration   1: 47062,177 ops/s
Iteration   2: 47608,302 ops/s
Iteration   3: 47516,607 ops/s
Iteration   4: 47439,295 ops/s
Iteration   5: 47424,807 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.basicBuffer":
  47410,237 ±(99.9%) 800,218 ops/s [Average]
  (min, avg, max) = (47062,177, 47410,237, 47608,302), stdev = 207,814
  CI (99.9%): [46610,019, 48210,455] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection
# Parameters: (bits = 23, padding = 7, scenario = UNIFORM, seed = 0, size = 1000)

# Run progress: 66,67% complete, ETA 00:01:49
# Fork: 1 of 1
# Warmup Iteration   1: 59883,471 ops/s
# Warmup Iteration   2: 88066,033 ops/s
# Warmup Iteration   3: 89450,173 ops/s
# Warmup Iteration   4: 89766,464 ops/s
# Warmup Iteration   5: 89698,243 ops/s
Iteration   1: 88151,589 ops/s
Iteration   2: 90359,653 ops/s
Iteration   3: 90159,129 ops/s
Iteration   4: 90391,165 ops/s
Iteration   5: 90143,763 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection":
  89841,060 ±(99.9%) 3662,499 ops/s [Average]
  (min, avg, max) = (88151,589, 89841,060, 90391,165), stdev = 951,139
  CI (99.9%): [86178,561, 93503,559] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection
# Parameters: (bits = 23, padding = 7, scenario = CONTIGUOUS, seed = 0, size = 1000)

# Run progress: 71,43% complete, ETA 00:01:34
# Fork: 1 of 1
# Warmup Iteration   1: 84942,414 ops/s
# Warmup Iteration   2: 115919,872 ops/s
# Warmup Iteration   3: 116302,713 ops/s
# Warmup Iteration   4: 115835,700 ops/s
# Warmup Iteration   5: 111456,219 ops/s
Iteration   1: 116341,463 ops/s
Iteration   2: 115979,152 ops/s
Iteration   3: 116020,595 ops/s
Iteration   4: 115921,282 ops/s
Iteration   5: 116438,054 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection":
  116140,109 ±(99.9%) 897,684 ops/s [Average]
  (min, avg, max) = (115921,282, 116140,109, 116438,054), stdev = 233,126
  CI (99.9%): [115242,425, 117037,793] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection
# Parameters: (bits = 23, padding = 7, scenario = CONTIGUOUS_REVERSE, seed = 0, size = 1000)

# Run progress: 76,19% complete, ETA 00:01:18
# Fork: 1 of 1
# Warmup Iteration   1: 86580,943 ops/s
# Warmup Iteration   2: 114532,064 ops/s
# Warmup Iteration   3: 115559,693 ops/s
# Warmup Iteration   4: 115276,777 ops/s
# Warmup Iteration   5: 110978,358 ops/s
Iteration   1: 115727,839 ops/s
Iteration   2: 115597,326 ops/s
Iteration   3: 115546,313 ops/s
Iteration   4: 115597,931 ops/s
Iteration   5: 115637,057 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection":
  115621,293 ±(99.9%) 260,757 ops/s [Average]
  (min, avg, max) = (115546,313, 115621,293, 115727,839), stdev = 67,718
  CI (99.9%): [115360,536, 115882,050] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection
# Parameters: (bits = 23, padding = 7, scenario = ALMOST_CONTIGUOUS, seed = 0, size = 1000)

# Run progress: 80,95% complete, ETA 00:01:02
# Fork: 1 of 1
# Warmup Iteration   1: 83055,597 ops/s
# Warmup Iteration   2: 115239,081 ops/s
# Warmup Iteration   3: 115727,980 ops/s
# Warmup Iteration   4: 115443,487 ops/s
# Warmup Iteration   5: 110928,198 ops/s
Iteration   1: 115752,609 ops/s
Iteration   2: 115586,453 ops/s
Iteration   3: 115276,443 ops/s
Iteration   4: 115939,884 ops/s
Iteration   5: 115858,459 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection":
  115682,770 ±(99.9%) 1011,903 ops/s [Average]
  (min, avg, max) = (115276,443, 115682,770, 115939,884), stdev = 262,788
  CI (99.9%): [114670,867, 116694,673] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection
# Parameters: (bits = 23, padding = 7, scenario = SORTED, seed = 0, size = 1000)

# Run progress: 85,71% complete, ETA 00:00:47
# Fork: 1 of 1
# Warmup Iteration   1: 61255,197 ops/s
# Warmup Iteration   2: 84215,943 ops/s
# Warmup Iteration   3: 85590,306 ops/s
# Warmup Iteration   4: 85863,823 ops/s
# Warmup Iteration   5: 84938,846 ops/s
Iteration   1: 83559,321 ops/s
Iteration   2: 85119,880 ops/s
Iteration   3: 85466,925 ops/s
Iteration   4: 85466,537 ops/s
Iteration   5: 85470,859 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection":
  85016,704 ±(99.9%) 3190,413 ops/s [Average]
  (min, avg, max) = (83559,321, 85016,704, 85470,859), stdev = 828,540
  CI (99.9%): [81826,291, 88207,118] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection
# Parameters: (bits = 23, padding = 7, scenario = ALMOST_SORTED, seed = 0, size = 1000)

# Run progress: 90,48% complete, ETA 00:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 61708,752 ops/s
# Warmup Iteration   2: 85106,714 ops/s
# Warmup Iteration   3: 86049,616 ops/s
# Warmup Iteration   4: 80346,984 ops/s
# Warmup Iteration   5: 78853,088 ops/s
Iteration   1: 84253,509 ops/s
Iteration   2: 86493,325 ops/s
Iteration   3: 86715,951 ops/s
Iteration   4: 86770,273 ops/s
Iteration   5: 86489,716 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection":
  86144,555 ±(99.9%) 4100,008 ops/s [Average]
  (min, avg, max) = (84253,509, 86144,555, 86770,273), stdev = 1064,759
  CI (99.9%): [82044,547, 90244,563] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+9-18
# VM invoker: /home/bourgesl/apps/jdk-15.0.1/bin/java
# VM options: -Xms1g -Xmx1g -XX:+UseParallelGC -XX:-BackgroundCompilation
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.richardstartin.radixsort.RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection
# Parameters: (bits = 23, padding = 7, scenario = EXP, seed = 0, size = 1000)

# Run progress: 95,24% complete, ETA 00:00:15
# Fork: 1 of 1
# Warmup Iteration   1: 54023,816 ops/s
# Warmup Iteration   2: 71570,277 ops/s
# Warmup Iteration   3: 73524,779 ops/s
# Warmup Iteration   4: 73205,442 ops/s
# Warmup Iteration   5: 73408,416 ops/s
Iteration   1: 72203,378 ops/s
Iteration   2: 73692,336 ops/s
Iteration   3: 73608,609 ops/s
Iteration   4: 73613,382 ops/s
Iteration   5: 73571,321 ops/s


Result "io.github.richardstartin.radixsort.RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection":
  73337,805 ±(99.9%) 2447,829 ops/s [Average]
  (min, avg, max) = (72203,378, 73337,805, 73692,336), stdev = 635,693
  CI (99.9%): [70889,977, 75785,634] (assumes normal distribution)


# Run complete. Total time: 00:05:29

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                      (bits)  (padding)          (scenario)  (seed)  (size)   Mode  Cnt        Score      Error  Units
RadixSortBenchmark.arraysSort                                      23          7             UNIFORM       0    1000  thrpt    5    47636,576 ±  678,662  ops/s
RadixSortBenchmark.arraysSort                                      23          7          CONTIGUOUS       0    1000  thrpt    5  2004396,203 ± 6228,469  ops/s
RadixSortBenchmark.arraysSort                                      23          7  CONTIGUOUS_REVERSE       0    1000  thrpt    5   687927,759 ± 6567,482  ops/s
RadixSortBenchmark.arraysSort                                      23          7   ALMOST_CONTIGUOUS       0    1000  thrpt    5   161940,452 ± 1071,214  ops/s
RadixSortBenchmark.arraysSort                                      23          7              SORTED       0    1000  thrpt    5  1998746,287 ± 6117,479  ops/s
RadixSortBenchmark.arraysSort                                      23          7       ALMOST_SORTED       0    1000  thrpt    5   212821,099 ± 2072,375  ops/s
RadixSortBenchmark.arraysSort                                      23          7                 EXP       0    1000  thrpt    5    43959,629 ±  279,865  ops/s
RadixSortBenchmark.basicBuffer                                     23          7             UNIFORM       0    1000  thrpt    5    56595,497 ±  531,166  ops/s
RadixSortBenchmark.basicBuffer                                     23          7          CONTIGUOUS       0    1000  thrpt    5    47583,572 ± 1046,553  ops/s
RadixSortBenchmark.basicBuffer                                     23          7  CONTIGUOUS_REVERSE       0    1000  thrpt    5    47304,076 ± 1391,687  ops/s
RadixSortBenchmark.basicBuffer                                     23          7   ALMOST_CONTIGUOUS       0    1000  thrpt    5    47390,663 ±  945,869  ops/s
RadixSortBenchmark.basicBuffer                                     23          7              SORTED       0    1000  thrpt    5    56275,406 ±  874,683  ops/s
RadixSortBenchmark.basicBuffer                                     23          7       ALMOST_SORTED       0    1000  thrpt    5    56435,972 ±  685,345  ops/s
RadixSortBenchmark.basicBuffer                                     23          7                 EXP       0    1000  thrpt    5    47410,237 ±  800,218  ops/s
RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection      23          7             UNIFORM       0    1000  thrpt    5    89841,060 ± 3662,499  ops/s
RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection      23          7          CONTIGUOUS       0    1000  thrpt    5   116140,109 ±  897,684  ops/s
RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection      23          7  CONTIGUOUS_REVERSE       0    1000  thrpt    5   115621,293 ±  260,757  ops/s
RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection      23          7   ALMOST_CONTIGUOUS       0    1000  thrpt    5   115682,770 ± 1011,903  ops/s
RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection      23          7              SORTED       0    1000  thrpt    5    85016,704 ± 3190,413  ops/s
RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection      23          7       ALMOST_SORTED       0    1000  thrpt    5    86144,555 ± 4100,008  ops/s
RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection      23          7                 EXP       0    1000  thrpt    5    73337,805 ± 2447,829  ops/s
