# Run complete. Total time: 00:05:29

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                      (bits)  (padding)          (scenario)  (seed)  (size)   Mode  Cnt        Score      Error  Units
RadixSortBenchmark.arraysSort                                      23          7             UNIFORM       0    1000  thrpt    5    47636,576 ±  678,662  ops/s
RadixSortBenchmark.arraysSort                                      23          7          CONTIGUOUS       0    1000  thrpt    5  2004396,203 ± 6228,469  ops/s
RadixSortBenchmark.arraysSort                                      23          7  CONTIGUOUS_REVERSE       0    1000  thrpt    5   687927,759 ± 6567,482  ops/s
RadixSortBenchmark.arraysSort                                      23          7   ALMOST_CONTIGUOUS       0    1000  thrpt    5   161940,452 ± 1071,214  ops/s
RadixSortBenchmark.arraysSort                                      23          7              SORTED       0    1000  thrpt    5  1998746,287 ± 6117,479  ops/s
RadixSortBenchmark.arraysSort                                      23          7       ALMOST_SORTED       0    1000  thrpt    5   212821,099 ± 2072,375  ops/s
RadixSortBenchmark.arraysSort                                      23          7                 EXP       0    1000  thrpt    5    43959,629 ±  279,865  ops/s
RadixSortBenchmark.basicBuffer                                     23          7             UNIFORM       0    1000  thrpt    5    56595,497 ±  531,166  ops/s
RadixSortBenchmark.basicBuffer                                     23          7          CONTIGUOUS       0    1000  thrpt    5    47583,572 ± 1046,553  ops/s
RadixSortBenchmark.basicBuffer                                     23          7  CONTIGUOUS_REVERSE       0    1000  thrpt    5    47304,076 ± 1391,687  ops/s
RadixSortBenchmark.basicBuffer                                     23          7   ALMOST_CONTIGUOUS       0    1000  thrpt    5    47390,663 ±  945,869  ops/s
RadixSortBenchmark.basicBuffer                                     23          7              SORTED       0    1000  thrpt    5    56275,406 ±  874,683  ops/s
RadixSortBenchmark.basicBuffer                                     23          7       ALMOST_SORTED       0    1000  thrpt    5    56435,972 ±  685,345  ops/s
RadixSortBenchmark.basicBuffer                                     23          7                 EXP       0    1000  thrpt    5    47410,237 ±  800,218  ops/s
RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection      23          7             UNIFORM       0    1000  thrpt    5    89841,060 ± 3662,499  ops/s
RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection      23          7          CONTIGUOUS       0    1000  thrpt    5   116140,109 ±  897,684  ops/s
RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection      23          7  CONTIGUOUS_REVERSE       0    1000  thrpt    5   115621,293 ±  260,757  ops/s
RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection      23          7   ALMOST_CONTIGUOUS       0    1000  thrpt    5   115682,770 ± 1011,903  ops/s
RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection      23          7              SORTED       0    1000  thrpt    5    85016,704 ± 3190,413  ops/s
RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection      23          7       ALMOST_SORTED       0    1000  thrpt    5    86144,555 ± 4100,008  ops/s
RadixSortBenchmark.unrollOnePassSkipLevelsBufferWithDetection      23          7                 EXP       0    1000  thrpt    5    73337,805 ± 2447,829  ops/s
