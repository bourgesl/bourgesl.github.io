
CPU_CORE_IDS: 3
date:
mercredi 7 ao√ªt 2019, 21:47:26 (UTC+0200)
CLASSPATH:   ../lib/mapbench-0.5.0.jar
Boot CP:     
Java opts:   -Dsun.java2d.renderer.log=true -DMapBench.skipDraw=false -DMapBench.skipFill=false -DMapBench.clip.small=false -DMapBench.qualityMode=true -DMapBench.premultiplied=true -DMapBench.acceleration=false -DMapBench.volatile=false -server
Java tuning: -Xms2g -Xmx2g -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC -Xlog:gc+stats
JVM path
/home/bourgesl/libs/graphics-rasterizer/jdk/client/build/linux-x86_64-server-release/images/jdk//bin//java
Java version
openjdk version "14-internal" 2020-03-17
OpenJDK Runtime Environment (build 14-internal+0-adhoc.bourgesl.client)
OpenJDK 64-Bit Server VM (build 14-internal+0-adhoc.bourgesl.client, mixed mode, sharing)
##############################################################
# Java: 14-internal+0-adhoc.bourgesl.client
#   VM: OpenJDK 64-Bit Server VM 14-internal+0-adhoc.bourgesl.client (mixed mode, sharing)
#   OS: Linux 4.15.0-55-generic (amd64)
# CPUs: 3 (virtual)
##############################################################
INFO: ===============================================================================
INFO: Marlin software rasterizer           = ENABLED
INFO: Version                              = [marlin-0.9.1.2-Unsafe-OpenJDK]
INFO: sun.java2d.renderer                  = sun.java2d.marlin.DMarlinRenderingEngine
INFO: sun.java2d.renderer.useThreadLocal   = true
INFO: sun.java2d.renderer.useRef           = soft
INFO: sun.java2d.renderer.edges            = 4096
INFO: sun.java2d.renderer.pixelWidth       = 4096
INFO: sun.java2d.renderer.pixelHeight      = 2176
INFO: sun.java2d.renderer.subPixel_log2_X  = 8
INFO: sun.java2d.renderer.subPixel_log2_Y  = 3
INFO: sun.java2d.renderer.tileSize_log2    = 5
INFO: sun.java2d.renderer.tileWidth_log2   = 5
INFO: sun.java2d.renderer.blockSize_log2   = 5
INFO: sun.java2d.renderer.forceRLE         = false
INFO: sun.java2d.renderer.forceNoRLE       = false
INFO: sun.java2d.renderer.useTileFlags     = true
INFO: sun.java2d.renderer.useTileFlags.useHeuristics = true
INFO: sun.java2d.renderer.rleMinWidth      = 64
INFO: sun.java2d.renderer.useSimplifier    = false
INFO: sun.java2d.renderer.usePathSimplifier= false
INFO: sun.java2d.renderer.pathSimplifier.pixTol = 0.125
INFO: sun.java2d.renderer.clip             = true
INFO: sun.java2d.renderer.clip.runtime.enable = false
INFO: sun.java2d.renderer.clip.subdivider  = true
INFO: sun.java2d.renderer.clip.subdivider.minLength = 100.0
INFO: sun.java2d.renderer.doStats          = false
INFO: sun.java2d.renderer.doMonitors       = false
INFO: sun.java2d.renderer.doChecks         = false
INFO: sun.java2d.renderer.useLogger        = false
INFO: sun.java2d.renderer.logCreateContext = false
INFO: sun.java2d.renderer.logUnsafeMalloc  = false
INFO: sun.java2d.renderer.curve_len_err    = 0.01
INFO: sun.java2d.renderer.cubic_dec_d2     = 1.0
INFO: sun.java2d.renderer.cubic_inc_d1     = 0.2
INFO: sun.java2d.renderer.quad_dec_d2      = 0.5
INFO: Renderer settings:
INFO: CUB_DEC_BND  = 256.0
INFO: CUB_INC_BND  = 51.20000076293945
INFO: QUAD_DEC_BND = 128.0
INFO: INITIAL_EDGES_CAPACITY               = 98304
INFO: INITIAL_CROSSING_COUNT               = 1024
INFO: ===============================================================================
# Renderer: DMarlinRenderingEngine 
# Quality mode: QUALITY...
# Filter shape on size: DISABLED...
# skipDraw: false 
# skipFill: false 
# useClipSmall: false 
# Using BufferedImage INT_ARGB_PRE...
##############################################################
profileName: shared_1T
Loading profile file: /home/marlin/mapbench/bin/../profiles/shared_1T.properties
Loading scale file: /home/marlin/mapbench/bin/../profiles/mapbench-scales.properties
Profile properties (merged with defaults):
  dashLength=3.0
  doClip=false
  doCreateStrokedShape=false
  doRotate=false
  doScale=false
  doShear=false
  doTranslate=false
  doUseDashedStroke=false
  doUseGradient=false
  doUseTexture=false
  doUseWingRuleEvenOdd=false
  doUseWingRuleNonZero=false
  imageX=NaN
  imageY=NaN
  iteration=1
  maxThreads=1
  minDuration=10000.0
  minLoops=10
  pass=1
  rotateAngle=17.333
  scaleX=0.1
  scaleY=0.1
  shearX=2.0
  shearY=2.0
  translateX=0.0
  translateY=0.0
  useSharedImage=true
  warmupLoopsMax=160
  warmupLoopsMin=80
  warmupLoopsMinTest=10
### Test Scales:
  dc_shp_alllayers_2013-00-30-07-00-47.ser=800
  dc_spearfish_2013-11-30-06-11-19.ser=10
  dc_boulder_2013-13-30-06-13-17.ser=100
  dc_boulder_2013-13-30-06-13-20.ser=50
  test_z_300k.ser=150
  dc_topp=states_2013-11-30-06-11-07.ser=10
  EllipseTests-fill-false.ser=200
  test_z_1.25M.ser=150
  test_z_150k.ser=150
  dc_spearfish_2013-11-30-06-11-15.ser=10
  spiralTest-fill.ser=800
  spiralTest-dash-false.ser=1000
  CircleTests.ser=50
  dc_shp_alllayers_2013-00-30-07-00-43.ser=50
  EllipseTests-fill-true.ser=350
  test_z_625k.ser=150
  test_z_5M.ser=50
##############################################################
# Min duration per test = 10000.0 ms.
##############################################################
Loading maps from = /home/marlin/mapbench/bin/../maps
Results format: 
Test                                         	Threads	Ops	Med	Pct95	Avg	StdDev	Min	Max	FPS(med)	TotalOps	Scale	[ms/op]

Calibrating up with 1 threads and 3000 loops
cleanup (explicit Full GC): 2,142,240,768 / 2,143,932,576 bytes free.
Calibration up took 1496.474159 ms
[calibration]                                	1	3000	0.490	0.509	0.494	0.015	0.489	0.735	2041.771	3000	1.000
Loading drawing commands from file: /home/marlin/mapbench/bin/../maps/CircleTests.ser
Loaded DrawingCommands: DrawingCommands{width=2048, height=2048, commands=2001}
drawing[CircleTests.ser][width = 2048, height = 2048] ...

Warming up with 1 threads and 80 loops on /home/marlin/mapbench/bin/../maps/CircleTests.ser
cleanup (explicit Full GC): 2,138,869,360 / 2,143,931,312 bytes free.
Warm up took 6016.764793 ms
CircleTests.ser                              	1	80	69.939	77.155	75.084	29.700	69.453	305.446	14.298	80	2.000

Warming up with 1 threads and 160 loops on /home/marlin/mapbench/bin/../maps/CircleTests.ser
cleanup (explicit Full GC): 2,118,772,176 / 2,143,410,672 bytes free.
Warm up took 11134.59509 ms
CircleTests.ser                              	1	160	69.469	70.131	69.578	0.268	69.188	70.482	14.395	160	2.000
cleanup (explicit Full GC): 2,115,106,864 / 2,143,400,352 bytes free.
Initial test: 70.022161 ms.

Warming up with 2 threads and 45 loops on /home/marlin/mapbench/bin/../maps/CircleTests.ser
cleanup (explicit Full GC): 2,124,526,752 / 2,143,394,160 bytes free.
Warm up took 6275.006466 ms
CircleTests.ser                              	2	90	69.579	70.155	69.654	0.281	69.291	70.586	14.372	90	2.000
cleanup (explicit Full GC): 2,101,455,840 / 2,143,385,904 bytes free.
Initial test: 69.654982 ms.
Testing file /home/marlin/mapbench/bin/../maps/CircleTests.ser for 151 loops ...
cleanup (explicit Full GC): 2,124,512,312 / 2,143,379,712 bytes free.
1 threads and 151 loops per thread, time: 10456.625793 ms
CircleTests.ser                              	1	151	69.156	69.576	69.237	0.200	68.971	69.851	14.460	151	2.000


Loading drawing commands from file: /home/marlin/mapbench/bin/../maps/EllipseTests-fill-false.ser
Loaded DrawingCommands: DrawingCommands{width=2000, height=2000, commands=198}
drawing[EllipseTests-fill-false.ser][width = 2000, height = 2000] ...
cleanup (explicit Full GC): 2,114,027,488 / 2,144,100,112 bytes free.
Initial test: 277.837522 ms.

Warming up with 2 threads and 11 loops on /home/marlin/mapbench/bin/../maps/EllipseTests-fill-false.ser
cleanup (explicit Full GC): 2,126,004,664 / 2,143,736,336 bytes free.
Warm up took 5456.579179 ms
EllipseTests-fill-false.ser                  	2	22	247.864	248.391	247.903	0.386	247.367	248.853	4.034	22	0.500
cleanup (explicit Full GC): 2,109,641,056 / 2,143,728,080 bytes free.
Initial test: 247.59109 ms.
Testing file /home/marlin/mapbench/bin/../maps/EllipseTests-fill-false.ser for 42 loops ...
cleanup (explicit Full GC): 2,125,632,824 / 2,143,721,888 bytes free.
1 threads and 42 loops per thread, time: 10384.728602 ms
EllipseTests-fill-false.ser                  	1	42	247.187	247.670	247.223	0.348	246.514	248.815	4.046	42	0.500


Loading drawing commands from file: /home/marlin/mapbench/bin/../maps/EllipseTests-fill-true.ser
Loaded DrawingCommands: DrawingCommands{width=2000, height=2000, commands=198}
drawing[EllipseTests-fill-true.ser][width = 2000, height = 2000] ...
cleanup (explicit Full GC): 2,124,579,968 / 2,144,023,744 bytes free.
Initial test: 396.505545 ms.

Warming up with 2 threads and 10 loops on /home/marlin/mapbench/bin/../maps/EllipseTests-fill-true.ser
cleanup (explicit Full GC): 2,125,928,336 / 2,143,659,968 bytes free.
Warm up took 7896.645735 ms
EllipseTests-fill-true.ser                   	2	20	394.631	395.326	394.705	0.477	393.872	395.575	2.534	20	0.286
cleanup (explicit Full GC): 2,109,564,744 / 2,143,651,712 bytes free.
Initial test: 393.883836 ms.
Testing file /home/marlin/mapbench/bin/../maps/EllipseTests-fill-true.ser for 26 loops ...
cleanup (explicit Full GC): 2,125,556,520 / 2,143,645,520 bytes free.
1 threads and 26 loops per thread, time: 10280.390007 ms
EllipseTests-fill-true.ser                   	1	26	395.344	396.100	395.344	0.372	394.711	396.182	2.529	26	0.286


Loading drawing commands from file: /home/marlin/mapbench/bin/../maps/dc_boulder_2013-13-30-06-13-17.ser
Loaded DrawingCommands: DrawingCommands{width=1400, height=800, commands=4398}
drawing[dc_boulder_2013-13-30-06-13-17.ser][width = 1400, height = 800] ...
cleanup (explicit Full GC): 2,119,267,312 / 2,141,663,952 bytes free.
Initial test: 262.100326 ms.

Warming up with 2 threads and 12 loops on /home/marlin/mapbench/bin/../maps/dc_boulder_2013-13-30-06-13-17.ser
cleanup (explicit Full GC): 2,134,041,648 / 2,140,605,520 bytes free.
Warm up took 2807.489007 ms
dc_boulder_2013-13-30-06-13-17.ser           	2	24	93.234	219.756	116.894	46.965	91.629	223.564	10.726	24	1.000
cleanup (explicit Full GC): 2,126,408,752 / 2,140,597,264 bytes free.
Initial test: 92.448543 ms.
Testing file /home/marlin/mapbench/bin/../maps/dc_boulder_2013-13-30-06-13-17.ser for 113 loops ...
cleanup (explicit Full GC): 2,134,021,640 / 2,140,593,136 bytes free.
1 threads and 113 loops per thread, time: 10407.657496 ms
dc_boulder_2013-13-30-06-13-17.ser           	1	113	91.997	92.649	92.088	0.291	91.684	92.964	10.870	113	1.000


Loading drawing commands from file: /home/marlin/mapbench/bin/../maps/dc_boulder_2013-13-30-06-13-20.ser
Loaded DrawingCommands: DrawingCommands{width=1400, height=800, commands=2425}
drawing[dc_boulder_2013-13-30-06-13-20.ser][width = 1400, height = 800] ...
cleanup (explicit Full GC): 2,116,218,376 / 2,142,693,952 bytes free.
Initial test: 49.426259 ms.

Warming up with 2 threads and 63 loops on /home/marlin/mapbench/bin/../maps/dc_boulder_2013-13-30-06-13-20.ser
cleanup (explicit Full GC): 2,136,116,784 / 2,142,328,624 bytes free.
Warm up took 6122.924391 ms
dc_boulder_2013-13-30-06-13-20.ser           	2	126	48.544	49.291	48.582	0.346	48.163	49.850	20.600	126	2.000
cleanup (explicit Full GC): 2,121,834,256 / 2,142,316,240 bytes free.
Initial test: 48.782805 ms.
Testing file /home/marlin/mapbench/bin/../maps/dc_boulder_2013-13-30-06-13-20.ser for 215 loops ...
cleanup (explicit Full GC): 2,135,739,072 / 2,142,310,048 bytes free.
1 threads and 215 loops per thread, time: 10430.713303 ms
dc_boulder_2013-13-30-06-13-20.ser           	1	215	48.439	49.098	48.509	0.334	48.131	50.449	20.645	215	2.000


Loading drawing commands from file: /home/marlin/mapbench/bin/../maps/dc_shp_alllayers_2013-00-30-07-00-43.ser
Loaded DrawingCommands: DrawingCommands{width=1400, height=800, commands=568}
drawing[dc_shp_alllayers_2013-00-30-07-00-43.ser][width = 1400, height = 800] ...
cleanup (explicit Full GC): 2,120,004,240 / 2,143,470,592 bytes free.
Initial test: 38.641275 ms.

Warming up with 2 threads and 81 loops on /home/marlin/mapbench/bin/../maps/dc_shp_alllayers_2013-00-30-07-00-43.ser
cleanup (explicit Full GC): 2,136,895,464 / 2,143,106,816 bytes free.
Warm up took 6193.585543 ms
dc_shp_alllayers_2013-00-30-07-00-43.ser     	2	162	38.072	38.796	38.225	0.279	37.965	39.165	26.266	162	2.000
cleanup (explicit Full GC): 2,129,952,480 / 2,143,096,496 bytes free.
Initial test: 38.637283 ms.
Testing file /home/marlin/mapbench/bin/../maps/dc_shp_alllayers_2013-00-30-07-00-43.ser for 272 loops ...
cleanup (explicit Full GC): 2,136,519,328 / 2,143,090,304 bytes free.
1 threads and 272 loops per thread, time: 10350.528568 ms
dc_shp_alllayers_2013-00-30-07-00-43.ser     	1	272	38.008	38.305	38.050	0.123	37.962	39.019	26.310	272	2.000


Loading drawing commands from file: /home/marlin/mapbench/bin/../maps/dc_shp_alllayers_2013-00-30-07-00-47.ser
Loaded DrawingCommands: DrawingCommands{width=1400, height=800, commands=135213}
drawing[dc_shp_alllayers_2013-00-30-07-00-47.ser][width = 1400, height = 800] ...
cleanup (explicit Full GC): 1,997,131,080 / 2,103,362,576 bytes free.
Initial test: 938.358087 ms.

Warming up with 2 threads and 10 loops on /home/marlin/mapbench/bin/../maps/dc_shp_alllayers_2013-00-30-07-00-47.ser
cleanup (explicit Full GC): 2,080,028,632 / 2,096,022,544 bytes free.
Warm up took 18776.709538 ms
dc_shp_alllayers_2013-00-30-07-00-47.ser     	2	20	938.460	938.823	938.432	0.275	937.915	938.830	1.066	20	0.125
cleanup (explicit Full GC): 1,999,006,352 / 2,096,018,416 bytes free.
Initial test: 938.229703 ms.
Testing file /home/marlin/mapbench/bin/../maps/dc_shp_alllayers_2013-00-30-07-00-47.ser for 11 loops ...
cleanup (explicit Full GC): 2,076,882,560 / 2,096,012,224 bytes free.
1 threads and 11 loops per thread, time: 10329.980365 ms
dc_shp_alllayers_2013-00-30-07-00-47.ser     	1	11	938.503	938.800	938.456	0.259	937.959	938.923	1.066	11	0.125


Loading drawing commands from file: /home/marlin/mapbench/bin/../maps/dc_spearfish_2013-11-30-06-11-15.ser
Loaded DrawingCommands: DrawingCommands{width=512, height=359, commands=1232}
drawing[dc_spearfish_2013-11-30-06-11-15.ser][width = 512, height = 359] ...
cleanup (explicit Full GC): 2,041,227,000 / 2,142,679,264 bytes free.
Initial test: 15.580931 ms.

Warming up with 2 threads and 202 loops on /home/marlin/mapbench/bin/../maps/dc_spearfish_2013-11-30-06-11-15.ser
cleanup (explicit Full GC): 2,140,582,112 / 2,142,313,424 bytes free.
Warm up took 5320.469907 ms
dc_spearfish_2013-11-30-06-11-15.ser         	2	404	13.105	13.573	13.168	0.157	13.075	14.014	76.304	404	10.000
cleanup (explicit Full GC): 2,124,490,272 / 2,142,299,856 bytes free.
Initial test: 13.121616 ms.
Testing file /home/marlin/mapbench/bin/../maps/dc_spearfish_2013-11-30-06-11-15.ser for 802 loops ...
cleanup (explicit Full GC): 2,140,202,704 / 2,142,295,728 bytes free.
1 threads and 802 loops per thread, time: 10557.547048 ms
dc_spearfish_2013-11-30-06-11-15.ser         	1	802	13.104	13.569	13.163	0.147	13.072	13.933	76.310	802	10.000


Loading drawing commands from file: /home/marlin/mapbench/bin/../maps/dc_spearfish_2013-11-30-06-11-19.ser
Loaded DrawingCommands: DrawingCommands{width=512, height=359, commands=349}
drawing[dc_spearfish_2013-11-30-06-11-19.ser][width = 512, height = 359] ...
cleanup (explicit Full GC): 2,107,695,272 / 2,142,026,928 bytes free.
Initial test: 6.678169 ms.

Warming up with 2 threads and 472 loops on /home/marlin/mapbench/bin/../maps/dc_spearfish_2013-11-30-06-11-19.ser
cleanup (explicit Full GC): 2,139,929,864 / 2,141,663,152 bytes free.
Warm up took 6060.953531 ms
dc_spearfish_2013-11-30-06-11-19.ser         	2	944	6.393	6.495	6.420	0.045	6.368	6.733	156.416	944	10.000
cleanup (explicit Full GC): 2,129,086,176 / 2,141,641,136 bytes free.
Initial test: 6.405447 ms.
Testing file /home/marlin/mapbench/bin/../maps/dc_spearfish_2013-11-30-06-11-19.ser for 1643 loops ...
cleanup (explicit Full GC): 2,139,544,296 / 2,141,634,944 bytes free.
1 threads and 1643 loops per thread, time: 10544.597922 ms
dc_spearfish_2013-11-30-06-11-19.ser         	1	1643	6.393	6.492	6.417	0.040	6.371	6.738	156.421	1643	10.000


Loading drawing commands from file: /home/marlin/mapbench/bin/../maps/dc_topp:states_2013-11-30-06-11-06.ser
Loaded DrawingCommands: DrawingCommands{width=780, height=330, commands=119}
drawing[dc_topp:states_2013-11-30-06-11-06.ser][width = 780, height = 330] ...
cleanup (explicit Full GC): 2,120,671,712 / 2,141,740,544 bytes free.
Initial test: 12.247437 ms.

Warming up with 2 threads and 257 loops on /home/marlin/mapbench/bin/../maps/dc_topp:states_2013-11-30-06-11-06.ser
cleanup (explicit Full GC): 2,139,643,392 / 2,141,649,696 bytes free.
Warm up took 6258.975109 ms
dc_topp:states_2013-11-30-06-11-06.ser       	2	514	12.173	12.249	12.175	0.056	12.097	12.610	82.151	514	1.000
cleanup (explicit Full GC): 2,137,458,368 / 2,141,626,992 bytes free.
Initial test: 12.151729 ms.
Testing file /home/marlin/mapbench/bin/../maps/dc_topp:states_2013-11-30-06-11-06.ser for 866 loops ...
cleanup (explicit Full GC): 2,139,529,840 / 2,141,620,800 bytes free.
1 threads and 866 loops per thread, time: 10503.259566 ms
dc_topp:states_2013-11-30-06-11-06.ser       	1	866	12.122	12.140	12.128	0.038	12.098	12.481	82.491	866	1.000


Loading drawing commands from file: /home/marlin/mapbench/bin/../maps/dc_topp:states_2013-11-30-06-11-07.ser
Loaded DrawingCommands: DrawingCommands{width=780, height=330, commands=144}
drawing[dc_topp:states_2013-11-30-06-11-07.ser][width = 780, height = 330] ...
cleanup (explicit Full GC): 2,135,332,336 / 2,141,739,520 bytes free.
Initial test: 7.920349 ms.

Warming up with 2 threads and 398 loops on /home/marlin/mapbench/bin/../maps/dc_topp:states_2013-11-30-06-11-07.ser
cleanup (explicit Full GC): 2,139,642,368 / 2,141,379,872 bytes free.
Warm up took 6233.659056 ms
dc_topp:states_2013-11-30-06-11-07.ser       	2	796	7.842	7.897	7.830	0.039	7.779	8.031	127.518	796	1.000
cleanup (explicit Full GC): 2,135,088,816 / 2,141,359,040 bytes free.
Initial test: 7.893764 ms.
Testing file /home/marlin/mapbench/bin/../maps/dc_topp:states_2013-11-30-06-11-07.ser for 1333 loops ...
cleanup (explicit Full GC): 2,139,261,992 / 2,141,354,912 bytes free.
1 threads and 1333 loops per thread, time: 10438.817878 ms
dc_topp:states_2013-11-30-06-11-07.ser       	1	1333	7.841	7.901	7.830	0.041	7.775	8.208	127.527	1333	1.000


Loading drawing commands from file: /home/marlin/mapbench/bin/../maps/test_z_625k.ser
Loaded DrawingCommands: DrawingCommands{width=1272, height=1261, commands=23345}
drawing[test_z_625k.ser][width = 1272, height = 1261] ...
cleanup (explicit Full GC): 2,107,964,152 / 2,134,140,488 bytes free.
Initial test: 159.262436 ms.

Warming up with 2 threads and 19 loops on /home/marlin/mapbench/bin/../maps/test_z_625k.ser
cleanup (explicit Full GC): 2,122,482,192 / 2,132,743,016 bytes free.
Warm up took 6083.176854 ms
test_z_625k.ser                              	2	38	159.986	160.560	160.021	0.395	159.510	161.301	6.251	38	0.667
cleanup (explicit Full GC): 2,089,506,760 / 2,132,734,760 bytes free.
Initial test: 160.372652 ms.
Testing file /home/marlin/mapbench/bin/../maps/test_z_625k.ser for 65 loops ...
cleanup (explicit Full GC): 2,122,128,888 / 2,132,728,568 bytes free.
1 threads and 65 loops per thread, time: 10391.651564 ms
test_z_625k.ser                              	1	65	159.711	160.370	159.842	0.360	159.475	161.482	6.261	65	0.667


WARMUP results:
Test                                         	Threads	Ops	Med	Pct95	Avg	StdDev	Min	Max	FPS(med)	TotalOps	Scale	[ms/op]
<<< Calib 1
[calibration]                                	1	3000	0.490	0.509	0.494	0.015	0.489	0.735	2041.771	3000	1.000
>>> Calib 1
<<< Warmup 1
CircleTests.ser                              	1	80	69.939	77.155	75.084	29.700	69.453	305.446	14.298	80	2.000
>>> Warmup 1
<<< Warmup 2
CircleTests.ser                              	1	160	69.469	70.131	69.578	0.268	69.188	70.482	14.395	160	2.000
>>> Warmup 2
CircleTests.ser                              	2	90	69.579	70.155	69.654	0.281	69.291	70.586	14.372	90	2.000
EllipseTests-fill-false.ser                  	2	22	247.864	248.391	247.903	0.386	247.367	248.853	4.034	22	0.500
EllipseTests-fill-true.ser                   	2	20	394.631	395.326	394.705	0.477	393.872	395.575	2.534	20	0.286
dc_boulder_2013-13-30-06-13-17.ser           	2	24	93.234	219.756	116.894	46.965	91.629	223.564	10.726	24	1.000
dc_boulder_2013-13-30-06-13-20.ser           	2	126	48.544	49.291	48.582	0.346	48.163	49.850	20.600	126	2.000
dc_shp_alllayers_2013-00-30-07-00-43.ser     	2	162	38.072	38.796	38.225	0.279	37.965	39.165	26.266	162	2.000
dc_shp_alllayers_2013-00-30-07-00-47.ser     	2	20	938.460	938.823	938.432	0.275	937.915	938.830	1.066	20	0.125
dc_spearfish_2013-11-30-06-11-15.ser         	2	404	13.105	13.573	13.168	0.157	13.075	14.014	76.304	404	10.000
dc_spearfish_2013-11-30-06-11-19.ser         	2	944	6.393	6.495	6.420	0.045	6.368	6.733	156.416	944	10.000
dc_topp:states_2013-11-30-06-11-06.ser       	2	514	12.173	12.249	12.175	0.056	12.097	12.610	82.151	514	1.000
dc_topp:states_2013-11-30-06-11-07.ser       	2	796	7.842	7.897	7.830	0.039	7.779	8.031	127.518	796	1.000
test_z_625k.ser                              	2	38	159.986	160.560	160.021	0.395	159.510	161.301	6.251	38	0.667

TEST results:
Test                                         	Threads	Ops	Med	Pct95	Avg	StdDev	Min	Max	FPS(med)	TotalOps	Scale	[ms/op]
CircleTests.ser                              	1	151	69.156	69.576	69.237	0.200	68.971	69.851	14.460	151	2.000
EllipseTests-fill-false.ser                  	1	42	247.187	247.670	247.223	0.348	246.514	248.815	4.046	42	0.500
EllipseTests-fill-true.ser                   	1	26	395.344	396.100	395.344	0.372	394.711	396.182	2.529	26	0.286
dc_boulder_2013-13-30-06-13-17.ser           	1	113	91.997	92.649	92.088	0.291	91.684	92.964	10.870	113	1.000
dc_boulder_2013-13-30-06-13-20.ser           	1	215	48.439	49.098	48.509	0.334	48.131	50.449	20.645	215	2.000
dc_shp_alllayers_2013-00-30-07-00-43.ser     	1	272	38.008	38.305	38.050	0.123	37.962	39.019	26.310	272	2.000
dc_shp_alllayers_2013-00-30-07-00-47.ser     	1	11	938.503	938.800	938.456	0.259	937.959	938.923	1.066	11	0.125
dc_spearfish_2013-11-30-06-11-15.ser         	1	802	13.104	13.569	13.163	0.147	13.072	13.933	76.310	802	10.000
dc_spearfish_2013-11-30-06-11-19.ser         	1	1643	6.393	6.492	6.417	0.040	6.371	6.738	156.421	1643	10.000
dc_topp:states_2013-11-30-06-11-06.ser       	1	866	12.122	12.140	12.128	0.038	12.098	12.481	82.491	866	1.000
dc_topp:states_2013-11-30-06-11-07.ser       	1	1333	7.841	7.901	7.830	0.041	7.775	8.208	127.527	1333	1.000
test_z_625k.ser                              	1	65	159.711	160.370	159.842	0.360	159.475	161.482	6.261	65	0.667

Scores:
Tests	12	12	
Threads	1	1	
Med	89.873	89.873	
Pct95	90.711	90.711	
FPS	44.078	44.078	

[272,466s][info][gc,stats] 
[272,466s][info][gc,stats] GC STATISTICS:
[272,466s][info][gc,stats]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[272,466s][info][gc,stats]         and post-safepoint housekeeping. Use -XX:+PrintSafepointStatistics to dissect.
[272,466s][info][gc,stats]   "(N)" (net) pauses are the times spent in the actual GC code.
[272,466s][info][gc,stats]   "a" is average time for each phase, look at levels to see if average makes sense.
[272,466s][info][gc,stats]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[272,466s][info][gc,stats] 
[272,466s][info][gc,stats] Total Pauses (G)            =     0,34 s (a =      823 us) (n =   414) (lvls, us =       61,      217,      480,     1152,    10763)
[272,466s][info][gc,stats] Total Pauses (N)            =     0,26 s (a =      624 us) (n =   414) (lvls, us =       13,      115,      238,      980,     9542)
[272,466s][info][gc,stats] Pause Init Mark (G)         =     0,07 s (a =      435 us) (n =   153) (lvls, us =      141,      277,      355,      541,     3057)
[272,466s][info][gc,stats] Pause Init Mark (N)         =     0,04 s (a =      246 us) (n =   153) (lvls, us =      102,      148,      199,      340,      713)
[272,466s][info][gc,stats]   Make Parsable             =     0,00 s (a =        2 us) (n =   153) (lvls, us =        1,        2,        2,        3,       15)
[272,466s][info][gc,stats]   Clear Liveness            =     0,01 s (a =       68 us) (n =   153) (lvls, us =       15,       25,       50,      107,      206)
[272,466s][info][gc,stats]   Scan Roots                =     0,02 s (a =      157 us) (n =   153) (lvls, us =       77,      102,      133,      191,      532)
[272,466s][info][gc,stats]     S: Thread Roots         =     0,00 s (a =       24 us) (n =   153) (lvls, us =       10,       13,       15,       17,      296)
[272,466s][info][gc,stats]     S: Universe Roots       =     0,00 s (a =        2 us) (n =   153) (lvls, us =        2,        2,        2,        2,       32)
[272,466s][info][gc,stats]     S: JNI Roots            =     0,00 s (a =        2 us) (n =   153) (lvls, us =        1,        1,        1,        1,       11)
[272,466s][info][gc,stats]     S: Synchronizer Roots   =     0,00 s (a =        0 us) (n =   153) (lvls, us =        0,        0,        0,        0,        1)
[272,466s][info][gc,stats]     S: Management Roots     =     0,00 s (a =        2 us) (n =   153) (lvls, us =        1,        1,        1,        1,       17)
[272,466s][info][gc,stats]     S: System Dict Roots    =     0,00 s (a =        8 us) (n =   153) (lvls, us =        4,        5,        5,        6,       38)
[272,466s][info][gc,stats]     S: CLDG Roots           =     0,00 s (a =       31 us) (n =   153) (lvls, us =       24,       29,       30,       31,       67)
[272,466s][info][gc,stats]     S: JVMTI Roots          =     0,00 s (a =        0 us) (n =   153) (lvls, us =        0,        0,        0,        0,        1)
[272,466s][info][gc,stats]   Resize TLABs              =     0,00 s (a =        4 us) (n =   153) (lvls, us =        1,        1,        2,        2,       32)
[272,466s][info][gc,stats] Pause Final Mark (G)        =     0,25 s (a =     1608 us) (n =   153) (lvls, us =      512,     1074,     1367,     1660,    10761)
[272,466s][info][gc,stats] Pause Final Mark (N)        =     0,21 s (a =     1397 us) (n =   153) (lvls, us =      443,      926,     1172,     1465,     9541)
[272,466s][info][gc,stats]   Finish Queues             =     0,03 s (a =      224 us) (n =   153) (lvls, us =       15,       26,       64,      109,     7321)
[272,467s][info][gc,stats]   Weak References           =     0,01 s (a =       47 us) (n =   153) (lvls, us =       16,       22,       24,       80,      163)
[272,467s][info][gc,stats]     Process                 =     0,01 s (a =       43 us) (n =   153) (lvls, us =       14,       20,       21,       78,      160)
[272,467s][info][gc,stats]   System Purge              =     0,01 s (a =       79 us) (n =   153) (lvls, us =       36,       53,       70,       94,      171)
[272,467s][info][gc,stats]     Unload Classes          =     0,00 s (a =        6 us) (n =   153) (lvls, us =        3,        4,        5,        6,       22)
[272,467s][info][gc,stats]     Parallel Cleanup        =     0,14 s (a =      463 us) (n =   306) (lvls, us =       36,       70,      168,      668,     6030)
[272,467s][info][gc,stats]     CLDG                    =     0,00 s (a =        0 us) (n =   153) (lvls, us =        0,        0,        0,        0,        1)
[272,467s][info][gc,stats]   Complete Liveness         =     0,01 s (a =       54 us) (n =   153) (lvls, us =       16,       28,       42,       68,      169)
[272,467s][info][gc,stats]   Prepare Evacuation        =     0,01 s (a =       84 us) (n =   153) (lvls, us =       67,       76,       83,       89,      123)
[272,467s][info][gc,stats]   Initial Evacuation        =     0,01 s (a =      116 us) (n =    54) (lvls, us =       67,       82,      107,      119,      229)
[272,467s][info][gc,stats]     E: Thread Roots         =     0,00 s (a =       15 us) (n =    54) (lvls, us =       11,       14,       15,       16,       25)
[272,467s][info][gc,stats]     E: Code Cache Roots     =     0,00 s (a =       12 us) (n =    54) (lvls, us =        6,        8,        8,       12,       64)
[272,467s][info][gc,stats]     E: Universe Roots       =     0,00 s (a =        7 us) (n =    54) (lvls, us =        1,        3,        4,        8,       27)
[272,467s][info][gc,stats]     E: JVMTI Weak Roots     =     0,00 s (a =        0 us) (n =    54) (lvls, us =        0,        0,        0,        0,        0)
[272,467s][info][gc,stats]     E: JFR Weak Roots       =     0,00 s (a =        0 us) (n =    54) (lvls, us =        0,        0,        0,        0,        0)
[272,467s][info][gc,stats]     E: Synchronizer Roots   =     0,00 s (a =        0 us) (n =    54) (lvls, us =        0,        0,        0,        0,        0)
[272,467s][info][gc,stats]     E: Management Roots     =     0,00 s (a =        1 us) (n =    54) (lvls, us =        1,        1,        1,        1,        1)
[272,467s][info][gc,stats]     E: System Dict Roots    =     0,00 s (a =        6 us) (n =    54) (lvls, us =        4,        4,        4,        5,       27)
[272,467s][info][gc,stats]     E: JVMTI Roots          =     0,00 s (a =        0 us) (n =    54) (lvls, us =        0,        0,        0,        0,        1)
[272,467s][info][gc,stats] Pause Init  Update Refs (G) =     0,01 s (a =      132 us) (n =    54) (lvls, us =       60,       77,      117,      139,      382)
[272,467s][info][gc,stats] Pause Init  Update Refs (N) =     0,00 s (a =       24 us) (n =    54) (lvls, us =       12,       19,       24,       26,       53)
[272,467s][info][gc,stats] Pause Final Update Refs (G) =     0,02 s (a =      383 us) (n =    54) (lvls, us =       94,      143,      188,      268,     6798)
[272,467s][info][gc,stats] Pause Final Update Refs (N) =     0,01 s (a =       98 us) (n =    54) (lvls, us =       59,       66,       78,      109,      255)
[272,467s][info][gc,stats]     UR: Thread Roots        =     0,00 s (a =       14 us) (n =    54) (lvls, us =        8,       11,       12,       15,       35)
[272,467s][info][gc,stats]   Recycle                   =     0,00 s (a =       40 us) (n =    54) (lvls, us =       30,       33,       38,       42,       72)
[272,467s][info][gc,stats] Concurrent Reset            =     0,03 s (a =      205 us) (n =   153) (lvls, us =      111,      152,      199,      238,      420)
[272,467s][info][gc,stats] Concurrent Marking          =     1,09 s (a =     7122 us) (n =   153) (lvls, us =     2168,     2637,     2852,     3477,    56395)
[272,467s][info][gc,stats] Concurrent Precleaning      =     0,02 s (a =      110 us) (n =   153) (lvls, us =       44,       82,      109,      141,      176)
[272,467s][info][gc,stats] Concurrent Roots            =     0,01 s (a =       54 us) (n =   153) (lvls, us =        1,        3,        4,       71,     1497)
[272,467s][info][gc,stats] Concurrent Evacuation       =     0,08 s (a =     1480 us) (n =    54) (lvls, us =       19,       43,       72,      178,    59392)
[272,467s][info][gc,stats] Concurrent Update Refs      =     0,29 s (a =     5379 us) (n =    54) (lvls, us =     1797,     1875,     1992,     2832,    46642)
[272,467s][info][gc,stats] Concurrent Cleanup          =     0,04 s (a =      182 us) (n =   207) (lvls, us =      174,      176,      180,      186,      302)
[272,467s][info][gc,stats] 
[272,467s][info][gc,stats] 
[272,467s][info][gc,stats] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[272,467s][info][gc,stats] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[272,467s][info][gc,stats] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[272,467s][info][gc,stats] to avoid Degenerated and Full GC cycles.
[272,467s][info][gc,stats] 
[272,467s][info][gc,stats]   153 successful concurrent GCs
[272,467s][info][gc,stats]     153 invoked explicitly
[272,467s][info][gc,stats]       0 invoked implicitly
[272,467s][info][gc,stats] 
[272,467s][info][gc,stats]     0 Degenerated GCs
[272,467s][info][gc,stats]       0 caused by allocation failure
[272,467s][info][gc,stats]       0 upgraded to Full GC
[272,467s][info][gc,stats] 
[272,467s][info][gc,stats]     0 Full GCs
[272,467s][info][gc,stats]       0 invoked explicitly
[272,467s][info][gc,stats]       0 invoked implicitly
[272,467s][info][gc,stats]       0 caused by allocation failure
[272,467s][info][gc,stats]       0 upgraded from Degenerated GC
[272,467s][info][gc,stats] 
[272,467s][info][gc,stats] 
[272,467s][info][gc,stats] ALLOCATION PACING:
[272,467s][info][gc,stats] 
[272,467s][info][gc,stats] Max pacing delay is set for 10 ms.
[272,467s][info][gc,stats] 
[272,467s][info][gc,stats] Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[272,467s][info][gc,stats] from the STW pause times. Pacing affects the individual threads, and so it would also be
[272,467s][info][gc,stats] invisible to the usual profiling tools, but would add up to end-to-end application latency.
[272,467s][info][gc,stats] Raise max pacing delay with care.
[272,467s][info][gc,stats] 
[272,467s][info][gc,stats] Actual pacing delays histogram:
[272,467s][info][gc,stats] 
[272,467s][info][gc,stats]       From -         To         Count         Sum
[272,467s][info][gc,stats]                   Total:            0           0 ms
[272,467s][info][gc,stats] 
[272,467s][info][gc,stats] Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[272,467s][info][gc,stats] observed pacing delays may be higher than the threshold when paced thread spent more
[272,467s][info][gc,stats] time in the pacing code. It usually happens when thread is de-scheduled while paced,
[272,467s][info][gc,stats] OS takes longer to unblock the thread, or JVM experiences an STW pause.
[272,467s][info][gc,stats] 
[272,467s][info][gc,stats] 
[272,467s][info][gc,stats] 
[272,467s][info][gc,stats]   Allocation tracing is disabled, use -XX:+ShenandoahAllocationTrace to enable.

