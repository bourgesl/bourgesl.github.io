# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 0.00% complete, ETA 01:19:20
# Fork: 1 of 1
# Warmup Iteration   1: 2.742 us/op
Iteration   1: 2.538 us/op
Iteration   2: 2.431 us/op
Iteration   3: 2.431 us/op
Iteration   4: 2.438 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  2.460 ±(99.9%) 0.340 us/op [Average]
  (min, avg, max) = (2.431, 2.460, 2.538), stdev = 0.053
  CI (99.9%): [2.119, 2.800] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 0.36% complete, ETA 01:20:58
# Fork: 1 of 1
# Warmup Iteration   1: 10.626 us/op
Iteration   1: 10.052 us/op
Iteration   2: 10.102 us/op
Iteration   3: 9.703 us/op
Iteration   4: 10.560 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  10.104 ±(99.9%) 2.273 us/op [Average]
  (min, avg, max) = (9.703, 10.104, 10.560), stdev = 0.352
  CI (99.9%): [7.831, 12.377] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 0.71% complete, ETA 01:20:34
# Fork: 1 of 1
# Warmup Iteration   1: 54.254 us/op
Iteration   1: 55.845 us/op
Iteration   2: 55.756 us/op
Iteration   3: 56.975 us/op
Iteration   4: 55.923 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  56.125 ±(99.9%) 3.690 us/op [Average]
  (min, avg, max) = (55.756, 56.125, 56.975), stdev = 0.571
  CI (99.9%): [52.435, 59.815] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 1.07% complete, ETA 01:20:11
# Fork: 1 of 1
# Warmup Iteration   1: 293.440 us/op
Iteration   1: 276.603 us/op
Iteration   2: 276.583 us/op
Iteration   3: 276.998 us/op
Iteration   4: 276.582 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  276.692 ±(99.9%) 1.322 us/op [Average]
  (min, avg, max) = (276.582, 276.692, 276.998), stdev = 0.205
  CI (99.9%): [275.370, 278.013] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 1.43% complete, ETA 01:19:52
# Fork: 1 of 1
# Warmup Iteration   1: 2117.233 us/op
Iteration   1: 1815.763 us/op
Iteration   2: 1809.512 us/op
Iteration   3: 1810.012 us/op
Iteration   4: 1812.968 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  1812.064 ±(99.9%) 18.738 us/op [Average]
  (min, avg, max) = (1809.512, 1812.064, 1815.763), stdev = 2.900
  CI (99.9%): [1793.326, 1830.801] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 1.79% complete, ETA 01:19:39
# Fork: 1 of 1
# Warmup Iteration   1: 1.511 us/op
Iteration   1: 1.291 us/op
Iteration   2: 1.152 us/op
Iteration   3: 1.145 us/op
Iteration   4: 1.157 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  1.186 ±(99.9%) 0.453 us/op [Average]
  (min, avg, max) = (1.145, 1.186, 1.291), stdev = 0.070
  CI (99.9%): [0.733, 1.640] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 2.14% complete, ETA 01:19:20
# Fork: 1 of 1
# Warmup Iteration   1: 8.138 us/op
Iteration   1: 7.335 us/op
Iteration   2: 8.109 us/op
Iteration   3: 7.882 us/op
Iteration   4: 8.144 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  7.867 ±(99.9%) 2.415 us/op [Average]
  (min, avg, max) = (7.335, 7.867, 8.144), stdev = 0.374
  CI (99.9%): [5.453, 10.282] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 2.50% complete, ETA 01:19:01
# Fork: 1 of 1
# Warmup Iteration   1: 57.182 us/op
Iteration   1: 51.317 us/op
Iteration   2: 50.660 us/op
Iteration   3: 51.771 us/op
Iteration   4: 50.251 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  51.000 ±(99.9%) 4.369 us/op [Average]
  (min, avg, max) = (50.251, 51.000, 51.771), stdev = 0.676
  CI (99.9%): [46.631, 55.369] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 2.86% complete, ETA 01:18:43
# Fork: 1 of 1
# Warmup Iteration   1: 344.934 us/op
Iteration   1: 328.997 us/op
Iteration   2: 329.218 us/op
Iteration   3: 328.939 us/op
Iteration   4: 327.871 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  328.756 ±(99.9%) 3.893 us/op [Average]
  (min, avg, max) = (327.871, 328.756, 329.218), stdev = 0.602
  CI (99.9%): [324.864, 332.649] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 3.21% complete, ETA 01:18:25
# Fork: 1 of 1
# Warmup Iteration   1: 2456.905 us/op
Iteration   1: 2228.090 us/op
Iteration   2: 2229.519 us/op
Iteration   3: 2232.706 us/op
Iteration   4: 2235.733 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  2231.512 ±(99.9%) 22.047 us/op [Average]
  (min, avg, max) = (2228.090, 2231.512, 2235.733), stdev = 3.412
  CI (99.9%): [2209.465, 2253.559] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 3.57% complete, ETA 01:18:11
# Fork: 1 of 1
# Warmup Iteration   1: 2.531 us/op
Iteration   1: 2.355 us/op
Iteration   2: 2.366 us/op
Iteration   3: 2.367 us/op
Iteration   4: 2.372 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  2.365 ±(99.9%) 0.048 us/op [Average]
  (min, avg, max) = (2.355, 2.365, 2.372), stdev = 0.007
  CI (99.9%): [2.317, 2.413] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 3.93% complete, ETA 01:17:53
# Fork: 1 of 1
# Warmup Iteration   1: 9.671 us/op
Iteration   1: 9.793 us/op
Iteration   2: 10.266 us/op
Iteration   3: 10.270 us/op
Iteration   4: 10.063 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  10.098 ±(99.9%) 1.455 us/op [Average]
  (min, avg, max) = (9.793, 10.098, 10.270), stdev = 0.225
  CI (99.9%): [8.643, 11.553] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 4.29% complete, ETA 01:17:35
# Fork: 1 of 1
# Warmup Iteration   1: 52.080 us/op
Iteration   1: 50.615 us/op
Iteration   2: 50.644 us/op
Iteration   3: 50.309 us/op
Iteration   4: 50.489 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  50.514 ±(99.9%) 0.984 us/op [Average]
  (min, avg, max) = (50.309, 50.514, 50.644), stdev = 0.152
  CI (99.9%): [49.530, 51.499] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 4.64% complete, ETA 01:17:17
# Fork: 1 of 1
# Warmup Iteration   1: 266.901 us/op
Iteration   1: 260.932 us/op
Iteration   2: 264.464 us/op
Iteration   3: 266.430 us/op
Iteration   4: 265.865 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  264.423 ±(99.9%) 15.960 us/op [Average]
  (min, avg, max) = (260.932, 264.423, 266.430), stdev = 2.470
  CI (99.9%): [248.463, 280.382] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 5.00% complete, ETA 01:16:59
# Fork: 1 of 1
# Warmup Iteration   1: 1806.697 us/op
Iteration   1: 1725.590 us/op
Iteration   2: 1725.572 us/op
Iteration   3: 1722.093 us/op
Iteration   4: 1720.416 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  1723.418 ±(99.9%) 16.737 us/op [Average]
  (min, avg, max) = (1720.416, 1723.418, 1725.590), stdev = 2.590
  CI (99.9%): [1706.680, 1740.155] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 5.36% complete, ETA 01:16:41
# Fork: 1 of 1
# Warmup Iteration   1: 2.488 us/op
Iteration   1: 2.331 us/op
Iteration   2: 2.184 us/op
Iteration   3: 2.193 us/op
Iteration   4: 2.191 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  2.225 ±(99.9%) 0.457 us/op [Average]
  (min, avg, max) = (2.184, 2.225, 2.331), stdev = 0.071
  CI (99.9%): [1.768, 2.682] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 5.71% complete, ETA 01:16:24
# Fork: 1 of 1
# Warmup Iteration   1: 10.067 us/op
Iteration   1: 9.477 us/op
Iteration   2: 9.728 us/op
Iteration   3: 9.365 us/op
Iteration   4: 9.702 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  9.568 ±(99.9%) 1.139 us/op [Average]
  (min, avg, max) = (9.365, 9.568, 9.728), stdev = 0.176
  CI (99.9%): [8.428, 10.707] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 6.07% complete, ETA 01:16:06
# Fork: 1 of 1
# Warmup Iteration   1: 53.933 us/op
Iteration   1: 54.689 us/op
Iteration   2: 55.043 us/op
Iteration   3: 54.991 us/op
Iteration   4: 56.196 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  55.230 ±(99.9%) 4.283 us/op [Average]
  (min, avg, max) = (54.689, 55.230, 56.196), stdev = 0.663
  CI (99.9%): [50.947, 59.512] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 6.43% complete, ETA 01:15:48
# Fork: 1 of 1
# Warmup Iteration   1: 278.092 us/op
Iteration   1: 260.478 us/op
Iteration   2: 260.472 us/op
Iteration   3: 260.245 us/op
Iteration   4: 260.291 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  260.371 ±(99.9%) 0.781 us/op [Average]
  (min, avg, max) = (260.245, 260.371, 260.478), stdev = 0.121
  CI (99.9%): [259.591, 261.152] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 6.79% complete, ETA 01:15:30
# Fork: 1 of 1
# Warmup Iteration   1: 2050.522 us/op
Iteration   1: 1724.123 us/op
Iteration   2: 1727.846 us/op
Iteration   3: 1725.561 us/op
Iteration   4: 1720.435 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  1724.491 ±(99.9%) 20.087 us/op [Average]
  (min, avg, max) = (1720.435, 1724.491, 1727.846), stdev = 3.109
  CI (99.9%): [1704.404, 1744.579] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 7.14% complete, ETA 01:15:14
# Fork: 1 of 1
# Warmup Iteration   1: 2.731 us/op
Iteration   1: 2.540 us/op
Iteration   2: 2.425 us/op
Iteration   3: 2.431 us/op
Iteration   4: 2.432 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  2.457 ±(99.9%) 0.359 us/op [Average]
  (min, avg, max) = (2.425, 2.457, 2.540), stdev = 0.056
  CI (99.9%): [2.098, 2.816] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 7.50% complete, ETA 01:14:56
# Fork: 1 of 1
# Warmup Iteration   1: 10.692 us/op
Iteration   1: 10.071 us/op
Iteration   2: 10.057 us/op
Iteration   3: 9.708 us/op
Iteration   4: 10.397 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  10.058 ±(99.9%) 1.817 us/op [Average]
  (min, avg, max) = (9.708, 10.058, 10.397), stdev = 0.281
  CI (99.9%): [8.242, 11.875] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 7.86% complete, ETA 01:14:38
# Fork: 1 of 1
# Warmup Iteration   1: 55.156 us/op
Iteration   1: 55.685 us/op
Iteration   2: 55.866 us/op
Iteration   3: 55.918 us/op
Iteration   4: 56.883 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  56.088 ±(99.9%) 3.483 us/op [Average]
  (min, avg, max) = (55.685, 56.088, 56.883), stdev = 0.539
  CI (99.9%): [52.605, 59.571] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 8.21% complete, ETA 01:14:20
# Fork: 1 of 1
# Warmup Iteration   1: 295.835 us/op
Iteration   1: 276.969 us/op
Iteration   2: 276.923 us/op
Iteration   3: 276.688 us/op
Iteration   4: 277.314 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  276.973 ±(99.9%) 1.668 us/op [Average]
  (min, avg, max) = (276.688, 276.973, 277.314), stdev = 0.258
  CI (99.9%): [275.305, 278.642] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 8.57% complete, ETA 01:14:03
# Fork: 1 of 1
# Warmup Iteration   1: 2129.013 us/op
Iteration   1: 1819.630 us/op
Iteration   2: 1817.393 us/op
Iteration   3: 1817.420 us/op
Iteration   4: 1812.278 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  1816.680 ±(99.9%) 20.138 us/op [Average]
  (min, avg, max) = (1812.278, 1816.680, 1819.630), stdev = 3.116
  CI (99.9%): [1796.543, 1836.818] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 8.93% complete, ETA 01:13:45
# Fork: 1 of 1
# Warmup Iteration   1: 1.533 us/op
Iteration   1: 1.293 us/op
Iteration   2: 1.153 us/op
Iteration   3: 1.143 us/op
Iteration   4: 1.155 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  1.186 ±(99.9%) 0.462 us/op [Average]
  (min, avg, max) = (1.143, 1.186, 1.293), stdev = 0.071
  CI (99.9%): [0.724, 1.648] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 9.29% complete, ETA 01:13:28
# Fork: 1 of 1
# Warmup Iteration   1: 8.111 us/op
Iteration   1: 7.339 us/op
Iteration   2: 8.088 us/op
Iteration   3: 7.865 us/op
Iteration   4: 8.131 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  7.856 ±(99.9%) 2.351 us/op [Average]
  (min, avg, max) = (7.339, 7.856, 8.131), stdev = 0.364
  CI (99.9%): [5.505, 10.206] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 9.64% complete, ETA 01:13:10
# Fork: 1 of 1
# Warmup Iteration   1: 57.068 us/op
Iteration   1: 51.268 us/op
Iteration   2: 50.804 us/op
Iteration   3: 50.698 us/op
Iteration   4: 51.691 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  51.115 ±(99.9%) 2.951 us/op [Average]
  (min, avg, max) = (50.698, 51.115, 51.691), stdev = 0.457
  CI (99.9%): [48.164, 54.067] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 10.00% complete, ETA 01:12:53
# Fork: 1 of 1
# Warmup Iteration   1: 345.457 us/op
Iteration   1: 329.036 us/op
Iteration   2: 327.995 us/op
Iteration   3: 327.950 us/op
Iteration   4: 327.945 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  328.231 ±(99.9%) 3.469 us/op [Average]
  (min, avg, max) = (327.945, 328.231, 329.036), stdev = 0.537
  CI (99.9%): [324.762, 331.701] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 10.36% complete, ETA 01:12:35
# Fork: 1 of 1
# Warmup Iteration   1: 2446.799 us/op
Iteration   1: 2227.503 us/op
Iteration   2: 2234.839 us/op
Iteration   3: 2227.598 us/op
Iteration   4: 2224.268 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  2228.552 ±(99.9%) 28.870 us/op [Average]
  (min, avg, max) = (2224.268, 2228.552, 2234.839), stdev = 4.468
  CI (99.9%): [2199.681, 2257.422] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 10.71% complete, ETA 01:12:19
# Fork: 1 of 1
# Warmup Iteration   1: 2.523 us/op
Iteration   1: 2.345 us/op
Iteration   2: 2.367 us/op
Iteration   3: 2.367 us/op
Iteration   4: 2.368 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  2.362 ±(99.9%) 0.073 us/op [Average]
  (min, avg, max) = (2.345, 2.362, 2.368), stdev = 0.011
  CI (99.9%): [2.289, 2.435] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 11.07% complete, ETA 01:12:01
# Fork: 1 of 1
# Warmup Iteration   1: 9.705 us/op
Iteration   1: 9.780 us/op
Iteration   2: 10.264 us/op
Iteration   3: 10.261 us/op
Iteration   4: 10.076 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  10.095 ±(99.9%) 1.472 us/op [Average]
  (min, avg, max) = (9.780, 10.095, 10.264), stdev = 0.228
  CI (99.9%): [8.623, 11.567] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 11.43% complete, ETA 01:11:44
# Fork: 1 of 1
# Warmup Iteration   1: 52.099 us/op
Iteration   1: 50.455 us/op
Iteration   2: 51.094 us/op
Iteration   3: 50.716 us/op
Iteration   4: 50.855 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  50.780 ±(99.9%) 1.727 us/op [Average]
  (min, avg, max) = (50.455, 50.780, 51.094), stdev = 0.267
  CI (99.9%): [49.054, 52.507] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 11.79% complete, ETA 01:11:26
# Fork: 1 of 1
# Warmup Iteration   1: 266.902 us/op
Iteration   1: 261.065 us/op
Iteration   2: 264.848 us/op
Iteration   3: 265.411 us/op
Iteration   4: 265.465 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  264.197 ±(99.9%) 13.614 us/op [Average]
  (min, avg, max) = (261.065, 264.197, 265.465), stdev = 2.107
  CI (99.9%): [250.583, 277.811] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 12.14% complete, ETA 01:11:09
# Fork: 1 of 1
# Warmup Iteration   1: 1808.367 us/op
Iteration   1: 1729.262 us/op
Iteration   2: 1725.134 us/op
Iteration   3: 1724.409 us/op
Iteration   4: 1728.620 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  1726.856 ±(99.9%) 15.763 us/op [Average]
  (min, avg, max) = (1724.409, 1726.856, 1729.262), stdev = 2.439
  CI (99.9%): [1711.093, 1742.619] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 12.50% complete, ETA 01:10:51
# Fork: 1 of 1
# Warmup Iteration   1: 2.531 us/op
Iteration   1: 2.348 us/op
Iteration   2: 2.223 us/op
Iteration   3: 2.225 us/op
Iteration   4: 2.230 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  2.256 ±(99.9%) 0.396 us/op [Average]
  (min, avg, max) = (2.223, 2.256, 2.348), stdev = 0.061
  CI (99.9%): [1.861, 2.652] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 12.86% complete, ETA 01:10:34
# Fork: 1 of 1
# Warmup Iteration   1: 10.002 us/op
Iteration   1: 9.431 us/op
Iteration   2: 9.680 us/op
Iteration   3: 9.326 us/op
Iteration   4: 9.699 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  9.534 ±(99.9%) 1.196 us/op [Average]
  (min, avg, max) = (9.326, 9.534, 9.699), stdev = 0.185
  CI (99.9%): [8.338, 10.730] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 13.21% complete, ETA 01:10:16
# Fork: 1 of 1
# Warmup Iteration   1: 54.153 us/op
Iteration   1: 54.533 us/op
Iteration   2: 54.931 us/op
Iteration   3: 54.896 us/op
Iteration   4: 55.856 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  55.054 ±(99.9%) 3.647 us/op [Average]
  (min, avg, max) = (54.533, 55.054, 55.856), stdev = 0.564
  CI (99.9%): [51.407, 58.701] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 13.57% complete, ETA 01:09:59
# Fork: 1 of 1
# Warmup Iteration   1: 279.525 us/op
Iteration   1: 260.727 us/op
Iteration   2: 260.862 us/op
Iteration   3: 260.927 us/op
Iteration   4: 260.676 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  260.798 ±(99.9%) 0.751 us/op [Average]
  (min, avg, max) = (260.676, 260.798, 260.927), stdev = 0.116
  CI (99.9%): [260.047, 261.549] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 13.93% complete, ETA 01:09:42
# Fork: 1 of 1
# Warmup Iteration   1: 2050.589 us/op
Iteration   1: 1721.267 us/op
Iteration   2: 1720.267 us/op
Iteration   3: 1719.772 us/op
Iteration   4: 1716.733 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  1719.510 ±(99.9%) 12.620 us/op [Average]
  (min, avg, max) = (1716.733, 1719.510, 1721.267), stdev = 1.953
  CI (99.9%): [1706.890, 1732.130] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 14.29% complete, ETA 01:09:24
# Fork: 1 of 1
# Warmup Iteration   1: 15.561 us/op
Iteration   1: 15.140 us/op
Iteration   2: 15.149 us/op
Iteration   3: 15.109 us/op
Iteration   4: 15.164 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  15.140 ±(99.9%) 0.149 us/op [Average]
  (min, avg, max) = (15.109, 15.140, 15.164), stdev = 0.023
  CI (99.9%): [14.991, 15.289] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 14.64% complete, ETA 01:09:07
# Fork: 1 of 1
# Warmup Iteration   1: 193.746 us/op
Iteration   1: 180.098 us/op
Iteration   2: 180.362 us/op
Iteration   3: 179.925 us/op
Iteration   4: 180.192 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  180.144 ±(99.9%) 1.178 us/op [Average]
  (min, avg, max) = (179.925, 180.144, 180.362), stdev = 0.182
  CI (99.9%): [178.966, 181.323] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 15.00% complete, ETA 01:08:50
# Fork: 1 of 1
# Warmup Iteration   1: 889.334 us/op
Iteration   1: 843.202 us/op
Iteration   2: 829.836 us/op
Iteration   3: 816.041 us/op
Iteration   4: 814.932 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  826.003 ±(99.9%) 86.079 us/op [Average]
  (min, avg, max) = (814.932, 826.003, 843.202), stdev = 13.321
  CI (99.9%): [739.924, 912.081] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 15.36% complete, ETA 01:08:32
# Fork: 1 of 1
# Warmup Iteration   1: 2027.842 us/op
Iteration   1: 2027.626 us/op
Iteration   2: 2010.849 us/op
Iteration   3: 1911.443 us/op
Iteration   4: 1899.007 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  1962.231 ±(99.9%) 428.914 us/op [Average]
  (min, avg, max) = (1899.007, 1962.231, 2027.626), stdev = 66.375
  CI (99.9%): [1533.317, 2391.145] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 15.71% complete, ETA 01:08:15
# Fork: 1 of 1
# Warmup Iteration   1: 5517.822 us/op
Iteration   1: 5275.244 us/op
Iteration   2: 5171.364 us/op
Iteration   3: 5250.603 us/op
Iteration   4: 5106.141 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  5200.838 ±(99.9%) 498.438 us/op [Average]
  (min, avg, max) = (5106.141, 5200.838, 5275.244), stdev = 77.134
  CI (99.9%): [4702.400, 5699.276] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 16.07% complete, ETA 01:07:58
# Fork: 1 of 1
# Warmup Iteration   1: 2.781 us/op
Iteration   1: 2.704 us/op
Iteration   2: 2.687 us/op
Iteration   3: 2.708 us/op
Iteration   4: 2.688 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  2.697 ±(99.9%) 0.072 us/op [Average]
  (min, avg, max) = (2.687, 2.697, 2.708), stdev = 0.011
  CI (99.9%): [2.625, 2.769] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 16.43% complete, ETA 01:07:40
# Fork: 1 of 1
# Warmup Iteration   1: 69.761 us/op
Iteration   1: 67.183 us/op
Iteration   2: 67.391 us/op
Iteration   3: 58.936 us/op
Iteration   4: 53.296 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  61.701 ±(99.9%) 44.257 us/op [Average]
  (min, avg, max) = (53.296, 61.701, 67.391), stdev = 6.849
  CI (99.9%): [17.445, 105.958] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 16.79% complete, ETA 01:07:23
# Fork: 1 of 1
# Warmup Iteration   1: 130.875 us/op
Iteration   1: 101.702 us/op
Iteration   2: 101.172 us/op
Iteration   3: 100.743 us/op
Iteration   4: 101.170 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  101.197 ±(99.9%) 2.537 us/op [Average]
  (min, avg, max) = (100.743, 101.197, 101.702), stdev = 0.393
  CI (99.9%): [98.660, 103.733] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 17.14% complete, ETA 01:07:06
# Fork: 1 of 1
# Warmup Iteration   1: 710.917 us/op
Iteration   1: 725.211 us/op
Iteration   2: 662.466 us/op
Iteration   3: 622.771 us/op
Iteration   4: 626.529 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  659.244 ±(99.9%) 306.806 us/op [Average]
  (min, avg, max) = (622.771, 659.244, 725.211), stdev = 47.479
  CI (99.9%): [352.438, 966.050] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 17.50% complete, ETA 01:06:48
# Fork: 1 of 1
# Warmup Iteration   1: 2983.220 us/op
Iteration   1: 2621.506 us/op
Iteration   2: 2667.072 us/op
Iteration   3: 2584.806 us/op
Iteration   4: 2594.455 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  2616.960 ±(99.9%) 238.079 us/op [Average]
  (min, avg, max) = (2584.806, 2616.960, 2667.072), stdev = 36.843
  CI (99.9%): [2378.881, 2855.039] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 17.86% complete, ETA 01:06:31
# Fork: 1 of 1
# Warmup Iteration   1: 12.482 us/op
Iteration   1: 12.282 us/op
Iteration   2: 12.345 us/op
Iteration   3: 12.346 us/op
Iteration   4: 12.325 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  12.325 ±(99.9%) 0.195 us/op [Average]
  (min, avg, max) = (12.282, 12.325, 12.346), stdev = 0.030
  CI (99.9%): [12.130, 12.519] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 18.21% complete, ETA 01:06:14
# Fork: 1 of 1
# Warmup Iteration   1: 76.186 us/op
Iteration   1: 68.795 us/op
Iteration   2: 67.877 us/op
Iteration   3: 72.790 us/op
Iteration   4: 73.610 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  70.768 ±(99.9%) 18.436 us/op [Average]
  (min, avg, max) = (67.877, 70.768, 73.610), stdev = 2.853
  CI (99.9%): [52.332, 89.203] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 18.57% complete, ETA 01:05:56
# Fork: 1 of 1
# Warmup Iteration   1: 204.744 us/op
Iteration   1: 207.195 us/op
Iteration   2: 207.098 us/op
Iteration   3: 206.962 us/op
Iteration   4: 207.243 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  207.124 ±(99.9%) 0.800 us/op [Average]
  (min, avg, max) = (206.962, 207.124, 207.243), stdev = 0.124
  CI (99.9%): [206.324, 207.925] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 18.93% complete, ETA 01:05:39
# Fork: 1 of 1
# Warmup Iteration   1: 774.973 us/op
Iteration   1: 714.326 us/op
Iteration   2: 712.407 us/op
Iteration   3: 717.743 us/op
Iteration   4: 718.772 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  715.812 ±(99.9%) 19.128 us/op [Average]
  (min, avg, max) = (712.407, 715.812, 718.772), stdev = 2.960
  CI (99.9%): [696.684, 734.940] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 19.29% complete, ETA 01:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 2742.399 us/op
Iteration   1: 2688.546 us/op
Iteration   2: 2694.220 us/op
Iteration   3: 2700.384 us/op
Iteration   4: 2695.673 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  2694.706 ±(99.9%) 31.516 us/op [Average]
  (min, avg, max) = (2688.546, 2694.706, 2700.384), stdev = 4.877
  CI (99.9%): [2663.189, 2726.222] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 19.64% complete, ETA 01:05:04
# Fork: 1 of 1
# Warmup Iteration   1: 8.837 us/op
Iteration   1: 8.671 us/op
Iteration   2: 8.656 us/op
Iteration   3: 8.615 us/op
Iteration   4: 8.684 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  8.657 ±(99.9%) 0.193 us/op [Average]
  (min, avg, max) = (8.615, 8.657, 8.684), stdev = 0.030
  CI (99.9%): [8.464, 8.850] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 20.00% complete, ETA 01:04:47
# Fork: 1 of 1
# Warmup Iteration   1: 82.081 us/op
Iteration   1: 76.244 us/op
Iteration   2: 76.143 us/op
Iteration   3: 77.326 us/op
Iteration   4: 80.036 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  77.437 ±(99.9%) 11.716 us/op [Average]
  (min, avg, max) = (76.143, 77.437, 80.036), stdev = 1.813
  CI (99.9%): [65.722, 89.153] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 20.36% complete, ETA 01:04:29
# Fork: 1 of 1
# Warmup Iteration   1: 285.613 us/op
Iteration   1: 237.132 us/op
Iteration   2: 219.425 us/op
Iteration   3: 218.693 us/op
Iteration   4: 219.303 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  223.638 ±(99.9%) 58.168 us/op [Average]
  (min, avg, max) = (218.693, 223.638, 237.132), stdev = 9.002
  CI (99.9%): [165.470, 281.807] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 20.71% complete, ETA 01:04:12
# Fork: 1 of 1
# Warmup Iteration   1: 799.553 us/op
Iteration   1: 805.788 us/op
Iteration   2: 746.394 us/op
Iteration   3: 705.461 us/op
Iteration   4: 706.525 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  741.042 ±(99.9%) 304.882 us/op [Average]
  (min, avg, max) = (705.461, 741.042, 805.788), stdev = 47.181
  CI (99.9%): [436.160, 1045.924] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 21.07% complete, ETA 01:03:55
# Fork: 1 of 1
# Warmup Iteration   1: 2870.147 us/op
Iteration   1: 2529.663 us/op
Iteration   2: 2555.689 us/op
Iteration   3: 2496.893 us/op
Iteration   4: 2482.742 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  2516.247 ±(99.9%) 212.126 us/op [Average]
  (min, avg, max) = (2482.742, 2516.247, 2555.689), stdev = 32.827
  CI (99.9%): [2304.121, 2728.372] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 21.43% complete, ETA 01:03:38
# Fork: 1 of 1
# Warmup Iteration   1: 15.343 us/op
Iteration   1: 15.085 us/op
Iteration   2: 15.050 us/op
Iteration   3: 14.987 us/op
Iteration   4: 15.084 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  15.051 ±(99.9%) 0.297 us/op [Average]
  (min, avg, max) = (14.987, 15.051, 15.085), stdev = 0.046
  CI (99.9%): [14.754, 15.348] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 21.79% complete, ETA 01:03:20
# Fork: 1 of 1
# Warmup Iteration   1: 189.034 us/op
Iteration   1: 180.371 us/op
Iteration   2: 180.398 us/op
Iteration   3: 180.556 us/op
Iteration   4: 180.589 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  180.478 ±(99.9%) 0.711 us/op [Average]
  (min, avg, max) = (180.371, 180.478, 180.589), stdev = 0.110
  CI (99.9%): [179.768, 181.189] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 22.14% complete, ETA 01:03:03
# Fork: 1 of 1
# Warmup Iteration   1: 880.101 us/op
Iteration   1: 831.968 us/op
Iteration   2: 825.094 us/op
Iteration   3: 814.014 us/op
Iteration   4: 816.465 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  821.885 ±(99.9%) 53.193 us/op [Average]
  (min, avg, max) = (814.014, 821.885, 831.968), stdev = 8.232
  CI (99.9%): [768.692, 875.079] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 22.50% complete, ETA 01:02:45
# Fork: 1 of 1
# Warmup Iteration   1: 2025.681 us/op
Iteration   1: 2043.400 us/op
Iteration   2: 2017.832 us/op
Iteration   3: 1929.066 us/op
Iteration   4: 1928.476 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  1979.694 ±(99.9%) 385.911 us/op [Average]
  (min, avg, max) = (1928.476, 1979.694, 2043.400), stdev = 59.720
  CI (99.9%): [1593.783, 2365.604] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 22.86% complete, ETA 01:02:28
# Fork: 1 of 1
# Warmup Iteration   1: 5545.877 us/op
Iteration   1: 5296.596 us/op
Iteration   2: 5218.258 us/op
Iteration   3: 5281.524 us/op
Iteration   4: 5149.509 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  5236.472 ±(99.9%) 434.110 us/op [Average]
  (min, avg, max) = (5149.509, 5236.472, 5296.596), stdev = 67.179
  CI (99.9%): [4802.362, 5670.582] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 23.21% complete, ETA 01:02:11
# Fork: 1 of 1
# Warmup Iteration   1: 2.739 us/op
Iteration   1: 2.667 us/op
Iteration   2: 2.658 us/op
Iteration   3: 2.664 us/op
Iteration   4: 2.652 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  2.660 ±(99.9%) 0.043 us/op [Average]
  (min, avg, max) = (2.652, 2.660, 2.667), stdev = 0.007
  CI (99.9%): [2.617, 2.703] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 23.57% complete, ETA 01:01:53
# Fork: 1 of 1
# Warmup Iteration   1: 74.626 us/op
Iteration   1: 67.315 us/op
Iteration   2: 67.194 us/op
Iteration   3: 58.425 us/op
Iteration   4: 51.465 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  61.100 ±(99.9%) 49.461 us/op [Average]
  (min, avg, max) = (51.465, 61.100, 67.315), stdev = 7.654
  CI (99.9%): [11.639, 110.561] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 23.93% complete, ETA 01:01:36
# Fork: 1 of 1
# Warmup Iteration   1: 130.579 us/op
Iteration   1: 101.492 us/op
Iteration   2: 101.599 us/op
Iteration   3: 101.126 us/op
Iteration   4: 101.111 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  101.332 ±(99.9%) 1.618 us/op [Average]
  (min, avg, max) = (101.111, 101.332, 101.599), stdev = 0.250
  CI (99.9%): [99.714, 102.950] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 24.29% complete, ETA 01:01:19
# Fork: 1 of 1
# Warmup Iteration   1: 705.658 us/op
Iteration   1: 728.306 us/op
Iteration   2: 681.055 us/op
Iteration   3: 622.603 us/op
Iteration   4: 626.652 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  664.654 ±(99.9%) 323.810 us/op [Average]
  (min, avg, max) = (622.603, 664.654, 728.306), stdev = 50.110
  CI (99.9%): [340.844, 988.464] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 24.64% complete, ETA 01:01:01
# Fork: 1 of 1
# Warmup Iteration   1: 3015.320 us/op
Iteration   1: 2642.595 us/op
Iteration   2: 2681.499 us/op
Iteration   3: 2585.721 us/op
Iteration   4: 2597.127 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  2626.735 ±(99.9%) 284.362 us/op [Average]
  (min, avg, max) = (2585.721, 2626.735, 2681.499), stdev = 44.005
  CI (99.9%): [2342.373, 2911.097] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 25.00% complete, ETA 01:00:44
# Fork: 1 of 1
# Warmup Iteration   1: 12.458 us/op
Iteration   1: 12.381 us/op
Iteration   2: 12.379 us/op
Iteration   3: 12.384 us/op
Iteration   4: 12.320 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  12.366 ±(99.9%) 0.198 us/op [Average]
  (min, avg, max) = (12.320, 12.366, 12.384), stdev = 0.031
  CI (99.9%): [12.168, 12.564] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 25.36% complete, ETA 01:00:27
# Fork: 1 of 1
# Warmup Iteration   1: 75.836 us/op
Iteration   1: 68.477 us/op
Iteration   2: 68.114 us/op
Iteration   3: 73.087 us/op
Iteration   4: 72.469 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  70.537 ±(99.9%) 16.832 us/op [Average]
  (min, avg, max) = (68.114, 70.537, 73.087), stdev = 2.605
  CI (99.9%): [53.705, 87.368] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 25.71% complete, ETA 01:00:10
# Fork: 1 of 1
# Warmup Iteration   1: 205.314 us/op
Iteration   1: 207.224 us/op
Iteration   2: 207.159 us/op
Iteration   3: 207.062 us/op
Iteration   4: 207.159 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  207.151 ±(99.9%) 0.432 us/op [Average]
  (min, avg, max) = (207.062, 207.151, 207.224), stdev = 0.067
  CI (99.9%): [206.719, 207.584] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 26.07% complete, ETA 00:59:52
# Fork: 1 of 1
# Warmup Iteration   1: 773.042 us/op
Iteration   1: 711.116 us/op
Iteration   2: 710.377 us/op
Iteration   3: 719.159 us/op
Iteration   4: 719.722 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  715.093 ±(99.9%) 32.529 us/op [Average]
  (min, avg, max) = (710.377, 715.093, 719.722), stdev = 5.034
  CI (99.9%): [682.564, 747.622] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 26.43% complete, ETA 00:59:35
# Fork: 1 of 1
# Warmup Iteration   1: 2736.587 us/op
Iteration   1: 2690.561 us/op
Iteration   2: 2686.509 us/op
Iteration   3: 2686.518 us/op
Iteration   4: 2681.083 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  2686.168 ±(99.9%) 25.136 us/op [Average]
  (min, avg, max) = (2681.083, 2686.168, 2690.561), stdev = 3.890
  CI (99.9%): [2661.032, 2711.304] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 26.79% complete, ETA 00:59:17
# Fork: 1 of 1
# Warmup Iteration   1: 9.006 us/op
Iteration   1: 8.821 us/op
Iteration   2: 8.799 us/op
Iteration   3: 8.811 us/op
Iteration   4: 8.848 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  8.820 ±(99.9%) 0.133 us/op [Average]
  (min, avg, max) = (8.799, 8.820, 8.848), stdev = 0.021
  CI (99.9%): [8.687, 8.953] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 27.14% complete, ETA 00:59:00
# Fork: 1 of 1
# Warmup Iteration   1: 82.140 us/op
Iteration   1: 76.293 us/op
Iteration   2: 76.148 us/op
Iteration   3: 76.091 us/op
Iteration   4: 75.960 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  76.123 ±(99.9%) 0.892 us/op [Average]
  (min, avg, max) = (75.960, 76.123, 76.293), stdev = 0.138
  CI (99.9%): [75.231, 77.015] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 27.50% complete, ETA 00:58:43
# Fork: 1 of 1
# Warmup Iteration   1: 285.492 us/op
Iteration   1: 237.050 us/op
Iteration   2: 219.862 us/op
Iteration   3: 219.150 us/op
Iteration   4: 218.962 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  223.756 ±(99.9%) 57.326 us/op [Average]
  (min, avg, max) = (218.962, 223.756, 237.050), stdev = 8.871
  CI (99.9%): [166.430, 281.082] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 27.86% complete, ETA 00:58:25
# Fork: 1 of 1
# Warmup Iteration   1: 797.202 us/op
Iteration   1: 807.524 us/op
Iteration   2: 738.805 us/op
Iteration   3: 705.023 us/op
Iteration   4: 708.119 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  739.868 ±(99.9%) 307.666 us/op [Average]
  (min, avg, max) = (705.023, 739.868, 807.524), stdev = 47.612
  CI (99.9%): [432.202, 1047.534] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 28.21% complete, ETA 00:58:08
# Fork: 1 of 1
# Warmup Iteration   1: 2857.928 us/op
Iteration   1: 2507.341 us/op
Iteration   2: 2567.510 us/op
Iteration   3: 2469.510 us/op
Iteration   4: 2478.491 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  2505.713 ±(99.9%) 285.920 us/op [Average]
  (min, avg, max) = (2469.510, 2505.713, 2567.510), stdev = 44.246
  CI (99.9%): [2219.793, 2791.633] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 28.57% complete, ETA 00:57:51
# Fork: 1 of 1
# Warmup Iteration   1: 18.864 us/op
Iteration   1: 17.831 us/op
Iteration   2: 17.917 us/op
Iteration   3: 17.854 us/op
Iteration   4: 17.912 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  17.879 ±(99.9%) 0.277 us/op [Average]
  (min, avg, max) = (17.831, 17.879, 17.917), stdev = 0.043
  CI (99.9%): [17.602, 18.155] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 28.93% complete, ETA 00:57:33
# Fork: 1 of 1
# Warmup Iteration   1: 242.099 us/op
Iteration   1: 214.915 us/op
Iteration   2: 215.177 us/op
Iteration   3: 215.033 us/op
Iteration   4: 215.238 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  215.091 ±(99.9%) 0.938 us/op [Average]
  (min, avg, max) = (214.915, 215.091, 215.238), stdev = 0.145
  CI (99.9%): [214.153, 216.029] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 29.29% complete, ETA 00:57:16
# Fork: 1 of 1
# Warmup Iteration   1: 2038.049 us/op
Iteration   1: 1827.859 us/op
Iteration   2: 1823.799 us/op
Iteration   3: 1823.997 us/op
Iteration   4: 1819.343 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  1823.750 ±(99.9%) 22.500 us/op [Average]
  (min, avg, max) = (1819.343, 1823.750, 1827.859), stdev = 3.482
  CI (99.9%): [1801.250, 1846.249] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 29.64% complete, ETA 00:56:58
# Fork: 1 of 1
# Warmup Iteration   1: 11503.905 us/op
Iteration   1: 10447.603 us/op
Iteration   2: 10445.112 us/op
Iteration   3: 10466.036 us/op
Iteration   4: 10477.689 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  10459.110 ±(99.9%) 100.213 us/op [Average]
  (min, avg, max) = (10445.112, 10459.110, 10477.689), stdev = 15.508
  CI (99.9%): [10358.897, 10559.323] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 30.00% complete, ETA 00:56:41
# Fork: 1 of 1
# Warmup Iteration   1: 92496.404 us/op
Iteration   1: 80281.387 us/op
Iteration   2: 80365.204 us/op
Iteration   3: 80884.742 us/op
Iteration   4: 80379.737 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  80477.768 ±(99.9%) 1775.477 us/op [Average]
  (min, avg, max) = (80281.387, 80477.768, 80884.742), stdev = 274.757
  CI (99.9%): [78702.291, 82253.245] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 30.36% complete, ETA 00:56:24
# Fork: 1 of 1
# Warmup Iteration   1: 4.771 us/op
Iteration   1: 4.570 us/op
Iteration   2: 4.660 us/op
Iteration   3: 4.671 us/op
Iteration   4: 4.647 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  4.637 ±(99.9%) 0.295 us/op [Average]
  (min, avg, max) = (4.570, 4.637, 4.671), stdev = 0.046
  CI (99.9%): [4.343, 4.932] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 30.71% complete, ETA 00:56:07
# Fork: 1 of 1
# Warmup Iteration   1: 156.577 us/op
Iteration   1: 143.522 us/op
Iteration   2: 143.545 us/op
Iteration   3: 143.237 us/op
Iteration   4: 143.027 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  143.333 ±(99.9%) 1.598 us/op [Average]
  (min, avg, max) = (143.027, 143.333, 143.545), stdev = 0.247
  CI (99.9%): [141.734, 144.931] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 31.07% complete, ETA 00:55:50
# Fork: 1 of 1
# Warmup Iteration   1: 1172.260 us/op
Iteration   1: 1091.317 us/op
Iteration   2: 1088.463 us/op
Iteration   3: 1070.813 us/op
Iteration   4: 1072.855 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  1080.862 ±(99.9%) 67.997 us/op [Average]
  (min, avg, max) = (1070.813, 1080.862, 1091.317), stdev = 10.523
  CI (99.9%): [1012.865, 1148.859] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 31.43% complete, ETA 00:55:32
# Fork: 1 of 1
# Warmup Iteration   1: 6996.376 us/op
Iteration   1: 6666.666 us/op
Iteration   2: 6660.103 us/op
Iteration   3: 6666.948 us/op
Iteration   4: 6666.074 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  6664.948 ±(99.9%) 21.004 us/op [Average]
  (min, avg, max) = (6660.103, 6664.948, 6666.948), stdev = 3.250
  CI (99.9%): [6643.944, 6685.952] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 31.79% complete, ETA 00:55:15
# Fork: 1 of 1
# Warmup Iteration   1: 47106.404 us/op
Iteration   1: 44347.535 us/op
Iteration   2: 44240.270 us/op
Iteration   3: 44380.779 us/op
Iteration   4: 44238.094 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  44301.670 ±(99.9%) 474.473 us/op [Average]
  (min, avg, max) = (44238.094, 44301.670, 44380.779), stdev = 73.425
  CI (99.9%): [43827.197, 44776.143] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 32.14% complete, ETA 00:54:58
# Fork: 1 of 1
# Warmup Iteration   1: 6.241 us/op
Iteration   1: 5.889 us/op
Iteration   2: 5.891 us/op
Iteration   3: 5.892 us/op
Iteration   4: 5.882 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  5.889 ±(99.9%) 0.029 us/op [Average]
  (min, avg, max) = (5.882, 5.889, 5.892), stdev = 0.005
  CI (99.9%): [5.859, 5.918] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 32.50% complete, ETA 00:54:40
# Fork: 1 of 1
# Warmup Iteration   1: 54.407 us/op
Iteration   1: 50.701 us/op
Iteration   2: 50.922 us/op
Iteration   3: 50.276 us/op
Iteration   4: 50.537 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  50.609 ±(99.9%) 1.758 us/op [Average]
  (min, avg, max) = (50.276, 50.609, 50.922), stdev = 0.272
  CI (99.9%): [48.851, 52.367] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 32.86% complete, ETA 00:54:23
# Fork: 1 of 1
# Warmup Iteration   1: 288.482 us/op
Iteration   1: 263.575 us/op
Iteration   2: 262.554 us/op
Iteration   3: 263.220 us/op
Iteration   4: 263.341 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  263.173 ±(99.9%) 2.828 us/op [Average]
  (min, avg, max) = (262.554, 263.173, 263.575), stdev = 0.438
  CI (99.9%): [260.344, 266.001] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 33.21% complete, ETA 00:54:06
# Fork: 1 of 1
# Warmup Iteration   1: 1503.201 us/op
Iteration   1: 1381.819 us/op
Iteration   2: 1378.465 us/op
Iteration   3: 1378.257 us/op
Iteration   4: 1377.035 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  1378.894 ±(99.9%) 13.243 us/op [Average]
  (min, avg, max) = (1377.035, 1378.894, 1381.819), stdev = 2.049
  CI (99.9%): [1365.651, 1392.137] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 33.57% complete, ETA 00:53:48
# Fork: 1 of 1
# Warmup Iteration   1: 11513.962 us/op
Iteration   1: 9981.932 us/op
Iteration   2: 10003.783 us/op
Iteration   3: 9907.195 us/op
Iteration   4: 9978.358 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  9967.817 ±(99.9%) 271.067 us/op [Average]
  (min, avg, max) = (9907.195, 9967.817, 10003.783), stdev = 41.948
  CI (99.9%): [9696.750, 10238.884] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 33.93% complete, ETA 00:53:31
# Fork: 1 of 1
# Warmup Iteration   1: 13.355 us/op
Iteration   1: 12.747 us/op
Iteration   2: 12.671 us/op
Iteration   3: 12.772 us/op
Iteration   4: 12.795 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  12.746 ±(99.9%) 0.349 us/op [Average]
  (min, avg, max) = (12.671, 12.746, 12.795), stdev = 0.054
  CI (99.9%): [12.397, 13.096] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 34.29% complete, ETA 00:53:14
# Fork: 1 of 1
# Warmup Iteration   1: 116.115 us/op
Iteration   1: 96.761 us/op
Iteration   2: 95.269 us/op
Iteration   3: 95.601 us/op
Iteration   4: 95.318 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  95.737 ±(99.9%) 4.511 us/op [Average]
  (min, avg, max) = (95.269, 95.737, 96.761), stdev = 0.698
  CI (99.9%): [91.226, 100.248] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 34.64% complete, ETA 00:52:56
# Fork: 1 of 1
# Warmup Iteration   1: 996.609 us/op
Iteration   1: 879.158 us/op
Iteration   2: 876.249 us/op
Iteration   3: 871.218 us/op
Iteration   4: 870.044 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  874.167 ±(99.9%) 27.653 us/op [Average]
  (min, avg, max) = (870.044, 874.167, 879.158), stdev = 4.279
  CI (99.9%): [846.514, 901.820] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 35.00% complete, ETA 00:52:39
# Fork: 1 of 1
# Warmup Iteration   1: 8015.540 us/op
Iteration   1: 7449.087 us/op
Iteration   2: 7419.704 us/op
Iteration   3: 7453.780 us/op
Iteration   4: 7414.691 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  7434.315 ±(99.9%) 129.010 us/op [Average]
  (min, avg, max) = (7414.691, 7434.315, 7453.780), stdev = 19.964
  CI (99.9%): [7305.306, 7563.325] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 35.36% complete, ETA 00:52:22
# Fork: 1 of 1
# Warmup Iteration   1: 42773.932 us/op
Iteration   1: 35312.972 us/op
Iteration   2: 35214.773 us/op
Iteration   3: 35358.924 us/op
Iteration   4: 35142.313 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  35257.245 ±(99.9%) 629.365 us/op [Average]
  (min, avg, max) = (35142.313, 35257.245, 35358.924), stdev = 97.395
  CI (99.9%): [34627.881, 35886.610] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 35.71% complete, ETA 00:52:05
# Fork: 1 of 1
# Warmup Iteration   1: 18.981 us/op
Iteration   1: 18.000 us/op
Iteration   2: 17.976 us/op
Iteration   3: 17.980 us/op
Iteration   4: 18.077 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  18.008 ±(99.9%) 0.303 us/op [Average]
  (min, avg, max) = (17.976, 18.008, 18.077), stdev = 0.047
  CI (99.9%): [17.706, 18.311] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 36.07% complete, ETA 00:51:47
# Fork: 1 of 1
# Warmup Iteration   1: 311.646 us/op
Iteration   1: 284.997 us/op
Iteration   2: 284.547 us/op
Iteration   3: 284.974 us/op
Iteration   4: 285.492 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  285.003 ±(99.9%) 2.498 us/op [Average]
  (min, avg, max) = (284.547, 285.003, 285.492), stdev = 0.387
  CI (99.9%): [282.504, 287.501] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 36.43% complete, ETA 00:51:30
# Fork: 1 of 1
# Warmup Iteration   1: 2668.780 us/op
Iteration   1: 2474.845 us/op
Iteration   2: 2470.652 us/op
Iteration   3: 2470.707 us/op
Iteration   4: 2478.405 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  2473.652 ±(99.9%) 24.090 us/op [Average]
  (min, avg, max) = (2470.652, 2473.652, 2478.405), stdev = 3.728
  CI (99.9%): [2449.563, 2497.742] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 36.79% complete, ETA 00:51:12
# Fork: 1 of 1
# Warmup Iteration   1: 15767.889 us/op
Iteration   1: 14937.380 us/op
Iteration   2: 14936.004 us/op
Iteration   3: 14980.130 us/op
Iteration   4: 14982.447 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  14958.990 ±(99.9%) 166.534 us/op [Average]
  (min, avg, max) = (14936.004, 14958.990, 14982.447), stdev = 25.771
  CI (99.9%): [14792.456, 15125.524] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 37.14% complete, ETA 00:50:55
# Fork: 1 of 1
# Warmup Iteration   1: 121285.411 us/op
Iteration   1: 111243.329 us/op
Iteration   2: 110781.054 us/op
Iteration   3: 110998.331 us/op
Iteration   4: 111075.705 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  111024.605 ±(99.9%) 1239.955 us/op [Average]
  (min, avg, max) = (110781.054, 111024.605, 111243.329), stdev = 191.884
  CI (99.9%): [109784.650, 112264.560] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 37.50% complete, ETA 00:50:39
# Fork: 1 of 1
# Warmup Iteration   1: 4.768 us/op
Iteration   1: 4.539 us/op
Iteration   2: 4.633 us/op
Iteration   3: 4.634 us/op
Iteration   4: 4.638 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  4.611 ±(99.9%) 0.310 us/op [Average]
  (min, avg, max) = (4.539, 4.611, 4.638), stdev = 0.048
  CI (99.9%): [4.301, 4.921] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 37.86% complete, ETA 00:50:21
# Fork: 1 of 1
# Warmup Iteration   1: 121.215 us/op
Iteration   1: 117.630 us/op
Iteration   2: 117.317 us/op
Iteration   3: 117.201 us/op
Iteration   4: 117.912 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  117.515 ±(99.9%) 2.073 us/op [Average]
  (min, avg, max) = (117.201, 117.515, 117.912), stdev = 0.321
  CI (99.9%): [115.442, 119.588] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 38.21% complete, ETA 00:50:04
# Fork: 1 of 1
# Warmup Iteration   1: 1063.231 us/op
Iteration   1: 1045.317 us/op
Iteration   2: 1044.819 us/op
Iteration   3: 1042.524 us/op
Iteration   4: 1043.084 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  1043.936 ±(99.9%) 8.675 us/op [Average]
  (min, avg, max) = (1042.524, 1043.936, 1045.317), stdev = 1.342
  CI (99.9%): [1035.261, 1052.611] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 38.57% complete, ETA 00:49:46
# Fork: 1 of 1
# Warmup Iteration   1: 6515.655 us/op
Iteration   1: 6348.141 us/op
Iteration   2: 6350.540 us/op
Iteration   3: 6349.222 us/op
Iteration   4: 6371.312 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  6354.804 ±(99.9%) 71.398 us/op [Average]
  (min, avg, max) = (6348.141, 6354.804, 6371.312), stdev = 11.049
  CI (99.9%): [6283.406, 6426.202] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 38.93% complete, ETA 00:49:29
# Fork: 1 of 1
# Warmup Iteration   1: 43797.572 us/op
Iteration   1: 42121.413 us/op
Iteration   2: 42211.385 us/op
Iteration   3: 42189.799 us/op
Iteration   4: 42113.123 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  42158.930 ±(99.9%) 316.799 us/op [Average]
  (min, avg, max) = (42113.123, 42158.930, 42211.385), stdev = 49.025
  CI (99.9%): [41842.132, 42475.729] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 39.29% complete, ETA 00:49:12
# Fork: 1 of 1
# Warmup Iteration   1: 6.265 us/op
Iteration   1: 5.909 us/op
Iteration   2: 5.914 us/op
Iteration   3: 5.916 us/op
Iteration   4: 5.911 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  5.912 ±(99.9%) 0.020 us/op [Average]
  (min, avg, max) = (5.909, 5.912, 5.916), stdev = 0.003
  CI (99.9%): [5.893, 5.932] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 39.64% complete, ETA 00:48:54
# Fork: 1 of 1
# Warmup Iteration   1: 55.392 us/op
Iteration   1: 52.708 us/op
Iteration   2: 52.679 us/op
Iteration   3: 52.666 us/op
Iteration   4: 52.809 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  52.716 ±(99.9%) 0.417 us/op [Average]
  (min, avg, max) = (52.666, 52.716, 52.809), stdev = 0.065
  CI (99.9%): [52.298, 53.133] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 40.00% complete, ETA 00:48:37
# Fork: 1 of 1
# Warmup Iteration   1: 379.355 us/op
Iteration   1: 360.921 us/op
Iteration   2: 360.841 us/op
Iteration   3: 360.920 us/op
Iteration   4: 361.297 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  360.995 ±(99.9%) 1.325 us/op [Average]
  (min, avg, max) = (360.841, 360.995, 361.297), stdev = 0.205
  CI (99.9%): [359.670, 362.320] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 40.36% complete, ETA 00:48:20
# Fork: 1 of 1
# Warmup Iteration   1: 2342.047 us/op
Iteration   1: 2314.169 us/op
Iteration   2: 2312.038 us/op
Iteration   3: 2313.556 us/op
Iteration   4: 2314.361 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  2313.531 ±(99.9%) 6.802 us/op [Average]
  (min, avg, max) = (2312.038, 2313.531, 2314.361), stdev = 1.053
  CI (99.9%): [2306.729, 2320.334] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 40.71% complete, ETA 00:48:02
# Fork: 1 of 1
# Warmup Iteration   1: 16942.451 us/op
Iteration   1: 16020.488 us/op
Iteration   2: 15991.591 us/op
Iteration   3: 15976.517 us/op
Iteration   4: 15969.716 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  15989.578 ±(99.9%) 145.671 us/op [Average]
  (min, avg, max) = (15969.716, 15989.578, 16020.488), stdev = 22.543
  CI (99.9%): [15843.907, 16135.249] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 41.07% complete, ETA 00:47:45
# Fork: 1 of 1
# Warmup Iteration   1: 13.375 us/op
Iteration   1: 12.659 us/op
Iteration   2: 12.542 us/op
Iteration   3: 12.950 us/op
Iteration   4: 12.937 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  12.772 ±(99.9%) 1.317 us/op [Average]
  (min, avg, max) = (12.542, 12.772, 12.950), stdev = 0.204
  CI (99.9%): [11.455, 14.089] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 41.43% complete, ETA 00:47:27
# Fork: 1 of 1
# Warmup Iteration   1: 145.532 us/op
Iteration   1: 132.460 us/op
Iteration   2: 132.188 us/op
Iteration   3: 132.248 us/op
Iteration   4: 132.378 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  132.319 ±(99.9%) 0.796 us/op [Average]
  (min, avg, max) = (132.188, 132.319, 132.460), stdev = 0.123
  CI (99.9%): [131.523, 133.115] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 41.79% complete, ETA 00:47:10
# Fork: 1 of 1
# Warmup Iteration   1: 1623.703 us/op
Iteration   1: 1494.290 us/op
Iteration   2: 1488.151 us/op
Iteration   3: 1493.883 us/op
Iteration   4: 1488.025 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  1491.087 ±(99.9%) 22.405 us/op [Average]
  (min, avg, max) = (1488.025, 1491.087, 1494.290), stdev = 3.467
  CI (99.9%): [1468.682, 1513.493] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 42.14% complete, ETA 00:46:53
# Fork: 1 of 1
# Warmup Iteration   1: 9590.709 us/op
Iteration   1: 8795.232 us/op
Iteration   2: 8763.262 us/op
Iteration   3: 8824.387 us/op
Iteration   4: 8819.586 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  8800.617 ±(99.9%) 180.829 us/op [Average]
  (min, avg, max) = (8763.262, 8800.617, 8824.387), stdev = 27.983
  CI (99.9%): [8619.788, 8981.446] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 42.50% complete, ETA 00:46:35
# Fork: 1 of 1
# Warmup Iteration   1: 101527.674 us/op
Iteration   1: 94422.917 us/op
Iteration   2: 94647.176 us/op
Iteration   3: 94384.229 us/op
Iteration   4: 94671.011 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  94531.333 ±(99.9%) 960.812 us/op [Average]
  (min, avg, max) = (94384.229, 94531.333, 94671.011), stdev = 148.687
  CI (99.9%): [93570.521, 95492.145] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 42.86% complete, ETA 00:46:18
# Fork: 1 of 1
# Warmup Iteration   1: 18.568 us/op
Iteration   1: 17.785 us/op
Iteration   2: 17.631 us/op
Iteration   3: 17.652 us/op
Iteration   4: 17.774 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  17.711 ±(99.9%) 0.519 us/op [Average]
  (min, avg, max) = (17.631, 17.711, 17.785), stdev = 0.080
  CI (99.9%): [17.191, 18.230] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 43.21% complete, ETA 00:46:01
# Fork: 1 of 1
# Warmup Iteration   1: 170.525 us/op
Iteration   1: 151.940 us/op
Iteration   2: 151.466 us/op
Iteration   3: 151.594 us/op
Iteration   4: 151.739 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  151.685 ±(99.9%) 1.315 us/op [Average]
  (min, avg, max) = (151.466, 151.685, 151.940), stdev = 0.203
  CI (99.9%): [150.370, 152.999] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 43.57% complete, ETA 00:45:44
# Fork: 1 of 1
# Warmup Iteration   1: 1342.184 us/op
Iteration   1: 1195.636 us/op
Iteration   2: 1193.341 us/op
Iteration   3: 1189.110 us/op
Iteration   4: 1187.403 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  1191.372 ±(99.9%) 24.445 us/op [Average]
  (min, avg, max) = (1187.403, 1191.372, 1195.636), stdev = 3.783
  CI (99.9%): [1166.927, 1215.817] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 43.93% complete, ETA 00:45:26
# Fork: 1 of 1
# Warmup Iteration   1: 7757.437 us/op
Iteration   1: 6928.709 us/op
Iteration   2: 6932.324 us/op
Iteration   3: 6922.218 us/op
Iteration   4: 6936.049 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  6929.825 ±(99.9%) 38.064 us/op [Average]
  (min, avg, max) = (6922.218, 6929.825, 6936.049), stdev = 5.891
  CI (99.9%): [6891.760, 6967.889] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 44.29% complete, ETA 00:45:09
# Fork: 1 of 1
# Warmup Iteration   1: 54766.999 us/op
Iteration   1: 49201.752 us/op
Iteration   2: 49289.097 us/op
Iteration   3: 49213.336 us/op
Iteration   4: 49325.110 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  49257.324 ±(99.9%) 384.614 us/op [Average]
  (min, avg, max) = (49201.752, 49257.324, 49325.110), stdev = 59.519
  CI (99.9%): [48872.710, 49641.938] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 44.64% complete, ETA 00:44:52
# Fork: 1 of 1
# Warmup Iteration   1: 4.730 us/op
Iteration   1: 4.586 us/op
Iteration   2: 4.648 us/op
Iteration   3: 4.620 us/op
Iteration   4: 4.618 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  4.618 ±(99.9%) 0.163 us/op [Average]
  (min, avg, max) = (4.586, 4.618, 4.648), stdev = 0.025
  CI (99.9%): [4.455, 4.781] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 45.00% complete, ETA 00:44:34
# Fork: 1 of 1
# Warmup Iteration   1: 159.840 us/op
Iteration   1: 148.366 us/op
Iteration   2: 148.186 us/op
Iteration   3: 148.306 us/op
Iteration   4: 148.680 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  148.384 ±(99.9%) 1.364 us/op [Average]
  (min, avg, max) = (148.186, 148.384, 148.680), stdev = 0.211
  CI (99.9%): [147.021, 149.748] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 45.36% complete, ETA 00:44:17
# Fork: 1 of 1
# Warmup Iteration   1: 1175.055 us/op
Iteration   1: 1093.067 us/op
Iteration   2: 1092.602 us/op
Iteration   3: 1070.397 us/op
Iteration   4: 1068.891 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  1081.239 ±(99.9%) 86.620 us/op [Average]
  (min, avg, max) = (1068.891, 1081.239, 1093.067), stdev = 13.405
  CI (99.9%): [994.619, 1167.859] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 45.71% complete, ETA 00:44:00
# Fork: 1 of 1
# Warmup Iteration   1: 7047.962 us/op
Iteration   1: 6599.339 us/op
Iteration   2: 6582.449 us/op
Iteration   3: 6589.015 us/op
Iteration   4: 6598.809 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  6592.403 ±(99.9%) 52.723 us/op [Average]
  (min, avg, max) = (6582.449, 6592.403, 6599.339), stdev = 8.159
  CI (99.9%): [6539.679, 6645.126] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 46.07% complete, ETA 00:43:42
# Fork: 1 of 1
# Warmup Iteration   1: 46234.870 us/op
Iteration   1: 43443.836 us/op
Iteration   2: 43487.370 us/op
Iteration   3: 43492.700 us/op
Iteration   4: 43513.706 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  43484.403 ±(99.9%) 189.576 us/op [Average]
  (min, avg, max) = (43443.836, 43484.403, 43513.706), stdev = 29.337
  CI (99.9%): [43294.827, 43673.979] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 46.43% complete, ETA 00:43:25
# Fork: 1 of 1
# Warmup Iteration   1: 6.016 us/op
Iteration   1: 5.712 us/op
Iteration   2: 5.695 us/op
Iteration   3: 5.689 us/op
Iteration   4: 5.692 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  5.697 ±(99.9%) 0.066 us/op [Average]
  (min, avg, max) = (5.689, 5.697, 5.712), stdev = 0.010
  CI (99.9%): [5.630, 5.763] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 46.79% complete, ETA 00:43:08
# Fork: 1 of 1
# Warmup Iteration   1: 49.161 us/op
Iteration   1: 45.876 us/op
Iteration   2: 46.152 us/op
Iteration   3: 45.681 us/op
Iteration   4: 45.407 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  45.779 ±(99.9%) 2.031 us/op [Average]
  (min, avg, max) = (45.407, 45.779, 46.152), stdev = 0.314
  CI (99.9%): [43.748, 47.810] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 47.14% complete, ETA 00:42:50
# Fork: 1 of 1
# Warmup Iteration   1: 265.714 us/op
Iteration   1: 241.720 us/op
Iteration   2: 240.024 us/op
Iteration   3: 239.355 us/op
Iteration   4: 238.696 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  239.949 ±(99.9%) 8.395 us/op [Average]
  (min, avg, max) = (238.696, 239.949, 241.720), stdev = 1.299
  CI (99.9%): [231.554, 248.343] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 47.50% complete, ETA 00:42:33
# Fork: 1 of 1
# Warmup Iteration   1: 1324.526 us/op
Iteration   1: 1199.053 us/op
Iteration   2: 1199.076 us/op
Iteration   3: 1201.899 us/op
Iteration   4: 1196.003 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  1199.008 ±(99.9%) 15.559 us/op [Average]
  (min, avg, max) = (1196.003, 1199.008, 1201.899), stdev = 2.408
  CI (99.9%): [1183.449, 1214.567] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 47.86% complete, ETA 00:42:16
# Fork: 1 of 1
# Warmup Iteration   1: 8865.701 us/op
Iteration   1: 7731.609 us/op
Iteration   2: 7783.971 us/op
Iteration   3: 7739.270 us/op
Iteration   4: 7735.425 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  7747.569 ±(99.9%) 158.118 us/op [Average]
  (min, avg, max) = (7731.609, 7747.569, 7783.971), stdev = 24.469
  CI (99.9%): [7589.451, 7905.687] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 48.21% complete, ETA 00:41:58
# Fork: 1 of 1
# Warmup Iteration   1: 13.214 us/op
Iteration   1: 12.665 us/op
Iteration   2: 12.580 us/op
Iteration   3: 12.665 us/op
Iteration   4: 12.689 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  12.650 ±(99.9%) 0.310 us/op [Average]
  (min, avg, max) = (12.580, 12.650, 12.689), stdev = 0.048
  CI (99.9%): [12.340, 12.959] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 48.57% complete, ETA 00:41:41
# Fork: 1 of 1
# Warmup Iteration   1: 101.054 us/op
Iteration   1: 83.249 us/op
Iteration   2: 82.265 us/op
Iteration   3: 82.192 us/op
Iteration   4: 81.748 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  82.364 ±(99.9%) 4.091 us/op [Average]
  (min, avg, max) = (81.748, 82.364, 83.249), stdev = 0.633
  CI (99.9%): [78.273, 86.454] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 48.93% complete, ETA 00:41:23
# Fork: 1 of 1
# Warmup Iteration   1: 887.117 us/op
Iteration   1: 760.733 us/op
Iteration   2: 757.154 us/op
Iteration   3: 753.525 us/op
Iteration   4: 756.247 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  756.914 ±(99.9%) 19.232 us/op [Average]
  (min, avg, max) = (753.525, 756.914, 760.733), stdev = 2.976
  CI (99.9%): [737.683, 776.146] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 49.29% complete, ETA 00:41:06
# Fork: 1 of 1
# Warmup Iteration   1: 6275.849 us/op
Iteration   1: 5717.954 us/op
Iteration   2: 5682.944 us/op
Iteration   3: 5713.420 us/op
Iteration   4: 5706.650 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  5705.242 ±(99.9%) 100.642 us/op [Average]
  (min, avg, max) = (5682.944, 5705.242, 5717.954), stdev = 15.574
  CI (99.9%): [5604.600, 5805.884] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 49.64% complete, ETA 00:40:49
# Fork: 1 of 1
# Warmup Iteration   1: 32023.538 us/op
Iteration   1: 26997.582 us/op
Iteration   2: 26859.627 us/op
Iteration   3: 26866.303 us/op
Iteration   4: 26842.517 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  26891.507 ±(99.9%) 461.530 us/op [Average]
  (min, avg, max) = (26842.517, 26891.507, 26997.582), stdev = 71.422
  CI (99.9%): [26429.977, 27353.037] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 50.00% complete, ETA 00:40:31
# Fork: 1 of 1
# Warmup Iteration   1: 18.595 us/op
Iteration   1: 17.694 us/op
Iteration   2: 17.755 us/op
Iteration   3: 17.736 us/op
Iteration   4: 17.744 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  17.732 ±(99.9%) 0.172 us/op [Average]
  (min, avg, max) = (17.694, 17.732, 17.755), stdev = 0.027
  CI (99.9%): [17.560, 17.905] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 50.36% complete, ETA 00:40:14
# Fork: 1 of 1
# Warmup Iteration   1: 123.643 us/op
Iteration   1: 113.245 us/op
Iteration   2: 113.304 us/op
Iteration   3: 113.514 us/op
Iteration   4: 113.642 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  113.426 ±(99.9%) 1.194 us/op [Average]
  (min, avg, max) = (113.245, 113.426, 113.642), stdev = 0.185
  CI (99.9%): [112.233, 114.620] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 50.71% complete, ETA 00:39:57
# Fork: 1 of 1
# Warmup Iteration   1: 1283.443 us/op
Iteration   1: 1204.803 us/op
Iteration   2: 1205.368 us/op
Iteration   3: 1203.783 us/op
Iteration   4: 1204.368 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  1204.580 ±(99.9%) 4.338 us/op [Average]
  (min, avg, max) = (1203.783, 1204.580, 1205.368), stdev = 0.671
  CI (99.9%): [1200.243, 1208.918] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 51.07% complete, ETA 00:39:39
# Fork: 1 of 1
# Warmup Iteration   1: 8165.272 us/op
Iteration   1: 7620.469 us/op
Iteration   2: 7644.135 us/op
Iteration   3: 7632.431 us/op
Iteration   4: 7631.370 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  7632.101 ±(99.9%) 62.514 us/op [Average]
  (min, avg, max) = (7620.469, 7632.101, 7644.135), stdev = 9.674
  CI (99.9%): [7569.588, 7694.615] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 51.43% complete, ETA 00:39:22
# Fork: 1 of 1
# Warmup Iteration   1: 58097.333 us/op
Iteration   1: 54329.483 us/op
Iteration   2: 54333.211 us/op
Iteration   3: 54384.606 us/op
Iteration   4: 54311.112 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  54339.603 ±(99.9%) 203.675 us/op [Average]
  (min, avg, max) = (54311.112, 54339.603, 54384.606), stdev = 31.519
  CI (99.9%): [54135.927, 54543.278] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 51.79% complete, ETA 00:39:05
# Fork: 1 of 1
# Warmup Iteration   1: 4.693 us/op
Iteration   1: 4.530 us/op
Iteration   2: 4.627 us/op
Iteration   3: 4.611 us/op
Iteration   4: 4.619 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  4.597 ±(99.9%) 0.291 us/op [Average]
  (min, avg, max) = (4.530, 4.597, 4.627), stdev = 0.045
  CI (99.9%): [4.305, 4.888] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 52.14% complete, ETA 00:38:47
# Fork: 1 of 1
# Warmup Iteration   1: 131.307 us/op
Iteration   1: 127.315 us/op
Iteration   2: 127.532 us/op
Iteration   3: 128.023 us/op
Iteration   4: 127.622 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  127.623 ±(99.9%) 1.915 us/op [Average]
  (min, avg, max) = (127.315, 127.623, 128.023), stdev = 0.296
  CI (99.9%): [125.708, 129.538] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 52.50% complete, ETA 00:38:30
# Fork: 1 of 1
# Warmup Iteration   1: 1063.739 us/op
Iteration   1: 1046.631 us/op
Iteration   2: 1043.410 us/op
Iteration   3: 1024.664 us/op
Iteration   4: 1025.820 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  1035.132 ±(99.9%) 74.341 us/op [Average]
  (min, avg, max) = (1024.664, 1035.132, 1046.631), stdev = 11.504
  CI (99.9%): [960.791, 1109.472] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 52.86% complete, ETA 00:38:13
# Fork: 1 of 1
# Warmup Iteration   1: 6539.894 us/op
Iteration   1: 6399.702 us/op
Iteration   2: 6404.655 us/op
Iteration   3: 6400.180 us/op
Iteration   4: 6400.509 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  6401.262 ±(99.9%) 14.774 us/op [Average]
  (min, avg, max) = (6399.702, 6401.262, 6404.655), stdev = 2.286
  CI (99.9%): [6386.487, 6416.036] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 53.21% complete, ETA 00:37:55
# Fork: 1 of 1
# Warmup Iteration   1: 43298.972 us/op
Iteration   1: 41601.427 us/op
Iteration   2: 41637.200 us/op
Iteration   3: 41650.120 us/op
Iteration   4: 41558.667 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  41611.854 ±(99.9%) 264.977 us/op [Average]
  (min, avg, max) = (41558.667, 41611.854, 41650.120), stdev = 41.006
  CI (99.9%): [41346.876, 41876.831] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 53.57% complete, ETA 00:37:38
# Fork: 1 of 1
# Warmup Iteration   1: 5.833 us/op
Iteration   1: 5.594 us/op
Iteration   2: 5.536 us/op
Iteration   3: 5.531 us/op
Iteration   4: 5.529 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  5.547 ±(99.9%) 0.204 us/op [Average]
  (min, avg, max) = (5.529, 5.547, 5.594), stdev = 0.032
  CI (99.9%): [5.344, 5.751] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 53.93% complete, ETA 00:37:21
# Fork: 1 of 1
# Warmup Iteration   1: 52.870 us/op
Iteration   1: 50.262 us/op
Iteration   2: 50.178 us/op
Iteration   3: 50.390 us/op
Iteration   4: 50.350 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  50.295 ±(99.9%) 0.612 us/op [Average]
  (min, avg, max) = (50.178, 50.295, 50.390), stdev = 0.095
  CI (99.9%): [49.683, 50.907] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 54.29% complete, ETA 00:37:03
# Fork: 1 of 1
# Warmup Iteration   1: 358.505 us/op
Iteration   1: 338.525 us/op
Iteration   2: 338.183 us/op
Iteration   3: 338.862 us/op
Iteration   4: 338.551 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  338.530 ±(99.9%) 1.793 us/op [Average]
  (min, avg, max) = (338.183, 338.530, 338.862), stdev = 0.277
  CI (99.9%): [336.737, 340.323] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 54.64% complete, ETA 00:36:46
# Fork: 1 of 1
# Warmup Iteration   1: 2217.217 us/op
Iteration   1: 2105.752 us/op
Iteration   2: 2105.817 us/op
Iteration   3: 2105.791 us/op
Iteration   4: 2106.022 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  2105.846 ±(99.9%) 0.781 us/op [Average]
  (min, avg, max) = (2105.752, 2105.846, 2106.022), stdev = 0.121
  CI (99.9%): [2105.065, 2106.627] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 55.00% complete, ETA 00:36:28
# Fork: 1 of 1
# Warmup Iteration   1: 14679.191 us/op
Iteration   1: 13814.410 us/op
Iteration   2: 13775.834 us/op
Iteration   3: 13791.388 us/op
Iteration   4: 13778.504 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  13790.034 ±(99.9%) 113.812 us/op [Average]
  (min, avg, max) = (13775.834, 13790.034, 13814.410), stdev = 17.612
  CI (99.9%): [13676.222, 13903.846] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 55.36% complete, ETA 00:36:11
# Fork: 1 of 1
# Warmup Iteration   1: 12.805 us/op
Iteration   1: 12.422 us/op
Iteration   2: 12.385 us/op
Iteration   3: 12.412 us/op
Iteration   4: 12.421 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  12.410 ±(99.9%) 0.112 us/op [Average]
  (min, avg, max) = (12.385, 12.410, 12.422), stdev = 0.017
  CI (99.9%): [12.298, 12.522] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 55.71% complete, ETA 00:35:54
# Fork: 1 of 1
# Warmup Iteration   1: 124.157 us/op
Iteration   1: 112.211 us/op
Iteration   2: 112.440 us/op
Iteration   3: 112.158 us/op
Iteration   4: 112.053 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  112.215 ±(99.9%) 1.056 us/op [Average]
  (min, avg, max) = (112.053, 112.215, 112.440), stdev = 0.163
  CI (99.9%): [111.159, 113.272] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 56.07% complete, ETA 00:35:36
# Fork: 1 of 1
# Warmup Iteration   1: 1208.217 us/op
Iteration   1: 1137.999 us/op
Iteration   2: 1139.660 us/op
Iteration   3: 1138.073 us/op
Iteration   4: 1130.625 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  1136.589 ±(99.9%) 26.167 us/op [Average]
  (min, avg, max) = (1130.625, 1136.589, 1139.660), stdev = 4.049
  CI (99.9%): [1110.422, 1162.756] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 56.43% complete, ETA 00:35:19
# Fork: 1 of 1
# Warmup Iteration   1: 7031.424 us/op
Iteration   1: 6681.880 us/op
Iteration   2: 6572.675 us/op
Iteration   3: 6573.451 us/op
Iteration   4: 6556.660 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  6596.166 ±(99.9%) 372.623 us/op [Average]
  (min, avg, max) = (6556.660, 6596.166, 6681.880), stdev = 57.664
  CI (99.9%): [6223.543, 6968.790] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 56.79% complete, ETA 00:35:02
# Fork: 1 of 1
# Warmup Iteration   1: 60158.672 us/op
Iteration   1: 56224.677 us/op
Iteration   2: 56103.176 us/op
Iteration   3: 56462.775 us/op
Iteration   4: 56447.823 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  56309.613 ±(99.9%) 1134.019 us/op [Average]
  (min, avg, max) = (56103.176, 56309.613, 56462.775), stdev = 175.491
  CI (99.9%): [55175.593, 57443.632] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 57.14% complete, ETA 00:34:44
# Fork: 1 of 1
# Warmup Iteration   1: 15.956 us/op
Iteration   1: 15.607 us/op
Iteration   2: 15.414 us/op
Iteration   3: 15.503 us/op
Iteration   4: 15.630 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  15.539 ±(99.9%) 0.645 us/op [Average]
  (min, avg, max) = (15.414, 15.539, 15.630), stdev = 0.100
  CI (99.9%): [14.894, 16.183] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 57.50% complete, ETA 00:34:27
# Fork: 1 of 1
# Warmup Iteration   1: 148.715 us/op
Iteration   1: 136.826 us/op
Iteration   2: 136.921 us/op
Iteration   3: 137.301 us/op
Iteration   4: 136.731 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  136.945 ±(99.9%) 1.615 us/op [Average]
  (min, avg, max) = (136.731, 136.945, 137.301), stdev = 0.250
  CI (99.9%): [135.330, 138.560] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 57.86% complete, ETA 00:34:10
# Fork: 1 of 1
# Warmup Iteration   1: 1272.531 us/op
Iteration   1: 1183.990 us/op
Iteration   2: 1181.770 us/op
Iteration   3: 1178.271 us/op
Iteration   4: 1176.947 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  1180.244 ±(99.9%) 20.813 us/op [Average]
  (min, avg, max) = (1176.947, 1180.244, 1183.990), stdev = 3.221
  CI (99.9%): [1159.431, 1201.057] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 58.21% complete, ETA 00:33:52
# Fork: 1 of 1
# Warmup Iteration   1: 7346.464 us/op
Iteration   1: 6636.304 us/op
Iteration   2: 6638.684 us/op
Iteration   3: 6627.269 us/op
Iteration   4: 6622.902 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  6631.290 ±(99.9%) 48.117 us/op [Average]
  (min, avg, max) = (6622.902, 6631.290, 6638.684), stdev = 7.446
  CI (99.9%): [6583.173, 6679.407] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 58.57% complete, ETA 00:33:35
# Fork: 1 of 1
# Warmup Iteration   1: 53167.958 us/op
Iteration   1: 49159.761 us/op
Iteration   2: 49041.036 us/op
Iteration   3: 49104.721 us/op
Iteration   4: 49110.850 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  49104.092 ±(99.9%) 314.833 us/op [Average]
  (min, avg, max) = (49041.036, 49104.092, 49159.761), stdev = 48.721
  CI (99.9%): [48789.259, 49418.925] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 58.93% complete, ETA 00:33:18
# Fork: 1 of 1
# Warmup Iteration   1: 3.425 us/op
Iteration   1: 3.314 us/op
Iteration   2: 3.395 us/op
Iteration   3: 3.373 us/op
Iteration   4: 3.377 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  3.365 ±(99.9%) 0.226 us/op [Average]
  (min, avg, max) = (3.314, 3.365, 3.395), stdev = 0.035
  CI (99.9%): [3.139, 3.591] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 59.29% complete, ETA 00:33:00
# Fork: 1 of 1
# Warmup Iteration   1: 91.098 us/op
Iteration   1: 82.835 us/op
Iteration   2: 82.610 us/op
Iteration   3: 82.587 us/op
Iteration   4: 82.277 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  82.577 ±(99.9%) 1.481 us/op [Average]
  (min, avg, max) = (82.277, 82.577, 82.835), stdev = 0.229
  CI (99.9%): [81.096, 84.059] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 59.64% complete, ETA 00:32:43
# Fork: 1 of 1
# Warmup Iteration   1: 762.167 us/op
Iteration   1: 703.985 us/op
Iteration   2: 701.664 us/op
Iteration   3: 701.337 us/op
Iteration   4: 702.206 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  702.298 ±(99.9%) 7.629 us/op [Average]
  (min, avg, max) = (701.337, 702.298, 703.985), stdev = 1.181
  CI (99.9%): [694.669, 709.928] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 60.00% complete, ETA 00:32:25
# Fork: 1 of 1
# Warmup Iteration   1: 4568.943 us/op
Iteration   1: 4271.025 us/op
Iteration   2: 4257.528 us/op
Iteration   3: 4268.580 us/op
Iteration   4: 4258.496 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  4263.907 ±(99.9%) 44.534 us/op [Average]
  (min, avg, max) = (4257.528, 4263.907, 4271.025), stdev = 6.892
  CI (99.9%): [4219.373, 4308.442] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 60.36% complete, ETA 00:32:08
# Fork: 1 of 1
# Warmup Iteration   1: 31133.481 us/op
Iteration   1: 29246.520 us/op
Iteration   2: 29154.429 us/op
Iteration   3: 29185.511 us/op
Iteration   4: 29168.060 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  29188.630 ±(99.9%) 262.588 us/op [Average]
  (min, avg, max) = (29154.429, 29188.630, 29246.520), stdev = 40.636
  CI (99.9%): [28926.042, 29451.219] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 60.71% complete, ETA 00:31:51
# Fork: 1 of 1
# Warmup Iteration   1: 4.899 us/op
Iteration   1: 4.587 us/op
Iteration   2: 4.572 us/op
Iteration   3: 4.569 us/op
Iteration   4: 4.570 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  4.575 ±(99.9%) 0.054 us/op [Average]
  (min, avg, max) = (4.569, 4.575, 4.587), stdev = 0.008
  CI (99.9%): [4.520, 4.629] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 61.07% complete, ETA 00:31:33
# Fork: 1 of 1
# Warmup Iteration   1: 37.699 us/op
Iteration   1: 34.937 us/op
Iteration   2: 34.979 us/op
Iteration   3: 34.965 us/op
Iteration   4: 34.863 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  34.936 ±(99.9%) 0.336 us/op [Average]
  (min, avg, max) = (34.863, 34.936, 34.979), stdev = 0.052
  CI (99.9%): [34.600, 35.272] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 61.43% complete, ETA 00:31:16
# Fork: 1 of 1
# Warmup Iteration   1: 184.333 us/op
Iteration   1: 165.738 us/op
Iteration   2: 166.072 us/op
Iteration   3: 165.749 us/op
Iteration   4: 166.027 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  165.896 ±(99.9%) 1.148 us/op [Average]
  (min, avg, max) = (165.738, 165.896, 166.072), stdev = 0.178
  CI (99.9%): [164.749, 167.044] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 61.79% complete, ETA 00:30:58
# Fork: 1 of 1
# Warmup Iteration   1: 786.916 us/op
Iteration   1: 689.460 us/op
Iteration   2: 685.108 us/op
Iteration   3: 688.231 us/op
Iteration   4: 680.742 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  685.885 ±(99.9%) 25.122 us/op [Average]
  (min, avg, max) = (680.742, 685.885, 689.460), stdev = 3.888
  CI (99.9%): [660.763, 711.007] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 62.14% complete, ETA 00:30:41
# Fork: 1 of 1
# Warmup Iteration   1: 5402.203 us/op
Iteration   1: 4650.535 us/op
Iteration   2: 4619.120 us/op
Iteration   3: 4608.171 us/op
Iteration   4: 4627.611 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  4626.359 ±(99.9%) 116.152 us/op [Average]
  (min, avg, max) = (4608.171, 4626.359, 4650.535), stdev = 17.975
  CI (99.9%): [4510.207, 4742.511] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 62.50% complete, ETA 00:30:24
# Fork: 1 of 1
# Warmup Iteration   1: 10.243 us/op
Iteration   1: 9.869 us/op
Iteration   2: 9.884 us/op
Iteration   3: 9.920 us/op
Iteration   4: 9.891 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  9.891 ±(99.9%) 0.139 us/op [Average]
  (min, avg, max) = (9.869, 9.891, 9.920), stdev = 0.021
  CI (99.9%): [9.752, 10.030] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 62.86% complete, ETA 00:30:06
# Fork: 1 of 1
# Warmup Iteration   1: 77.754 us/op
Iteration   1: 64.786 us/op
Iteration   2: 64.772 us/op
Iteration   3: 67.139 us/op
Iteration   4: 68.859 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  66.389 ±(99.9%) 12.841 us/op [Average]
  (min, avg, max) = (64.772, 66.389, 68.859), stdev = 1.987
  CI (99.9%): [53.548, 79.230] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 63.21% complete, ETA 00:29:49
# Fork: 1 of 1
# Warmup Iteration   1: 750.158 us/op
Iteration   1: 665.476 us/op
Iteration   2: 656.557 us/op
Iteration   3: 660.023 us/op
Iteration   4: 657.546 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  659.900 ±(99.9%) 25.800 us/op [Average]
  (min, avg, max) = (656.557, 659.900, 665.476), stdev = 3.993
  CI (99.9%): [634.101, 685.700] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 63.57% complete, ETA 00:29:31
# Fork: 1 of 1
# Warmup Iteration   1: 6653.039 us/op
Iteration   1: 6105.696 us/op
Iteration   2: 6113.962 us/op
Iteration   3: 6111.066 us/op
Iteration   4: 6088.109 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  6104.708 ±(99.9%) 74.856 us/op [Average]
  (min, avg, max) = (6088.109, 6104.708, 6113.962), stdev = 11.584
  CI (99.9%): [6029.852, 6179.564] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 63.93% complete, ETA 00:29:14
# Fork: 1 of 1
# Warmup Iteration   1: 31096.121 us/op
Iteration   1: 26215.778 us/op
Iteration   2: 26197.426 us/op
Iteration   3: 26233.930 us/op
Iteration   4: 26255.525 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  26225.665 ±(99.9%) 160.690 us/op [Average]
  (min, avg, max) = (26197.426, 26225.665, 26255.525), stdev = 24.867
  CI (99.9%): [26064.975, 26386.355] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 64.29% complete, ETA 00:28:57
# Fork: 1 of 1
# Warmup Iteration   1: 16.562 us/op
Iteration   1: 16.034 us/op
Iteration   2: 15.912 us/op
Iteration   3: 15.997 us/op
Iteration   4: 16.051 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  15.999 ±(99.9%) 0.398 us/op [Average]
  (min, avg, max) = (15.912, 15.999, 16.051), stdev = 0.062
  CI (99.9%): [15.600, 16.397] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 64.64% complete, ETA 00:28:39
# Fork: 1 of 1
# Warmup Iteration   1: 110.580 us/op
Iteration   1: 103.313 us/op
Iteration   2: 103.376 us/op
Iteration   3: 103.224 us/op
Iteration   4: 102.927 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  103.210 ±(99.9%) 1.284 us/op [Average]
  (min, avg, max) = (102.927, 103.210, 103.376), stdev = 0.199
  CI (99.9%): [101.926, 104.494] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 65.00% complete, ETA 00:28:22
# Fork: 1 of 1
# Warmup Iteration   1: 1518.207 us/op
Iteration   1: 1441.490 us/op
Iteration   2: 1440.034 us/op
Iteration   3: 1440.773 us/op
Iteration   4: 1439.194 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  1440.373 ±(99.9%) 6.369 us/op [Average]
  (min, avg, max) = (1439.194, 1440.373, 1441.490), stdev = 0.986
  CI (99.9%): [1434.004, 1446.742] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 65.36% complete, ETA 00:28:05
# Fork: 1 of 1
# Warmup Iteration   1: 9945.066 us/op
Iteration   1: 9458.935 us/op
Iteration   2: 9434.032 us/op
Iteration   3: 9414.008 us/op
Iteration   4: 9469.325 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  9444.075 ±(99.9%) 161.045 us/op [Average]
  (min, avg, max) = (9414.008, 9444.075, 9469.325), stdev = 24.922
  CI (99.9%): [9283.030, 9605.120] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 65.71% complete, ETA 00:27:47
# Fork: 1 of 1
# Warmup Iteration   1: 71144.421 us/op
Iteration   1: 68492.142 us/op
Iteration   2: 68524.422 us/op
Iteration   3: 68453.750 us/op
Iteration   4: 68435.391 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  68476.426 ±(99.9%) 257.092 us/op [Average]
  (min, avg, max) = (68435.391, 68476.426, 68524.422), stdev = 39.785
  CI (99.9%): [68219.334, 68733.519] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 66.07% complete, ETA 00:27:30
# Fork: 1 of 1
# Warmup Iteration   1: 3.391 us/op
Iteration   1: 3.268 us/op
Iteration   2: 3.342 us/op
Iteration   3: 3.340 us/op
Iteration   4: 3.363 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  3.328 ±(99.9%) 0.269 us/op [Average]
  (min, avg, max) = (3.268, 3.328, 3.363), stdev = 0.042
  CI (99.9%): [3.059, 3.598] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 66.43% complete, ETA 00:27:13
# Fork: 1 of 1
# Warmup Iteration   1: 71.432 us/op
Iteration   1: 69.305 us/op
Iteration   2: 69.574 us/op
Iteration   3: 69.812 us/op
Iteration   4: 71.973 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  70.166 ±(99.9%) 7.899 us/op [Average]
  (min, avg, max) = (69.305, 70.166, 71.973), stdev = 1.222
  CI (99.9%): [62.267, 78.065] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 66.79% complete, ETA 00:26:55
# Fork: 1 of 1
# Warmup Iteration   1: 674.744 us/op
Iteration   1: 666.984 us/op
Iteration   2: 667.763 us/op
Iteration   3: 667.477 us/op
Iteration   4: 666.600 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  667.206 ±(99.9%) 3.336 us/op [Average]
  (min, avg, max) = (666.600, 667.206, 667.763), stdev = 0.516
  CI (99.9%): [663.870, 670.542] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 67.14% complete, ETA 00:26:38
# Fork: 1 of 1
# Warmup Iteration   1: 4401.142 us/op
Iteration   1: 4283.227 us/op
Iteration   2: 4282.968 us/op
Iteration   3: 4282.165 us/op
Iteration   4: 4291.861 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  4285.055 ±(99.9%) 29.464 us/op [Average]
  (min, avg, max) = (4282.165, 4285.055, 4291.861), stdev = 4.560
  CI (99.9%): [4255.591, 4314.519] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 67.50% complete, ETA 00:26:20
# Fork: 1 of 1
# Warmup Iteration   1: 28961.404 us/op
Iteration   1: 28294.923 us/op
Iteration   2: 28194.317 us/op
Iteration   3: 28195.296 us/op
Iteration   4: 28186.138 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  28217.668 ±(99.9%) 333.867 us/op [Average]
  (min, avg, max) = (28186.138, 28217.668, 28294.923), stdev = 51.666
  CI (99.9%): [27883.802, 28551.535] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 67.86% complete, ETA 00:26:03
# Fork: 1 of 1
# Warmup Iteration   1: 4.878 us/op
Iteration   1: 4.550 us/op
Iteration   2: 4.552 us/op
Iteration   3: 4.545 us/op
Iteration   4: 4.547 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  4.549 ±(99.9%) 0.019 us/op [Average]
  (min, avg, max) = (4.545, 4.549, 4.552), stdev = 0.003
  CI (99.9%): [4.530, 4.567] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 68.21% complete, ETA 00:25:46
# Fork: 1 of 1
# Warmup Iteration   1: 36.050 us/op
Iteration   1: 34.010 us/op
Iteration   2: 33.915 us/op
Iteration   3: 33.907 us/op
Iteration   4: 33.889 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  33.930 ±(99.9%) 0.352 us/op [Average]
  (min, avg, max) = (33.889, 33.930, 34.010), stdev = 0.054
  CI (99.9%): [33.579, 34.282] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 68.57% complete, ETA 00:25:28
# Fork: 1 of 1
# Warmup Iteration   1: 262.752 us/op
Iteration   1: 247.111 us/op
Iteration   2: 247.164 us/op
Iteration   3: 247.056 us/op
Iteration   4: 247.512 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  247.210 ±(99.9%) 1.330 us/op [Average]
  (min, avg, max) = (247.056, 247.210, 247.512), stdev = 0.206
  CI (99.9%): [245.880, 248.541] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 68.93% complete, ETA 00:25:11
# Fork: 1 of 1
# Warmup Iteration   1: 1699.313 us/op
Iteration   1: 1575.138 us/op
Iteration   2: 1575.568 us/op
Iteration   3: 1575.163 us/op
Iteration   4: 1573.195 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  1574.766 ±(99.9%) 6.887 us/op [Average]
  (min, avg, max) = (1573.195, 1574.766, 1575.568), stdev = 1.066
  CI (99.9%): [1567.879, 1581.653] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 69.29% complete, ETA 00:24:53
# Fork: 1 of 1
# Warmup Iteration   1: 10608.147 us/op
Iteration   1: 10024.309 us/op
Iteration   2: 10018.290 us/op
Iteration   3: 10015.280 us/op
Iteration   4: 10031.530 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  10022.352 ±(99.9%) 46.383 us/op [Average]
  (min, avg, max) = (10015.280, 10022.352, 10031.530), stdev = 7.178
  CI (99.9%): [9975.969, 10068.735] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 69.64% complete, ETA 00:24:36
# Fork: 1 of 1
# Warmup Iteration   1: 10.271 us/op
Iteration   1: 9.897 us/op
Iteration   2: 9.835 us/op
Iteration   3: 9.884 us/op
Iteration   4: 9.886 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  9.875 ±(99.9%) 0.178 us/op [Average]
  (min, avg, max) = (9.835, 9.875, 9.897), stdev = 0.028
  CI (99.9%): [9.697, 10.054] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 70.00% complete, ETA 00:24:19
# Fork: 1 of 1
# Warmup Iteration   1: 107.514 us/op
Iteration   1: 100.351 us/op
Iteration   2: 100.084 us/op
Iteration   3: 100.061 us/op
Iteration   4: 94.940 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  98.859 ±(99.9%) 16.905 us/op [Average]
  (min, avg, max) = (94.940, 98.859, 100.351), stdev = 2.616
  CI (99.9%): [81.954, 115.764] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 70.36% complete, ETA 00:24:01
# Fork: 1 of 1
# Warmup Iteration   1: 1393.882 us/op
Iteration   1: 1325.262 us/op
Iteration   2: 1312.563 us/op
Iteration   3: 1331.868 us/op
Iteration   4: 1309.113 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  1319.701 ±(99.9%) 68.997 us/op [Average]
  (min, avg, max) = (1309.113, 1319.701, 1331.868), stdev = 10.677
  CI (99.9%): [1250.705, 1388.698] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 70.71% complete, ETA 00:23:44
# Fork: 1 of 1
# Warmup Iteration   1: 8082.160 us/op
Iteration   1: 7540.923 us/op
Iteration   2: 7438.496 us/op
Iteration   3: 7433.060 us/op
Iteration   4: 7438.644 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  7462.781 ±(99.9%) 337.056 us/op [Average]
  (min, avg, max) = (7433.060, 7462.781, 7540.923), stdev = 52.160
  CI (99.9%): [7125.725, 7799.837] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 71.07% complete, ETA 00:23:27
# Fork: 1 of 1
# Warmup Iteration   1: 81874.100 us/op
Iteration   1: 80352.127 us/op
Iteration   2: 80266.061 us/op
Iteration   3: 80237.511 us/op
Iteration   4: 79590.373 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  80111.518 ±(99.9%) 2267.051 us/op [Average]
  (min, avg, max) = (79590.373, 80111.518, 80352.127), stdev = 350.829
  CI (99.9%): [77844.466, 82378.569] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 71.43% complete, ETA 00:23:09
# Fork: 1 of 1
# Warmup Iteration   1: 17.106 us/op
Iteration   1: 16.385 us/op
Iteration   2: 16.250 us/op
Iteration   3: 16.312 us/op
Iteration   4: 16.275 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  16.305 ±(99.9%) 0.380 us/op [Average]
  (min, avg, max) = (16.250, 16.305, 16.385), stdev = 0.059
  CI (99.9%): [15.926, 16.685] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 71.79% complete, ETA 00:22:52
# Fork: 1 of 1
# Warmup Iteration   1: 238.532 us/op
Iteration   1: 209.293 us/op
Iteration   2: 208.485 us/op
Iteration   3: 208.300 us/op
Iteration   4: 208.622 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  208.675 ±(99.9%) 2.795 us/op [Average]
  (min, avg, max) = (208.300, 208.675, 209.293), stdev = 0.433
  CI (99.9%): [205.880, 211.470] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 72.14% complete, ETA 00:22:34
# Fork: 1 of 1
# Warmup Iteration   1: 1898.649 us/op
Iteration   1: 1712.342 us/op
Iteration   2: 1709.541 us/op
Iteration   3: 1707.350 us/op
Iteration   4: 1706.396 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  1708.907 ±(99.9%) 17.068 us/op [Average]
  (min, avg, max) = (1706.396, 1708.907, 1712.342), stdev = 2.641
  CI (99.9%): [1691.839, 1725.975] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 72.50% complete, ETA 00:22:17
# Fork: 1 of 1
# Warmup Iteration   1: 10272.914 us/op
Iteration   1: 9298.632 us/op
Iteration   2: 9293.390 us/op
Iteration   3: 9304.691 us/op
Iteration   4: 9303.131 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  9299.961 ±(99.9%) 32.815 us/op [Average]
  (min, avg, max) = (9293.390, 9299.961, 9304.691), stdev = 5.078
  CI (99.9%): [9267.147, 9332.776] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 72.86% complete, ETA 00:22:00
# Fork: 1 of 1
# Warmup Iteration   1: 90118.577 us/op
Iteration   1: 74990.257 us/op
Iteration   2: 75158.841 us/op
Iteration   3: 75317.863 us/op
Iteration   4: 75192.474 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  75164.859 ±(99.9%) 872.528 us/op [Average]
  (min, avg, max) = (74990.257, 75164.859, 75317.863), stdev = 135.025
  CI (99.9%): [74292.331, 76037.387] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 73.21% complete, ETA 00:21:42
# Fork: 1 of 1
# Warmup Iteration   1: 3.269 us/op
Iteration   1: 3.196 us/op
Iteration   2: 3.257 us/op
Iteration   3: 3.261 us/op
Iteration   4: 3.250 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  3.241 ±(99.9%) 0.198 us/op [Average]
  (min, avg, max) = (3.196, 3.241, 3.261), stdev = 0.031
  CI (99.9%): [3.043, 3.439] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 73.57% complete, ETA 00:21:25
# Fork: 1 of 1
# Warmup Iteration   1: 103.175 us/op
Iteration   1: 94.123 us/op
Iteration   2: 94.306 us/op
Iteration   3: 94.412 us/op
Iteration   4: 94.176 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  94.254 ±(99.9%) 0.841 us/op [Average]
  (min, avg, max) = (94.123, 94.254, 94.412), stdev = 0.130
  CI (99.9%): [93.413, 95.096] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 73.93% complete, ETA 00:21:08
# Fork: 1 of 1
# Warmup Iteration   1: 789.056 us/op
Iteration   1: 729.465 us/op
Iteration   2: 727.211 us/op
Iteration   3: 728.335 us/op
Iteration   4: 726.920 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  727.982 ±(99.9%) 7.504 us/op [Average]
  (min, avg, max) = (726.920, 727.982, 729.465), stdev = 1.161
  CI (99.9%): [720.479, 735.486] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 74.29% complete, ETA 00:20:50
# Fork: 1 of 1
# Warmup Iteration   1: 4725.382 us/op
Iteration   1: 4517.785 us/op
Iteration   2: 4529.299 us/op
Iteration   3: 4534.444 us/op
Iteration   4: 4516.485 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  4524.503 ±(99.9%) 56.733 us/op [Average]
  (min, avg, max) = (4516.485, 4524.503, 4534.444), stdev = 8.780
  CI (99.9%): [4467.770, 4581.236] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 74.64% complete, ETA 00:20:33
# Fork: 1 of 1
# Warmup Iteration   1: 32674.818 us/op
Iteration   1: 30901.927 us/op
Iteration   2: 30840.742 us/op
Iteration   3: 30895.598 us/op
Iteration   4: 30873.586 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  30877.963 ±(99.9%) 178.527 us/op [Average]
  (min, avg, max) = (30840.742, 30877.963, 30901.927), stdev = 27.627
  CI (99.9%): [30699.436, 31056.491] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 75.00% complete, ETA 00:20:16
# Fork: 1 of 1
# Warmup Iteration   1: 5.083 us/op
Iteration   1: 4.769 us/op
Iteration   2: 4.740 us/op
Iteration   3: 4.746 us/op
Iteration   4: 4.741 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  4.749 ±(99.9%) 0.088 us/op [Average]
  (min, avg, max) = (4.740, 4.749, 4.769), stdev = 0.014
  CI (99.9%): [4.661, 4.837] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 75.36% complete, ETA 00:19:58
# Fork: 1 of 1
# Warmup Iteration   1: 44.408 us/op
Iteration   1: 41.238 us/op
Iteration   2: 41.146 us/op
Iteration   3: 41.153 us/op
Iteration   4: 41.266 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  41.200 ±(99.9%) 0.389 us/op [Average]
  (min, avg, max) = (41.146, 41.200, 41.266), stdev = 0.060
  CI (99.9%): [40.811, 41.590] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 75.71% complete, ETA 00:19:41
# Fork: 1 of 1
# Warmup Iteration   1: 212.246 us/op
Iteration   1: 188.802 us/op
Iteration   2: 188.386 us/op
Iteration   3: 189.876 us/op
Iteration   4: 189.529 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  189.148 ±(99.9%) 4.375 us/op [Average]
  (min, avg, max) = (188.386, 189.148, 189.876), stdev = 0.677
  CI (99.9%): [184.773, 193.524] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 76.07% complete, ETA 00:19:23
# Fork: 1 of 1
# Warmup Iteration   1: 1067.101 us/op
Iteration   1: 972.669 us/op
Iteration   2: 968.300 us/op
Iteration   3: 969.252 us/op
Iteration   4: 966.685 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  969.227 ±(99.9%) 16.336 us/op [Average]
  (min, avg, max) = (966.685, 969.227, 972.669), stdev = 2.528
  CI (99.9%): [952.891, 985.563] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 76.43% complete, ETA 00:19:06
# Fork: 1 of 1
# Warmup Iteration   1: 7796.686 us/op
Iteration   1: 6774.097 us/op
Iteration   2: 6772.107 us/op
Iteration   3: 6738.855 us/op
Iteration   4: 6767.616 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  6763.169 ±(99.9%) 106.198 us/op [Average]
  (min, avg, max) = (6738.855, 6763.169, 6774.097), stdev = 16.434
  CI (99.9%): [6656.971, 6869.367] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 76.79% complete, ETA 00:18:49
# Fork: 1 of 1
# Warmup Iteration   1: 10.619 us/op
Iteration   1: 10.152 us/op
Iteration   2: 10.064 us/op
Iteration   3: 10.102 us/op
Iteration   4: 10.203 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  10.130 ±(99.9%) 0.389 us/op [Average]
  (min, avg, max) = (10.064, 10.130, 10.203), stdev = 0.060
  CI (99.9%): [9.741, 10.519] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 77.14% complete, ETA 00:18:31
# Fork: 1 of 1
# Warmup Iteration   1: 95.307 us/op
Iteration   1: 81.150 us/op
Iteration   2: 81.098 us/op
Iteration   3: 81.110 us/op
Iteration   4: 80.635 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  80.998 ±(99.9%) 1.571 us/op [Average]
  (min, avg, max) = (80.635, 80.998, 81.150), stdev = 0.243
  CI (99.9%): [79.427, 82.569] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 77.50% complete, ETA 00:18:14
# Fork: 1 of 1
# Warmup Iteration   1: 1063.705 us/op
Iteration   1: 954.263 us/op
Iteration   2: 956.064 us/op
Iteration   3: 955.012 us/op
Iteration   4: 953.507 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  954.711 ±(99.9%) 7.052 us/op [Average]
  (min, avg, max) = (953.507, 954.711, 956.064), stdev = 1.091
  CI (99.9%): [947.659, 961.763] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 77.86% complete, ETA 00:17:57
# Fork: 1 of 1
# Warmup Iteration   1: 8184.487 us/op
Iteration   1: 7492.440 us/op
Iteration   2: 7491.066 us/op
Iteration   3: 7463.581 us/op
Iteration   4: 7434.620 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  7470.427 ±(99.9%) 176.556 us/op [Average]
  (min, avg, max) = (7434.620, 7470.427, 7492.440), stdev = 27.322
  CI (99.9%): [7293.871, 7646.983] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 78.21% complete, ETA 00:17:39
# Fork: 1 of 1
# Warmup Iteration   1: 37486.736 us/op
Iteration   1: 30462.221 us/op
Iteration   2: 30326.701 us/op
Iteration   3: 30339.819 us/op
Iteration   4: 30590.056 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  30429.699 ±(99.9%) 795.453 us/op [Average]
  (min, avg, max) = (30326.701, 30429.699, 30590.056), stdev = 123.097
  CI (99.9%): [29634.246, 31225.153] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 78.57% complete, ETA 00:17:22
# Fork: 1 of 1
# Warmup Iteration   1: 16.725 us/op
Iteration   1: 16.033 us/op
Iteration   2: 15.924 us/op
Iteration   3: 16.112 us/op
Iteration   4: 15.993 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  16.015 ±(99.9%) 0.508 us/op [Average]
  (min, avg, max) = (15.924, 16.015, 16.112), stdev = 0.079
  CI (99.9%): [15.507, 16.523] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 78.93% complete, ETA 00:17:04
# Fork: 1 of 1
# Warmup Iteration   1: 289.089 us/op
Iteration   1: 274.424 us/op
Iteration   2: 274.674 us/op
Iteration   3: 274.517 us/op
Iteration   4: 274.469 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  274.521 ±(99.9%) 0.703 us/op [Average]
  (min, avg, max) = (274.424, 274.521, 274.674), stdev = 0.109
  CI (99.9%): [273.818, 275.224] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 79.29% complete, ETA 00:16:47
# Fork: 1 of 1
# Warmup Iteration   1: 2576.058 us/op
Iteration   1: 2423.748 us/op
Iteration   2: 2420.333 us/op
Iteration   3: 2417.941 us/op
Iteration   4: 2416.985 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  2419.752 ±(99.9%) 19.473 us/op [Average]
  (min, avg, max) = (2416.985, 2419.752, 2423.748), stdev = 3.014
  CI (99.9%): [2400.278, 2439.225] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 79.64% complete, ETA 00:16:30
# Fork: 1 of 1
# Warmup Iteration   1: 15177.959 us/op
Iteration   1: 14602.165 us/op
Iteration   2: 14589.407 us/op
Iteration   3: 14547.534 us/op
Iteration   4: 14576.263 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  14578.842 ±(99.9%) 151.198 us/op [Average]
  (min, avg, max) = (14547.534, 14578.842, 14602.165), stdev = 23.398
  CI (99.9%): [14427.644, 14730.040] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 80.00% complete, ETA 00:16:12
# Fork: 1 of 1
# Warmup Iteration   1: 113424.550 us/op
Iteration   1: 107747.907 us/op
Iteration   2: 107500.379 us/op
Iteration   3: 107581.579 us/op
Iteration   4: 107527.204 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  107589.267 ±(99.9%) 717.433 us/op [Average]
  (min, avg, max) = (107500.379, 107589.267, 107747.907), stdev = 111.024
  CI (99.9%): [106871.834, 108306.700] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 80.36% complete, ETA 00:15:55
# Fork: 1 of 1
# Warmup Iteration   1: 3.453 us/op
Iteration   1: 3.336 us/op
Iteration   2: 3.424 us/op
Iteration   3: 3.410 us/op
Iteration   4: 3.421 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  3.398 ±(99.9%) 0.268 us/op [Average]
  (min, avg, max) = (3.336, 3.398, 3.424), stdev = 0.042
  CI (99.9%): [3.129, 3.666] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 80.71% complete, ETA 00:15:38
# Fork: 1 of 1
# Warmup Iteration   1: 81.286 us/op
Iteration   1: 78.966 us/op
Iteration   2: 79.005 us/op
Iteration   3: 78.266 us/op
Iteration   4: 78.204 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  78.610 ±(99.9%) 2.807 us/op [Average]
  (min, avg, max) = (78.204, 78.610, 79.005), stdev = 0.434
  CI (99.9%): [75.803, 81.418] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 81.07% complete, ETA 00:15:20
# Fork: 1 of 1
# Warmup Iteration   1: 682.238 us/op
Iteration   1: 673.849 us/op
Iteration   2: 675.575 us/op
Iteration   3: 673.777 us/op
Iteration   4: 674.157 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  674.340 ±(99.9%) 5.429 us/op [Average]
  (min, avg, max) = (673.777, 674.340, 675.575), stdev = 0.840
  CI (99.9%): [668.911, 679.768] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 81.43% complete, ETA 00:15:03
# Fork: 1 of 1
# Warmup Iteration   1: 4448.654 us/op
Iteration   1: 4364.896 us/op
Iteration   2: 4368.956 us/op
Iteration   3: 4379.054 us/op
Iteration   4: 4379.477 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  4373.096 ±(99.9%) 47.281 us/op [Average]
  (min, avg, max) = (4364.896, 4373.096, 4379.477), stdev = 7.317
  CI (99.9%): [4325.815, 4420.376] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 81.79% complete, ETA 00:14:45
# Fork: 1 of 1
# Warmup Iteration   1: 30064.525 us/op
Iteration   1: 29471.625 us/op
Iteration   2: 29381.444 us/op
Iteration   3: 29357.026 us/op
Iteration   4: 29349.825 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  29389.980 ±(99.9%) 362.433 us/op [Average]
  (min, avg, max) = (29349.825, 29389.980, 29471.625), stdev = 56.087
  CI (99.9%): [29027.547, 29752.413] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 82.14% complete, ETA 00:14:28
# Fork: 1 of 1
# Warmup Iteration   1: 5.041 us/op
Iteration   1: 4.718 us/op
Iteration   2: 4.729 us/op
Iteration   3: 4.724 us/op
Iteration   4: 4.732 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  4.726 ±(99.9%) 0.039 us/op [Average]
  (min, avg, max) = (4.718, 4.726, 4.732), stdev = 0.006
  CI (99.9%): [4.687, 4.765] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 82.50% complete, ETA 00:14:11
# Fork: 1 of 1
# Warmup Iteration   1: 44.600 us/op
Iteration   1: 42.342 us/op
Iteration   2: 42.297 us/op
Iteration   3: 42.237 us/op
Iteration   4: 42.253 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  42.282 ±(99.9%) 0.306 us/op [Average]
  (min, avg, max) = (42.237, 42.282, 42.342), stdev = 0.047
  CI (99.9%): [41.976, 42.588] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 82.86% complete, ETA 00:13:53
# Fork: 1 of 1
# Warmup Iteration   1: 276.711 us/op
Iteration   1: 261.167 us/op
Iteration   2: 260.823 us/op
Iteration   3: 260.715 us/op
Iteration   4: 260.664 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  260.842 ±(99.9%) 1.465 us/op [Average]
  (min, avg, max) = (260.664, 260.842, 261.167), stdev = 0.227
  CI (99.9%): [259.378, 262.307] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 83.21% complete, ETA 00:13:36
# Fork: 1 of 1
# Warmup Iteration   1: 1806.727 us/op
Iteration   1: 1717.290 us/op
Iteration   2: 1714.827 us/op
Iteration   3: 1713.704 us/op
Iteration   4: 1716.458 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  1715.570 ±(99.9%) 10.409 us/op [Average]
  (min, avg, max) = (1713.704, 1715.570, 1717.290), stdev = 1.611
  CI (99.9%): [1705.161, 1725.979] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 83.57% complete, ETA 00:13:19
# Fork: 1 of 1
# Warmup Iteration   1: 12856.669 us/op
Iteration   1: 12169.129 us/op
Iteration   2: 12131.010 us/op
Iteration   3: 12134.341 us/op
Iteration   4: 12117.967 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  12138.112 ±(99.9%) 141.206 us/op [Average]
  (min, avg, max) = (12117.967, 12138.112, 12169.129), stdev = 21.852
  CI (99.9%): [11996.905, 12279.318] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 83.93% complete, ETA 00:13:01
# Fork: 1 of 1
# Warmup Iteration   1: 10.777 us/op
Iteration   1: 10.358 us/op
Iteration   2: 10.380 us/op
Iteration   3: 10.430 us/op
Iteration   4: 10.464 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  10.408 ±(99.9%) 0.310 us/op [Average]
  (min, avg, max) = (10.358, 10.408, 10.464), stdev = 0.048
  CI (99.9%): [10.098, 10.718] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 84.29% complete, ETA 00:12:44
# Fork: 1 of 1
# Warmup Iteration   1: 121.498 us/op
Iteration   1: 110.972 us/op
Iteration   2: 110.819 us/op
Iteration   3: 110.834 us/op
Iteration   4: 110.143 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  110.692 ±(99.9%) 2.406 us/op [Average]
  (min, avg, max) = (110.143, 110.692, 110.972), stdev = 0.372
  CI (99.9%): [108.286, 113.098] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 84.64% complete, ETA 00:12:26
# Fork: 1 of 1
# Warmup Iteration   1: 1899.748 us/op
Iteration   1: 1788.995 us/op
Iteration   2: 1789.715 us/op
Iteration   3: 1788.514 us/op
Iteration   4: 1790.494 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  1789.430 ±(99.9%) 5.586 us/op [Average]
  (min, avg, max) = (1788.514, 1789.430, 1790.494), stdev = 0.864
  CI (99.9%): [1783.844, 1795.016] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 85.00% complete, ETA 00:12:09
# Fork: 1 of 1
# Warmup Iteration   1: 9018.340 us/op
Iteration   1: 8322.098 us/op
Iteration   2: 8304.198 us/op
Iteration   3: 8266.912 us/op
Iteration   4: 8310.282 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  8300.873 ±(99.9%) 153.980 us/op [Average]
  (min, avg, max) = (8266.912, 8300.873, 8322.098), stdev = 23.829
  CI (99.9%): [8146.893, 8454.852] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 85.36% complete, ETA 00:11:52
# Fork: 1 of 1
# Warmup Iteration   1: 96083.477 us/op
Iteration   1: 91620.791 us/op
Iteration   2: 91007.735 us/op
Iteration   3: 91690.985 us/op
Iteration   4: 91551.421 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  91467.733 ±(99.9%) 2015.582 us/op [Average]
  (min, avg, max) = (91007.735, 91467.733, 91690.985), stdev = 311.914
  CI (99.9%): [89452.150, 93483.315] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 85.71% complete, ETA 00:11:34
# Fork: 1 of 1
# Warmup Iteration   1: 15.723 us/op
Iteration   1: 15.487 us/op
Iteration   2: 15.497 us/op
Iteration   3: 15.411 us/op
Iteration   4: 15.427 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  15.455 ±(99.9%) 0.278 us/op [Average]
  (min, avg, max) = (15.411, 15.455, 15.497), stdev = 0.043
  CI (99.9%): [15.177, 15.734] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 86.07% complete, ETA 00:11:17
# Fork: 1 of 1
# Warmup Iteration   1: 193.446 us/op
Iteration   1: 184.623 us/op
Iteration   2: 184.789 us/op
Iteration   3: 184.619 us/op
Iteration   4: 184.763 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  184.698 ±(99.9%) 0.582 us/op [Average]
  (min, avg, max) = (184.619, 184.698, 184.789), stdev = 0.090
  CI (99.9%): [184.117, 185.280] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 86.43% complete, ETA 00:11:00
# Fork: 1 of 1
# Warmup Iteration   1: 905.379 us/op
Iteration   1: 854.504 us/op
Iteration   2: 852.030 us/op
Iteration   3: 846.870 us/op
Iteration   4: 848.009 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  850.353 ±(99.9%) 22.897 us/op [Average]
  (min, avg, max) = (846.870, 850.353, 854.504), stdev = 3.543
  CI (99.9%): [827.456, 873.250] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 86.79% complete, ETA 00:10:42
# Fork: 1 of 1
# Warmup Iteration   1: 1904.943 us/op
Iteration   1: 1897.029 us/op
Iteration   2: 1896.739 us/op
Iteration   3: 1821.913 us/op
Iteration   4: 1797.173 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  1853.214 ±(99.9%) 332.327 us/op [Average]
  (min, avg, max) = (1797.173, 1853.214, 1897.029), stdev = 51.428
  CI (99.9%): [1520.887, 2185.540] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 87.14% complete, ETA 00:10:25
# Fork: 1 of 1
# Warmup Iteration   1: 5652.107 us/op
Iteration   1: 5376.420 us/op
Iteration   2: 5275.631 us/op
Iteration   3: 5345.358 us/op
Iteration   4: 5245.141 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  5310.637 ±(99.9%) 392.147 us/op [Average]
  (min, avg, max) = (5245.141, 5310.637, 5376.420), stdev = 60.685
  CI (99.9%): [4918.491, 5702.784] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 87.50% complete, ETA 00:10:08
# Fork: 1 of 1
# Warmup Iteration   1: 2.739 us/op
Iteration   1: 2.686 us/op
Iteration   2: 2.664 us/op
Iteration   3: 2.667 us/op
Iteration   4: 2.648 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  2.666 ±(99.9%) 0.101 us/op [Average]
  (min, avg, max) = (2.648, 2.666, 2.686), stdev = 0.016
  CI (99.9%): [2.566, 2.767] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 87.86% complete, ETA 00:09:50
# Fork: 1 of 1
# Warmup Iteration   1: 65.571 us/op
Iteration   1: 57.582 us/op
Iteration   2: 57.689 us/op
Iteration   3: 57.607 us/op
Iteration   4: 57.468 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  57.587 ±(99.9%) 0.588 us/op [Average]
  (min, avg, max) = (57.468, 57.587, 57.689), stdev = 0.091
  CI (99.9%): [56.999, 58.174] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 88.21% complete, ETA 00:09:33
# Fork: 1 of 1
# Warmup Iteration   1: 134.399 us/op
Iteration   1: 107.194 us/op
Iteration   2: 106.611 us/op
Iteration   3: 107.007 us/op
Iteration   4: 106.496 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  106.827 ±(99.9%) 2.121 us/op [Average]
  (min, avg, max) = (106.496, 106.827, 107.194), stdev = 0.328
  CI (99.9%): [104.706, 108.948] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 88.57% complete, ETA 00:09:15
# Fork: 1 of 1
# Warmup Iteration   1: 543.533 us/op
Iteration   1: 550.284 us/op
Iteration   2: 468.452 us/op
Iteration   3: 447.845 us/op
Iteration   4: 450.497 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  479.270 ±(99.9%) 311.596 us/op [Average]
  (min, avg, max) = (447.845, 479.270, 550.284), stdev = 48.220
  CI (99.9%): [167.674, 790.866] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 88.93% complete, ETA 00:08:58
# Fork: 1 of 1
# Warmup Iteration   1: 2878.990 us/op
Iteration   1: 2602.536 us/op
Iteration   2: 2659.782 us/op
Iteration   3: 2582.947 us/op
Iteration   4: 2578.706 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  2605.993 ±(99.9%) 241.233 us/op [Average]
  (min, avg, max) = (2578.706, 2605.993, 2659.782), stdev = 37.331
  CI (99.9%): [2364.760, 2847.226] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 89.29% complete, ETA 00:08:41
# Fork: 1 of 1
# Warmup Iteration   1: 12.504 us/op
Iteration   1: 12.414 us/op
Iteration   2: 12.331 us/op
Iteration   3: 12.307 us/op
Iteration   4: 12.281 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  12.333 ±(99.9%) 0.374 us/op [Average]
  (min, avg, max) = (12.281, 12.333, 12.414), stdev = 0.058
  CI (99.9%): [11.960, 12.707] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 89.64% complete, ETA 00:08:23
# Fork: 1 of 1
# Warmup Iteration   1: 66.032 us/op
Iteration   1: 59.731 us/op
Iteration   2: 61.103 us/op
Iteration   3: 56.625 us/op
Iteration   4: 56.626 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  58.521 ±(99.9%) 14.604 us/op [Average]
  (min, avg, max) = (56.625, 58.521, 61.103), stdev = 2.260
  CI (99.9%): [43.918, 73.125] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 90.00% complete, ETA 00:08:06
# Fork: 1 of 1
# Warmup Iteration   1: 189.221 us/op
Iteration   1: 181.095 us/op
Iteration   2: 180.445 us/op
Iteration   3: 180.538 us/op
Iteration   4: 180.312 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  180.597 ±(99.9%) 2.225 us/op [Average]
  (min, avg, max) = (180.312, 180.597, 181.095), stdev = 0.344
  CI (99.9%): [178.373, 182.822] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 90.36% complete, ETA 00:07:49
# Fork: 1 of 1
# Warmup Iteration   1: 745.234 us/op
Iteration   1: 688.475 us/op
Iteration   2: 687.869 us/op
Iteration   3: 671.537 us/op
Iteration   4: 671.585 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  679.866 ±(99.9%) 61.994 us/op [Average]
  (min, avg, max) = (671.537, 679.866, 688.475), stdev = 9.594
  CI (99.9%): [617.872, 741.860] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 90.71% complete, ETA 00:07:31
# Fork: 1 of 1
# Warmup Iteration   1: 2732.224 us/op
Iteration   1: 2689.452 us/op
Iteration   2: 2693.701 us/op
Iteration   3: 2691.373 us/op
Iteration   4: 2689.734 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  2691.065 ±(99.9%) 12.604 us/op [Average]
  (min, avg, max) = (2689.452, 2691.065, 2693.701), stdev = 1.951
  CI (99.9%): [2678.460, 2703.669] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 91.07% complete, ETA 00:07:14
# Fork: 1 of 1
# Warmup Iteration   1: 9.046 us/op
Iteration   1: 8.672 us/op
Iteration   2: 8.732 us/op
Iteration   3: 8.731 us/op
Iteration   4: 8.754 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  8.722 ±(99.9%) 0.227 us/op [Average]
  (min, avg, max) = (8.672, 8.722, 8.754), stdev = 0.035
  CI (99.9%): [8.495, 8.949] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 91.43% complete, ETA 00:06:56
# Fork: 1 of 1
# Warmup Iteration   1: 65.022 us/op
Iteration   1: 59.763 us/op
Iteration   2: 59.623 us/op
Iteration   3: 59.556 us/op
Iteration   4: 59.831 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  59.693 ±(99.9%) 0.812 us/op [Average]
  (min, avg, max) = (59.556, 59.693, 59.831), stdev = 0.126
  CI (99.9%): [58.881, 60.505] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 91.79% complete, ETA 00:06:39
# Fork: 1 of 1
# Warmup Iteration   1: 260.221 us/op
Iteration   1: 228.289 us/op
Iteration   2: 227.458 us/op
Iteration   3: 227.669 us/op
Iteration   4: 228.138 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  227.888 ±(99.9%) 2.519 us/op [Average]
  (min, avg, max) = (227.458, 227.888, 228.289), stdev = 0.390
  CI (99.9%): [225.369, 230.408] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 92.14% complete, ETA 00:06:22
# Fork: 1 of 1
# Warmup Iteration   1: 772.804 us/op
Iteration   1: 779.137 us/op
Iteration   2: 710.265 us/op
Iteration   3: 678.133 us/op
Iteration   4: 681.142 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  712.169 ±(99.9%) 303.310 us/op [Average]
  (min, avg, max) = (678.133, 712.169, 779.137), stdev = 46.938
  CI (99.9%): [408.859, 1015.479] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 92.50% complete, ETA 00:06:04
# Fork: 1 of 1
# Warmup Iteration   1: 2799.385 us/op
Iteration   1: 2510.625 us/op
Iteration   2: 2537.532 us/op
Iteration   3: 2484.305 us/op
Iteration   4: 2453.952 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  2496.604 ±(99.9%) 231.256 us/op [Average]
  (min, avg, max) = (2453.952, 2496.604, 2537.532), stdev = 35.787
  CI (99.9%): [2265.348, 2727.859] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 92.86% complete, ETA 00:05:47
# Fork: 1 of 1
# Warmup Iteration   1: 18.451 us/op
Iteration   1: 17.857 us/op
Iteration   2: 19.316 us/op
Iteration   3: 15.402 us/op
Iteration   4: 16.636 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  17.303 ±(99.9%) 10.825 us/op [Average]
  (min, avg, max) = (15.402, 17.303, 19.316), stdev = 1.675
  CI (99.9%): [6.478, 28.128] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 93.21% complete, ETA 00:05:30
# Fork: 1 of 1
# Warmup Iteration   1: 196.000 us/op
Iteration   1: 187.882 us/op
Iteration   2: 188.125 us/op
Iteration   3: 187.798 us/op
Iteration   4: 187.833 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  187.910 ±(99.9%) 0.954 us/op [Average]
  (min, avg, max) = (187.798, 187.910, 188.125), stdev = 0.148
  CI (99.9%): [186.956, 188.864] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 93.57% complete, ETA 00:05:12
# Fork: 1 of 1
# Warmup Iteration   1: 893.674 us/op
Iteration   1: 845.558 us/op
Iteration   2: 843.014 us/op
Iteration   3: 842.901 us/op
Iteration   4: 844.218 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  843.923 ±(99.9%) 8.027 us/op [Average]
  (min, avg, max) = (842.901, 843.923, 845.558), stdev = 1.242
  CI (99.9%): [835.896, 851.949] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 93.93% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 1942.097 us/op
Iteration   1: 1924.389 us/op
Iteration   2: 1912.388 us/op
Iteration   3: 1831.968 us/op
Iteration   4: 1823.094 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  1872.960 ±(99.9%) 341.254 us/op [Average]
  (min, avg, max) = (1823.094, 1872.960, 1924.389), stdev = 52.809
  CI (99.9%): [1531.706, 2214.213] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 94.29% complete, ETA 00:04:37
# Fork: 1 of 1
# Warmup Iteration   1: 5670.893 us/op
Iteration   1: 5403.691 us/op
Iteration   2: 5353.786 us/op
Iteration   3: 5390.722 us/op
Iteration   4: 5273.263 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  5355.366 ±(99.9%) 379.164 us/op [Average]
  (min, avg, max) = (5273.263, 5355.366, 5403.691), stdev = 58.676
  CI (99.9%): [4976.201, 5734.530] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 94.64% complete, ETA 00:04:20
# Fork: 1 of 1
# Warmup Iteration   1: 2.779 us/op
Iteration   1: 2.685 us/op
Iteration   2: 2.663 us/op
Iteration   3: 2.674 us/op
Iteration   4: 2.652 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  2.669 ±(99.9%) 0.091 us/op [Average]
  (min, avg, max) = (2.652, 2.669, 2.685), stdev = 0.014
  CI (99.9%): [2.578, 2.760] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 95.00% complete, ETA 00:04:03
# Fork: 1 of 1
# Warmup Iteration   1: 68.498 us/op
Iteration   1: 57.630 us/op
Iteration   2: 57.659 us/op
Iteration   3: 57.402 us/op
Iteration   4: 57.541 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  57.558 ±(99.9%) 0.745 us/op [Average]
  (min, avg, max) = (57.402, 57.558, 57.659), stdev = 0.115
  CI (99.9%): [56.813, 58.303] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 95.36% complete, ETA 00:03:45
# Fork: 1 of 1
# Warmup Iteration   1: 134.934 us/op
Iteration   1: 107.187 us/op
Iteration   2: 107.343 us/op
Iteration   3: 106.753 us/op
Iteration   4: 107.177 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  107.115 ±(99.9%) 1.637 us/op [Average]
  (min, avg, max) = (106.753, 107.115, 107.343), stdev = 0.253
  CI (99.9%): [105.478, 108.752] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 95.71% complete, ETA 00:03:28
# Fork: 1 of 1
# Warmup Iteration   1: 510.411 us/op
Iteration   1: 550.399 us/op
Iteration   2: 529.926 us/op
Iteration   3: 448.220 us/op
Iteration   4: 448.051 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  494.149 ±(99.9%) 347.560 us/op [Average]
  (min, avg, max) = (448.051, 494.149, 550.399), stdev = 53.785
  CI (99.9%): [146.589, 841.709] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 96.07% complete, ETA 00:03:11
# Fork: 1 of 1
# Warmup Iteration   1: 2878.365 us/op
Iteration   1: 2618.274 us/op
Iteration   2: 2675.145 us/op
Iteration   3: 2559.375 us/op
Iteration   4: 2578.079 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  2607.718 ±(99.9%) 331.044 us/op [Average]
  (min, avg, max) = (2559.375, 2607.718, 2675.145), stdev = 51.229
  CI (99.9%): [2276.674, 2938.762] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 96.43% complete, ETA 00:02:53
# Fork: 1 of 1
# Warmup Iteration   1: 12.557 us/op
Iteration   1: 12.343 us/op
Iteration   2: 12.380 us/op
Iteration   3: 12.345 us/op
Iteration   4: 12.347 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  12.354 ±(99.9%) 0.115 us/op [Average]
  (min, avg, max) = (12.343, 12.354, 12.380), stdev = 0.018
  CI (99.9%): [12.239, 12.469] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 96.79% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: 63.426 us/op
Iteration   1: 62.218 us/op
Iteration   2: 63.519 us/op
Iteration   3: 57.009 us/op
Iteration   4: 57.174 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  59.980 ±(99.9%) 21.831 us/op [Average]
  (min, avg, max) = (57.009, 59.980, 63.519), stdev = 3.378
  CI (99.9%): [38.149, 81.811] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 97.14% complete, ETA 00:02:18
# Fork: 1 of 1
# Warmup Iteration   1: 188.806 us/op
Iteration   1: 180.908 us/op
Iteration   2: 180.384 us/op
Iteration   3: 180.454 us/op
Iteration   4: 180.419 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  180.541 ±(99.9%) 1.590 us/op [Average]
  (min, avg, max) = (180.384, 180.541, 180.908), stdev = 0.246
  CI (99.9%): [178.951, 182.131] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 97.50% complete, ETA 00:02:01
# Fork: 1 of 1
# Warmup Iteration   1: 743.644 us/op
Iteration   1: 686.451 us/op
Iteration   2: 687.043 us/op
Iteration   3: 671.245 us/op
Iteration   4: 670.368 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  678.777 ±(99.9%) 59.536 us/op [Average]
  (min, avg, max) = (670.368, 678.777, 687.043), stdev = 9.213
  CI (99.9%): [619.241, 738.313] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 97.86% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: 2730.399 us/op
Iteration   1: 2686.001 us/op
Iteration   2: 2685.076 us/op
Iteration   3: 2685.401 us/op
Iteration   4: 2684.121 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  2685.150 ±(99.9%) 5.078 us/op [Average]
  (min, avg, max) = (2684.121, 2685.150, 2686.001), stdev = 0.786
  CI (99.9%): [2680.072, 2690.228] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 98.21% complete, ETA 00:01:26
# Fork: 1 of 1
# Warmup Iteration   1: 9.003 us/op
Iteration   1: 8.694 us/op
Iteration   2: 8.766 us/op
Iteration   3: 8.735 us/op
Iteration   4: 8.749 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  8.736 ±(99.9%) 0.197 us/op [Average]
  (min, avg, max) = (8.694, 8.736, 8.766), stdev = 0.031
  CI (99.9%): [8.539, 8.933] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 98.57% complete, ETA 00:01:09
# Fork: 1 of 1
# Warmup Iteration   1: 64.719 us/op
Iteration   1: 59.613 us/op
Iteration   2: 60.019 us/op
Iteration   3: 59.634 us/op
Iteration   4: 59.689 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  59.739 ±(99.9%) 1.225 us/op [Average]
  (min, avg, max) = (59.613, 59.739, 60.019), stdev = 0.190
  CI (99.9%): [58.514, 60.964] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 98.93% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: 261.050 us/op
Iteration   1: 229.169 us/op
Iteration   2: 227.752 us/op
Iteration   3: 227.674 us/op
Iteration   4: 228.152 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  228.187 ±(99.9%) 4.442 us/op [Average]
  (min, avg, max) = (227.674, 228.187, 229.169), stdev = 0.687
  CI (99.9%): [223.745, 232.629] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 99.29% complete, ETA 00:00:34
# Fork: 1 of 1
# Warmup Iteration   1: 772.492 us/op
Iteration   1: 780.665 us/op
Iteration   2: 707.192 us/op
Iteration   3: 676.533 us/op
Iteration   4: 683.593 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  711.996 ±(99.9%) 307.716 us/op [Average]
  (min, avg, max) = (676.533, 711.996, 780.665), stdev = 47.619
  CI (99.9%): [404.279, 1019.712] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 99.64% complete, ETA 00:00:17
# Fork: 1 of 1
# Warmup Iteration   1: 2797.232 us/op
Iteration   1: 2506.915 us/op
Iteration   2: 2534.358 us/op
Iteration   3: 2495.275 us/op
Iteration   4: 2472.265 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  2502.203 ±(99.9%) 166.865 us/op [Average]
  (min, avg, max) = (2472.265, 2502.203, 2534.358), stdev = 25.822
  CI (99.9%): [2335.338, 2669.068] (assumes normal distribution)


# Run complete. Total time: 01:21:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           (builder)   (size)  Mode  Cnt       Score      Error  Units
ArraysSort.Byte.testParallelSort       RANDOM      800  avgt    4       2.460 ±    0.340  us/op
ArraysSort.Byte.testParallelSort       RANDOM     7000  avgt    4      10.104 ±    2.273  us/op
ArraysSort.Byte.testParallelSort       RANDOM    50000  avgt    4      56.125 ±    3.690  us/op
ArraysSort.Byte.testParallelSort       RANDOM   300000  avgt    4     276.692 ±    1.322  us/op
ArraysSort.Byte.testParallelSort       RANDOM  2000000  avgt    4    1812.064 ±   18.738  us/op
ArraysSort.Byte.testParallelSort     REPEATED      800  avgt    4       1.186 ±    0.453  us/op
ArraysSort.Byte.testParallelSort     REPEATED     7000  avgt    4       7.867 ±    2.415  us/op
ArraysSort.Byte.testParallelSort     REPEATED    50000  avgt    4      51.000 ±    4.369  us/op
ArraysSort.Byte.testParallelSort     REPEATED   300000  avgt    4     328.756 ±    3.893  us/op
ArraysSort.Byte.testParallelSort     REPEATED  2000000  avgt    4    2231.512 ±   22.047  us/op
ArraysSort.Byte.testParallelSort      STAGGER      800  avgt    4       2.365 ±    0.048  us/op
ArraysSort.Byte.testParallelSort      STAGGER     7000  avgt    4      10.098 ±    1.455  us/op
ArraysSort.Byte.testParallelSort      STAGGER    50000  avgt    4      50.514 ±    0.984  us/op
ArraysSort.Byte.testParallelSort      STAGGER   300000  avgt    4     264.423 ±   15.960  us/op
ArraysSort.Byte.testParallelSort      STAGGER  2000000  avgt    4    1723.418 ±   16.737  us/op
ArraysSort.Byte.testParallelSort      SHUFFLE      800  avgt    4       2.225 ±    0.457  us/op
ArraysSort.Byte.testParallelSort      SHUFFLE     7000  avgt    4       9.568 ±    1.139  us/op
ArraysSort.Byte.testParallelSort      SHUFFLE    50000  avgt    4      55.230 ±    4.283  us/op
ArraysSort.Byte.testParallelSort      SHUFFLE   300000  avgt    4     260.371 ±    0.781  us/op
ArraysSort.Byte.testParallelSort      SHUFFLE  2000000  avgt    4    1724.491 ±   20.087  us/op
ArraysSort.Byte.testSort               RANDOM      800  avgt    4       2.457 ±    0.359  us/op
ArraysSort.Byte.testSort               RANDOM     7000  avgt    4      10.058 ±    1.817  us/op
ArraysSort.Byte.testSort               RANDOM    50000  avgt    4      56.088 ±    3.483  us/op
ArraysSort.Byte.testSort               RANDOM   300000  avgt    4     276.973 ±    1.668  us/op
ArraysSort.Byte.testSort               RANDOM  2000000  avgt    4    1816.680 ±   20.138  us/op
ArraysSort.Byte.testSort             REPEATED      800  avgt    4       1.186 ±    0.462  us/op
ArraysSort.Byte.testSort             REPEATED     7000  avgt    4       7.856 ±    2.351  us/op
ArraysSort.Byte.testSort             REPEATED    50000  avgt    4      51.115 ±    2.951  us/op
ArraysSort.Byte.testSort             REPEATED   300000  avgt    4     328.231 ±    3.469  us/op
ArraysSort.Byte.testSort             REPEATED  2000000  avgt    4    2228.552 ±   28.870  us/op
ArraysSort.Byte.testSort              STAGGER      800  avgt    4       2.362 ±    0.073  us/op
ArraysSort.Byte.testSort              STAGGER     7000  avgt    4      10.095 ±    1.472  us/op
ArraysSort.Byte.testSort              STAGGER    50000  avgt    4      50.780 ±    1.727  us/op
ArraysSort.Byte.testSort              STAGGER   300000  avgt    4     264.197 ±   13.614  us/op
ArraysSort.Byte.testSort              STAGGER  2000000  avgt    4    1726.856 ±   15.763  us/op
ArraysSort.Byte.testSort              SHUFFLE      800  avgt    4       2.256 ±    0.396  us/op
ArraysSort.Byte.testSort              SHUFFLE     7000  avgt    4       9.534 ±    1.196  us/op
ArraysSort.Byte.testSort              SHUFFLE    50000  avgt    4      55.054 ±    3.647  us/op
ArraysSort.Byte.testSort              SHUFFLE   300000  avgt    4     260.798 ±    0.751  us/op
ArraysSort.Byte.testSort              SHUFFLE  2000000  avgt    4    1719.510 ±   12.620  us/op
ArraysSort.Char.testParallelSort       RANDOM      800  avgt    4      15.140 ±    0.149  us/op
ArraysSort.Char.testParallelSort       RANDOM     7000  avgt    4     180.144 ±    1.178  us/op
ArraysSort.Char.testParallelSort       RANDOM    50000  avgt    4     826.003 ±   86.079  us/op
ArraysSort.Char.testParallelSort       RANDOM   300000  avgt    4    1962.231 ±  428.914  us/op
ArraysSort.Char.testParallelSort       RANDOM  2000000  avgt    4    5200.838 ±  498.438  us/op
ArraysSort.Char.testParallelSort     REPEATED      800  avgt    4       2.697 ±    0.072  us/op
ArraysSort.Char.testParallelSort     REPEATED     7000  avgt    4      61.701 ±   44.257  us/op
ArraysSort.Char.testParallelSort     REPEATED    50000  avgt    4     101.197 ±    2.537  us/op
ArraysSort.Char.testParallelSort     REPEATED   300000  avgt    4     659.244 ±  306.806  us/op
ArraysSort.Char.testParallelSort     REPEATED  2000000  avgt    4    2616.960 ±  238.079  us/op
ArraysSort.Char.testParallelSort      STAGGER      800  avgt    4      12.325 ±    0.195  us/op
ArraysSort.Char.testParallelSort      STAGGER     7000  avgt    4      70.768 ±   18.436  us/op
ArraysSort.Char.testParallelSort      STAGGER    50000  avgt    4     207.124 ±    0.800  us/op
ArraysSort.Char.testParallelSort      STAGGER   300000  avgt    4     715.812 ±   19.128  us/op
ArraysSort.Char.testParallelSort      STAGGER  2000000  avgt    4    2694.706 ±   31.516  us/op
ArraysSort.Char.testParallelSort      SHUFFLE      800  avgt    4       8.657 ±    0.193  us/op
ArraysSort.Char.testParallelSort      SHUFFLE     7000  avgt    4      77.437 ±   11.716  us/op
ArraysSort.Char.testParallelSort      SHUFFLE    50000  avgt    4     223.638 ±   58.168  us/op
ArraysSort.Char.testParallelSort      SHUFFLE   300000  avgt    4     741.042 ±  304.882  us/op
ArraysSort.Char.testParallelSort      SHUFFLE  2000000  avgt    4    2516.247 ±  212.126  us/op
ArraysSort.Char.testSort               RANDOM      800  avgt    4      15.051 ±    0.297  us/op
ArraysSort.Char.testSort               RANDOM     7000  avgt    4     180.478 ±    0.711  us/op
ArraysSort.Char.testSort               RANDOM    50000  avgt    4     821.885 ±   53.193  us/op
ArraysSort.Char.testSort               RANDOM   300000  avgt    4    1979.694 ±  385.911  us/op
ArraysSort.Char.testSort               RANDOM  2000000  avgt    4    5236.472 ±  434.110  us/op
ArraysSort.Char.testSort             REPEATED      800  avgt    4       2.660 ±    0.043  us/op
ArraysSort.Char.testSort             REPEATED     7000  avgt    4      61.100 ±   49.461  us/op
ArraysSort.Char.testSort             REPEATED    50000  avgt    4     101.332 ±    1.618  us/op
ArraysSort.Char.testSort             REPEATED   300000  avgt    4     664.654 ±  323.810  us/op
ArraysSort.Char.testSort             REPEATED  2000000  avgt    4    2626.735 ±  284.362  us/op
ArraysSort.Char.testSort              STAGGER      800  avgt    4      12.366 ±    0.198  us/op
ArraysSort.Char.testSort              STAGGER     7000  avgt    4      70.537 ±   16.832  us/op
ArraysSort.Char.testSort              STAGGER    50000  avgt    4     207.151 ±    0.432  us/op
ArraysSort.Char.testSort              STAGGER   300000  avgt    4     715.093 ±   32.529  us/op
ArraysSort.Char.testSort              STAGGER  2000000  avgt    4    2686.168 ±   25.136  us/op
ArraysSort.Char.testSort              SHUFFLE      800  avgt    4       8.820 ±    0.133  us/op
ArraysSort.Char.testSort              SHUFFLE     7000  avgt    4      76.123 ±    0.892  us/op
ArraysSort.Char.testSort              SHUFFLE    50000  avgt    4     223.756 ±   57.326  us/op
ArraysSort.Char.testSort              SHUFFLE   300000  avgt    4     739.868 ±  307.666  us/op
ArraysSort.Char.testSort              SHUFFLE  2000000  avgt    4    2505.713 ±  285.920  us/op
ArraysSort.Double.testParallelSort     RANDOM      800  avgt    4      17.879 ±    0.277  us/op
ArraysSort.Double.testParallelSort     RANDOM     7000  avgt    4     215.091 ±    0.938  us/op
ArraysSort.Double.testParallelSort     RANDOM    50000  avgt    4    1823.750 ±   22.500  us/op
ArraysSort.Double.testParallelSort     RANDOM   300000  avgt    4   10459.110 ±  100.213  us/op
ArraysSort.Double.testParallelSort     RANDOM  2000000  avgt    4   80477.768 ± 1775.477  us/op
ArraysSort.Double.testParallelSort   REPEATED      800  avgt    4       4.637 ±    0.295  us/op
ArraysSort.Double.testParallelSort   REPEATED     7000  avgt    4     143.333 ±    1.598  us/op
ArraysSort.Double.testParallelSort   REPEATED    50000  avgt    4    1080.862 ±   67.997  us/op
ArraysSort.Double.testParallelSort   REPEATED   300000  avgt    4    6664.948 ±   21.004  us/op
ArraysSort.Double.testParallelSort   REPEATED  2000000  avgt    4   44301.670 ±  474.473  us/op
ArraysSort.Double.testParallelSort    STAGGER      800  avgt    4       5.889 ±    0.029  us/op
ArraysSort.Double.testParallelSort    STAGGER     7000  avgt    4      50.609 ±    1.758  us/op
ArraysSort.Double.testParallelSort    STAGGER    50000  avgt    4     263.173 ±    2.828  us/op
ArraysSort.Double.testParallelSort    STAGGER   300000  avgt    4    1378.894 ±   13.243  us/op
ArraysSort.Double.testParallelSort    STAGGER  2000000  avgt    4    9967.817 ±  271.067  us/op
ArraysSort.Double.testParallelSort    SHUFFLE      800  avgt    4      12.746 ±    0.349  us/op
ArraysSort.Double.testParallelSort    SHUFFLE     7000  avgt    4      95.737 ±    4.511  us/op
ArraysSort.Double.testParallelSort    SHUFFLE    50000  avgt    4     874.167 ±   27.653  us/op
ArraysSort.Double.testParallelSort    SHUFFLE   300000  avgt    4    7434.315 ±  129.010  us/op
ArraysSort.Double.testParallelSort    SHUFFLE  2000000  avgt    4   35257.245 ±  629.365  us/op
ArraysSort.Double.testSort             RANDOM      800  avgt    4      18.008 ±    0.303  us/op
ArraysSort.Double.testSort             RANDOM     7000  avgt    4     285.003 ±    2.498  us/op
ArraysSort.Double.testSort             RANDOM    50000  avgt    4    2473.652 ±   24.090  us/op
ArraysSort.Double.testSort             RANDOM   300000  avgt    4   14958.990 ±  166.534  us/op
ArraysSort.Double.testSort             RANDOM  2000000  avgt    4  111024.605 ± 1239.955  us/op
ArraysSort.Double.testSort           REPEATED      800  avgt    4       4.611 ±    0.310  us/op
ArraysSort.Double.testSort           REPEATED     7000  avgt    4     117.515 ±    2.073  us/op
ArraysSort.Double.testSort           REPEATED    50000  avgt    4    1043.936 ±    8.675  us/op
ArraysSort.Double.testSort           REPEATED   300000  avgt    4    6354.804 ±   71.398  us/op
ArraysSort.Double.testSort           REPEATED  2000000  avgt    4   42158.930 ±  316.799  us/op
ArraysSort.Double.testSort            STAGGER      800  avgt    4       5.912 ±    0.020  us/op
ArraysSort.Double.testSort            STAGGER     7000  avgt    4      52.716 ±    0.417  us/op
ArraysSort.Double.testSort            STAGGER    50000  avgt    4     360.995 ±    1.325  us/op
ArraysSort.Double.testSort            STAGGER   300000  avgt    4    2313.531 ±    6.802  us/op
ArraysSort.Double.testSort            STAGGER  2000000  avgt    4   15989.578 ±  145.671  us/op
ArraysSort.Double.testSort            SHUFFLE      800  avgt    4      12.772 ±    1.317  us/op
ArraysSort.Double.testSort            SHUFFLE     7000  avgt    4     132.319 ±    0.796  us/op
ArraysSort.Double.testSort            SHUFFLE    50000  avgt    4    1491.087 ±   22.405  us/op
ArraysSort.Double.testSort            SHUFFLE   300000  avgt    4    8800.617 ±  180.829  us/op
ArraysSort.Double.testSort            SHUFFLE  2000000  avgt    4   94531.333 ±  960.812  us/op
ArraysSort.Float.testParallelSort      RANDOM      800  avgt    4      17.711 ±    0.519  us/op
ArraysSort.Float.testParallelSort      RANDOM     7000  avgt    4     151.685 ±    1.315  us/op
ArraysSort.Float.testParallelSort      RANDOM    50000  avgt    4    1191.372 ±   24.445  us/op
ArraysSort.Float.testParallelSort      RANDOM   300000  avgt    4    6929.825 ±   38.064  us/op
ArraysSort.Float.testParallelSort      RANDOM  2000000  avgt    4   49257.324 ±  384.614  us/op
ArraysSort.Float.testParallelSort    REPEATED      800  avgt    4       4.618 ±    0.163  us/op
ArraysSort.Float.testParallelSort    REPEATED     7000  avgt    4     148.384 ±    1.364  us/op
ArraysSort.Float.testParallelSort    REPEATED    50000  avgt    4    1081.239 ±   86.620  us/op
ArraysSort.Float.testParallelSort    REPEATED   300000  avgt    4    6592.403 ±   52.723  us/op
ArraysSort.Float.testParallelSort    REPEATED  2000000  avgt    4   43484.403 ±  189.576  us/op
ArraysSort.Float.testParallelSort     STAGGER      800  avgt    4       5.697 ±    0.066  us/op
ArraysSort.Float.testParallelSort     STAGGER     7000  avgt    4      45.779 ±    2.031  us/op
ArraysSort.Float.testParallelSort     STAGGER    50000  avgt    4     239.949 ±    8.395  us/op
ArraysSort.Float.testParallelSort     STAGGER   300000  avgt    4    1199.008 ±   15.559  us/op
ArraysSort.Float.testParallelSort     STAGGER  2000000  avgt    4    7747.569 ±  158.118  us/op
ArraysSort.Float.testParallelSort     SHUFFLE      800  avgt    4      12.650 ±    0.310  us/op
ArraysSort.Float.testParallelSort     SHUFFLE     7000  avgt    4      82.364 ±    4.091  us/op
ArraysSort.Float.testParallelSort     SHUFFLE    50000  avgt    4     756.914 ±   19.232  us/op
ArraysSort.Float.testParallelSort     SHUFFLE   300000  avgt    4    5705.242 ±  100.642  us/op
ArraysSort.Float.testParallelSort     SHUFFLE  2000000  avgt    4   26891.507 ±  461.530  us/op
ArraysSort.Float.testSort              RANDOM      800  avgt    4      17.732 ±    0.172  us/op
ArraysSort.Float.testSort              RANDOM     7000  avgt    4     113.426 ±    1.194  us/op
ArraysSort.Float.testSort              RANDOM    50000  avgt    4    1204.580 ±    4.338  us/op
ArraysSort.Float.testSort              RANDOM   300000  avgt    4    7632.101 ±   62.514  us/op
ArraysSort.Float.testSort              RANDOM  2000000  avgt    4   54339.603 ±  203.675  us/op
ArraysSort.Float.testSort            REPEATED      800  avgt    4       4.597 ±    0.291  us/op
ArraysSort.Float.testSort            REPEATED     7000  avgt    4     127.623 ±    1.915  us/op
ArraysSort.Float.testSort            REPEATED    50000  avgt    4    1035.132 ±   74.341  us/op
ArraysSort.Float.testSort            REPEATED   300000  avgt    4    6401.262 ±   14.774  us/op
ArraysSort.Float.testSort            REPEATED  2000000  avgt    4   41611.854 ±  264.977  us/op
ArraysSort.Float.testSort             STAGGER      800  avgt    4       5.547 ±    0.204  us/op
ArraysSort.Float.testSort             STAGGER     7000  avgt    4      50.295 ±    0.612  us/op
ArraysSort.Float.testSort             STAGGER    50000  avgt    4     338.530 ±    1.793  us/op
ArraysSort.Float.testSort             STAGGER   300000  avgt    4    2105.846 ±    0.781  us/op
ArraysSort.Float.testSort             STAGGER  2000000  avgt    4   13790.034 ±  113.812  us/op
ArraysSort.Float.testSort             SHUFFLE      800  avgt    4      12.410 ±    0.112  us/op
ArraysSort.Float.testSort             SHUFFLE     7000  avgt    4     112.215 ±    1.056  us/op
ArraysSort.Float.testSort             SHUFFLE    50000  avgt    4    1136.589 ±   26.167  us/op
ArraysSort.Float.testSort             SHUFFLE   300000  avgt    4    6596.166 ±  372.623  us/op
ArraysSort.Float.testSort             SHUFFLE  2000000  avgt    4   56309.613 ± 1134.019  us/op
ArraysSort.Int.testParallelSort        RANDOM      800  avgt    4      15.539 ±    0.645  us/op
ArraysSort.Int.testParallelSort        RANDOM     7000  avgt    4     136.945 ±    1.615  us/op
ArraysSort.Int.testParallelSort        RANDOM    50000  avgt    4    1180.244 ±   20.813  us/op
ArraysSort.Int.testParallelSort        RANDOM   300000  avgt    4    6631.290 ±   48.117  us/op
ArraysSort.Int.testParallelSort        RANDOM  2000000  avgt    4   49104.092 ±  314.833  us/op
ArraysSort.Int.testParallelSort      REPEATED      800  avgt    4       3.365 ±    0.226  us/op
ArraysSort.Int.testParallelSort      REPEATED     7000  avgt    4      82.577 ±    1.481  us/op
ArraysSort.Int.testParallelSort      REPEATED    50000  avgt    4     702.298 ±    7.629  us/op
ArraysSort.Int.testParallelSort      REPEATED   300000  avgt    4    4263.907 ±   44.534  us/op
ArraysSort.Int.testParallelSort      REPEATED  2000000  avgt    4   29188.630 ±  262.588  us/op
ArraysSort.Int.testParallelSort       STAGGER      800  avgt    4       4.575 ±    0.054  us/op
ArraysSort.Int.testParallelSort       STAGGER     7000  avgt    4      34.936 ±    0.336  us/op
ArraysSort.Int.testParallelSort       STAGGER    50000  avgt    4     165.896 ±    1.148  us/op
ArraysSort.Int.testParallelSort       STAGGER   300000  avgt    4     685.885 ±   25.122  us/op
ArraysSort.Int.testParallelSort       STAGGER  2000000  avgt    4    4626.359 ±  116.152  us/op
ArraysSort.Int.testParallelSort       SHUFFLE      800  avgt    4       9.891 ±    0.139  us/op
ArraysSort.Int.testParallelSort       SHUFFLE     7000  avgt    4      66.389 ±   12.841  us/op
ArraysSort.Int.testParallelSort       SHUFFLE    50000  avgt    4     659.900 ±   25.800  us/op
ArraysSort.Int.testParallelSort       SHUFFLE   300000  avgt    4    6104.708 ±   74.856  us/op
ArraysSort.Int.testParallelSort       SHUFFLE  2000000  avgt    4   26225.665 ±  160.690  us/op
ArraysSort.Int.testSort                RANDOM      800  avgt    4      15.999 ±    0.398  us/op
ArraysSort.Int.testSort                RANDOM     7000  avgt    4     103.210 ±    1.284  us/op
ArraysSort.Int.testSort                RANDOM    50000  avgt    4    1440.373 ±    6.369  us/op
ArraysSort.Int.testSort                RANDOM   300000  avgt    4    9444.075 ±  161.045  us/op
ArraysSort.Int.testSort                RANDOM  2000000  avgt    4   68476.426 ±  257.092  us/op
ArraysSort.Int.testSort              REPEATED      800  avgt    4       3.328 ±    0.269  us/op
ArraysSort.Int.testSort              REPEATED     7000  avgt    4      70.166 ±    7.899  us/op
ArraysSort.Int.testSort              REPEATED    50000  avgt    4     667.206 ±    3.336  us/op
ArraysSort.Int.testSort              REPEATED   300000  avgt    4    4285.055 ±   29.464  us/op
ArraysSort.Int.testSort              REPEATED  2000000  avgt    4   28217.668 ±  333.867  us/op
ArraysSort.Int.testSort               STAGGER      800  avgt    4       4.549 ±    0.019  us/op
ArraysSort.Int.testSort               STAGGER     7000  avgt    4      33.930 ±    0.352  us/op
ArraysSort.Int.testSort               STAGGER    50000  avgt    4     247.210 ±    1.330  us/op
ArraysSort.Int.testSort               STAGGER   300000  avgt    4    1574.766 ±    6.887  us/op
ArraysSort.Int.testSort               STAGGER  2000000  avgt    4   10022.352 ±   46.383  us/op
ArraysSort.Int.testSort               SHUFFLE      800  avgt    4       9.875 ±    0.178  us/op
ArraysSort.Int.testSort               SHUFFLE     7000  avgt    4      98.859 ±   16.905  us/op
ArraysSort.Int.testSort               SHUFFLE    50000  avgt    4    1319.701 ±   68.997  us/op
ArraysSort.Int.testSort               SHUFFLE   300000  avgt    4    7462.781 ±  337.056  us/op
ArraysSort.Int.testSort               SHUFFLE  2000000  avgt    4   80111.518 ± 2267.051  us/op
ArraysSort.Long.testParallelSort       RANDOM      800  avgt    4      16.305 ±    0.380  us/op
ArraysSort.Long.testParallelSort       RANDOM     7000  avgt    4     208.675 ±    2.795  us/op
ArraysSort.Long.testParallelSort       RANDOM    50000  avgt    4    1708.907 ±   17.068  us/op
ArraysSort.Long.testParallelSort       RANDOM   300000  avgt    4    9299.961 ±   32.815  us/op
ArraysSort.Long.testParallelSort       RANDOM  2000000  avgt    4   75164.859 ±  872.528  us/op
ArraysSort.Long.testParallelSort     REPEATED      800  avgt    4       3.241 ±    0.198  us/op
ArraysSort.Long.testParallelSort     REPEATED     7000  avgt    4      94.254 ±    0.841  us/op
ArraysSort.Long.testParallelSort     REPEATED    50000  avgt    4     727.982 ±    7.504  us/op
ArraysSort.Long.testParallelSort     REPEATED   300000  avgt    4    4524.503 ±   56.733  us/op
ArraysSort.Long.testParallelSort     REPEATED  2000000  avgt    4   30877.963 ±  178.527  us/op
ArraysSort.Long.testParallelSort      STAGGER      800  avgt    4       4.749 ±    0.088  us/op
ArraysSort.Long.testParallelSort      STAGGER     7000  avgt    4      41.200 ±    0.389  us/op
ArraysSort.Long.testParallelSort      STAGGER    50000  avgt    4     189.148 ±    4.375  us/op
ArraysSort.Long.testParallelSort      STAGGER   300000  avgt    4     969.227 ±   16.336  us/op
ArraysSort.Long.testParallelSort      STAGGER  2000000  avgt    4    6763.169 ±  106.198  us/op
ArraysSort.Long.testParallelSort      SHUFFLE      800  avgt    4      10.130 ±    0.389  us/op
ArraysSort.Long.testParallelSort      SHUFFLE     7000  avgt    4      80.998 ±    1.571  us/op
ArraysSort.Long.testParallelSort      SHUFFLE    50000  avgt    4     954.711 ±    7.052  us/op
ArraysSort.Long.testParallelSort      SHUFFLE   300000  avgt    4    7470.427 ±  176.556  us/op
ArraysSort.Long.testParallelSort      SHUFFLE  2000000  avgt    4   30429.699 ±  795.453  us/op
ArraysSort.Long.testSort               RANDOM      800  avgt    4      16.015 ±    0.508  us/op
ArraysSort.Long.testSort               RANDOM     7000  avgt    4     274.521 ±    0.703  us/op
ArraysSort.Long.testSort               RANDOM    50000  avgt    4    2419.752 ±   19.473  us/op
ArraysSort.Long.testSort               RANDOM   300000  avgt    4   14578.842 ±  151.198  us/op
ArraysSort.Long.testSort               RANDOM  2000000  avgt    4  107589.267 ±  717.433  us/op
ArraysSort.Long.testSort             REPEATED      800  avgt    4       3.398 ±    0.268  us/op
ArraysSort.Long.testSort             REPEATED     7000  avgt    4      78.610 ±    2.807  us/op
ArraysSort.Long.testSort             REPEATED    50000  avgt    4     674.340 ±    5.429  us/op
ArraysSort.Long.testSort             REPEATED   300000  avgt    4    4373.096 ±   47.281  us/op
ArraysSort.Long.testSort             REPEATED  2000000  avgt    4   29389.980 ±  362.433  us/op
ArraysSort.Long.testSort              STAGGER      800  avgt    4       4.726 ±    0.039  us/op
ArraysSort.Long.testSort              STAGGER     7000  avgt    4      42.282 ±    0.306  us/op
ArraysSort.Long.testSort              STAGGER    50000  avgt    4     260.842 ±    1.465  us/op
ArraysSort.Long.testSort              STAGGER   300000  avgt    4    1715.570 ±   10.409  us/op
ArraysSort.Long.testSort              STAGGER  2000000  avgt    4   12138.112 ±  141.206  us/op
ArraysSort.Long.testSort              SHUFFLE      800  avgt    4      10.408 ±    0.310  us/op
ArraysSort.Long.testSort              SHUFFLE     7000  avgt    4     110.692 ±    2.406  us/op
ArraysSort.Long.testSort              SHUFFLE    50000  avgt    4    1789.430 ±    5.586  us/op
ArraysSort.Long.testSort              SHUFFLE   300000  avgt    4    8300.873 ±  153.980  us/op
ArraysSort.Long.testSort              SHUFFLE  2000000  avgt    4   91467.733 ± 2015.582  us/op
ArraysSort.Short.testParallelSort      RANDOM      800  avgt    4      15.455 ±    0.278  us/op
ArraysSort.Short.testParallelSort      RANDOM     7000  avgt    4     184.698 ±    0.582  us/op
ArraysSort.Short.testParallelSort      RANDOM    50000  avgt    4     850.353 ±   22.897  us/op
ArraysSort.Short.testParallelSort      RANDOM   300000  avgt    4    1853.214 ±  332.327  us/op
ArraysSort.Short.testParallelSort      RANDOM  2000000  avgt    4    5310.637 ±  392.147  us/op
ArraysSort.Short.testParallelSort    REPEATED      800  avgt    4       2.666 ±    0.101  us/op
ArraysSort.Short.testParallelSort    REPEATED     7000  avgt    4      57.587 ±    0.588  us/op
ArraysSort.Short.testParallelSort    REPEATED    50000  avgt    4     106.827 ±    2.121  us/op
ArraysSort.Short.testParallelSort    REPEATED   300000  avgt    4     479.270 ±  311.596  us/op
ArraysSort.Short.testParallelSort    REPEATED  2000000  avgt    4    2605.993 ±  241.233  us/op
ArraysSort.Short.testParallelSort     STAGGER      800  avgt    4      12.333 ±    0.374  us/op
ArraysSort.Short.testParallelSort     STAGGER     7000  avgt    4      58.521 ±   14.604  us/op
ArraysSort.Short.testParallelSort     STAGGER    50000  avgt    4     180.597 ±    2.225  us/op
ArraysSort.Short.testParallelSort     STAGGER   300000  avgt    4     679.866 ±   61.994  us/op
ArraysSort.Short.testParallelSort     STAGGER  2000000  avgt    4    2691.065 ±   12.604  us/op
ArraysSort.Short.testParallelSort     SHUFFLE      800  avgt    4       8.722 ±    0.227  us/op
ArraysSort.Short.testParallelSort     SHUFFLE     7000  avgt    4      59.693 ±    0.812  us/op
ArraysSort.Short.testParallelSort     SHUFFLE    50000  avgt    4     227.888 ±    2.519  us/op
ArraysSort.Short.testParallelSort     SHUFFLE   300000  avgt    4     712.169 ±  303.310  us/op
ArraysSort.Short.testParallelSort     SHUFFLE  2000000  avgt    4    2496.604 ±  231.256  us/op
ArraysSort.Short.testSort              RANDOM      800  avgt    4      17.303 ±   10.825  us/op
ArraysSort.Short.testSort              RANDOM     7000  avgt    4     187.910 ±    0.954  us/op
ArraysSort.Short.testSort              RANDOM    50000  avgt    4     843.923 ±    8.027  us/op
ArraysSort.Short.testSort              RANDOM   300000  avgt    4    1872.960 ±  341.254  us/op
ArraysSort.Short.testSort              RANDOM  2000000  avgt    4    5355.366 ±  379.164  us/op
ArraysSort.Short.testSort            REPEATED      800  avgt    4       2.669 ±    0.091  us/op
ArraysSort.Short.testSort            REPEATED     7000  avgt    4      57.558 ±    0.745  us/op
ArraysSort.Short.testSort            REPEATED    50000  avgt    4     107.115 ±    1.637  us/op
ArraysSort.Short.testSort            REPEATED   300000  avgt    4     494.149 ±  347.560  us/op
ArraysSort.Short.testSort            REPEATED  2000000  avgt    4    2607.718 ±  331.044  us/op
ArraysSort.Short.testSort             STAGGER      800  avgt    4      12.354 ±    0.115  us/op
ArraysSort.Short.testSort             STAGGER     7000  avgt    4      59.980 ±   21.831  us/op
ArraysSort.Short.testSort             STAGGER    50000  avgt    4     180.541 ±    1.590  us/op
ArraysSort.Short.testSort             STAGGER   300000  avgt    4     678.777 ±   59.536  us/op
ArraysSort.Short.testSort             STAGGER  2000000  avgt    4    2685.150 ±    5.078  us/op
ArraysSort.Short.testSort             SHUFFLE      800  avgt    4       8.736 ±    0.197  us/op
ArraysSort.Short.testSort             SHUFFLE     7000  avgt    4      59.739 ±    1.225  us/op
ArraysSort.Short.testSort             SHUFFLE    50000  avgt    4     228.187 ±    4.442  us/op
ArraysSort.Short.testSort             SHUFFLE   300000  avgt    4     711.996 ±  307.716  us/op
ArraysSort.Short.testSort             SHUFFLE  2000000  avgt    4    2502.203 ±  166.865  us/op

Benchmark result is saved to /home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/test-results/micro_java_util_ArraysSort/jmh-result.json
