# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 0.00% complete, ETA 01:19:20
# Fork: 1 of 1
# Warmup Iteration   1: 3.349 us/op
Iteration   1: 3.147 us/op
Iteration   2: 3.455 us/op
Iteration   3: 3.456 us/op
Iteration   4: 3.455 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  3.378 ±(99.9%) 0.998 us/op [Average]
  (min, avg, max) = (3.147, 3.378, 3.456), stdev = 0.154
  CI (99.9%): [2.380, 4.376] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 0.36% complete, ETA 01:20:58
# Fork: 1 of 1
# Warmup Iteration   1: 9.950 us/op
Iteration   1: 9.306 us/op
Iteration   2: 9.262 us/op
Iteration   3: 8.906 us/op
Iteration   4: 13.199 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  10.168 ±(99.9%) 13.107 us/op [Average]
  (min, avg, max) = (8.906, 10.168, 13.199), stdev = 2.028
  CI (99.9%): [≈ 0, 23.275] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 0.71% complete, ETA 01:20:32
# Fork: 1 of 1
# Warmup Iteration   1: 51.887 us/op
Iteration   1: 62.288 us/op
Iteration   2: 63.103 us/op
Iteration   3: 63.093 us/op
Iteration   4: 63.478 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  62.990 ±(99.9%) 3.240 us/op [Average]
  (min, avg, max) = (62.288, 62.990, 63.478), stdev = 0.501
  CI (99.9%): [59.750, 66.231] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 1.07% complete, ETA 01:20:09
# Fork: 1 of 1
# Warmup Iteration   1: 338.060 us/op
Iteration   1: 320.339 us/op
Iteration   2: 319.690 us/op
Iteration   3: 319.707 us/op
Iteration   4: 319.622 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  319.839 ±(99.9%) 2.166 us/op [Average]
  (min, avg, max) = (319.622, 319.839, 320.339), stdev = 0.335
  CI (99.9%): [317.674, 322.005] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 1.43% complete, ETA 01:19:50
# Fork: 1 of 1
# Warmup Iteration   1: 2034.108 us/op
Iteration   1: 1846.352 us/op
Iteration   2: 1848.363 us/op
Iteration   3: 1843.895 us/op
Iteration   4: 1839.857 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  1844.617 ±(99.9%) 23.662 us/op [Average]
  (min, avg, max) = (1839.857, 1844.617, 1848.363), stdev = 3.662
  CI (99.9%): [1820.955, 1868.279] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 1.79% complete, ETA 01:19:34
# Fork: 1 of 1
# Warmup Iteration   1: 2.623 us/op
Iteration   1: 2.496 us/op
Iteration   2: 2.543 us/op
Iteration   3: 2.554 us/op
Iteration   4: 2.550 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  2.536 ±(99.9%) 0.174 us/op [Average]
  (min, avg, max) = (2.496, 2.536, 2.554), stdev = 0.027
  CI (99.9%): [2.362, 2.710] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 2.14% complete, ETA 01:19:16
# Fork: 1 of 1
# Warmup Iteration   1: 8.937 us/op
Iteration   1: 8.273 us/op
Iteration   2: 9.066 us/op
Iteration   3: 8.816 us/op
Iteration   4: 10.247 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  9.101 ±(99.9%) 5.383 us/op [Average]
  (min, avg, max) = (8.273, 9.101, 10.247), stdev = 0.833
  CI (99.9%): [3.718, 14.484] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 2.50% complete, ETA 01:18:57
# Fork: 1 of 1
# Warmup Iteration   1: 57.905 us/op
Iteration   1: 55.419 us/op
Iteration   2: 55.269 us/op
Iteration   3: 55.110 us/op
Iteration   4: 56.133 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  55.483 ±(99.9%) 2.918 us/op [Average]
  (min, avg, max) = (55.110, 55.483, 56.133), stdev = 0.452
  CI (99.9%): [52.564, 58.401] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 2.86% complete, ETA 01:18:40
# Fork: 1 of 1
# Warmup Iteration   1: 388.470 us/op
Iteration   1: 366.880 us/op
Iteration   2: 366.866 us/op
Iteration   3: 367.004 us/op
Iteration   4: 367.844 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  367.148 ±(99.9%) 3.023 us/op [Average]
  (min, avg, max) = (366.866, 367.148, 367.844), stdev = 0.468
  CI (99.9%): [364.126, 370.171] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 3.21% complete, ETA 01:18:22
# Fork: 1 of 1
# Warmup Iteration   1: 2503.444 us/op
Iteration   1: 2245.492 us/op
Iteration   2: 2262.988 us/op
Iteration   3: 2238.972 us/op
Iteration   4: 2243.353 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  2247.701 ±(99.9%) 68.150 us/op [Average]
  (min, avg, max) = (2238.972, 2247.701, 2262.988), stdev = 10.546
  CI (99.9%): [2179.551, 2315.852] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 3.57% complete, ETA 01:18:08
# Fork: 1 of 1
# Warmup Iteration   1: 3.323 us/op
Iteration   1: 3.114 us/op
Iteration   2: 2.947 us/op
Iteration   3: 2.952 us/op
Iteration   4: 2.953 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  2.991 ±(99.9%) 0.527 us/op [Average]
  (min, avg, max) = (2.947, 2.991, 3.114), stdev = 0.082
  CI (99.9%): [2.465, 3.518] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 3.93% complete, ETA 01:17:50
# Fork: 1 of 1
# Warmup Iteration   1: 9.394 us/op
Iteration   1: 10.144 us/op
Iteration   2: 9.540 us/op
Iteration   3: 9.550 us/op
Iteration   4: 9.351 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  9.646 ±(99.9%) 2.226 us/op [Average]
  (min, avg, max) = (9.351, 9.646, 10.144), stdev = 0.344
  CI (99.9%): [7.420, 11.872] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 4.29% complete, ETA 01:17:32
# Fork: 1 of 1
# Warmup Iteration   1: 55.538 us/op
Iteration   1: 56.392 us/op
Iteration   2: 56.832 us/op
Iteration   3: 56.690 us/op
Iteration   4: 56.565 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  56.620 ±(99.9%) 1.210 us/op [Average]
  (min, avg, max) = (56.392, 56.620, 56.832), stdev = 0.187
  CI (99.9%): [55.409, 57.830] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 4.64% complete, ETA 01:17:14
# Fork: 1 of 1
# Warmup Iteration   1: 315.973 us/op
Iteration   1: 307.126 us/op
Iteration   2: 283.089 us/op
Iteration   3: 272.054 us/op
Iteration   4: 271.161 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  283.358 ±(99.9%) 108.230 us/op [Average]
  (min, avg, max) = (271.161, 283.358, 307.126), stdev = 16.749
  CI (99.9%): [175.128, 391.587] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 5.00% complete, ETA 01:16:56
# Fork: 1 of 1
# Warmup Iteration   1: 1819.478 us/op
Iteration   1: 1751.604 us/op
Iteration   2: 1752.894 us/op
Iteration   3: 1756.004 us/op
Iteration   4: 1757.999 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  1754.625 ±(99.9%) 18.806 us/op [Average]
  (min, avg, max) = (1751.604, 1754.625, 1757.999), stdev = 2.910
  CI (99.9%): [1735.819, 1773.432] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 5.36% complete, ETA 01:16:39
# Fork: 1 of 1
# Warmup Iteration   1: 3.101 us/op
Iteration   1: 2.978 us/op
Iteration   2: 3.105 us/op
Iteration   3: 3.111 us/op
Iteration   4: 3.110 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  3.076 ±(99.9%) 0.422 us/op [Average]
  (min, avg, max) = (2.978, 3.076, 3.111), stdev = 0.065
  CI (99.9%): [2.653, 3.498] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 5.71% complete, ETA 01:16:21
# Fork: 1 of 1
# Warmup Iteration   1: 9.277 us/op
Iteration   1: 8.662 us/op
Iteration   2: 8.898 us/op
Iteration   3: 8.571 us/op
Iteration   4: 12.437 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  9.642 ±(99.9%) 12.073 us/op [Average]
  (min, avg, max) = (8.571, 9.642, 12.437), stdev = 1.868
  CI (99.9%): [≈ 0, 21.715] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 6.07% complete, ETA 01:16:04
# Fork: 1 of 1
# Warmup Iteration   1: 51.525 us/op
Iteration   1: 57.424 us/op
Iteration   2: 58.489 us/op
Iteration   3: 58.375 us/op
Iteration   4: 59.505 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  58.448 ±(99.9%) 5.499 us/op [Average]
  (min, avg, max) = (57.424, 58.448, 59.505), stdev = 0.851
  CI (99.9%): [52.949, 63.947] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 6.43% complete, ETA 01:15:46
# Fork: 1 of 1
# Warmup Iteration   1: 324.722 us/op
Iteration   1: 306.476 us/op
Iteration   2: 306.435 us/op
Iteration   3: 306.127 us/op
Iteration   4: 306.422 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  306.365 ±(99.9%) 1.035 us/op [Average]
  (min, avg, max) = (306.127, 306.365, 306.476), stdev = 0.160
  CI (99.9%): [305.331, 307.400] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 6.79% complete, ETA 01:15:29
# Fork: 1 of 1
# Warmup Iteration   1: 1966.552 us/op
Iteration   1: 1763.810 us/op
Iteration   2: 1758.908 us/op
Iteration   3: 1752.037 us/op
Iteration   4: 1754.867 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testParallelSort":
  1757.405 ±(99.9%) 33.064 us/op [Average]
  (min, avg, max) = (1752.037, 1757.405, 1763.810), stdev = 5.117
  CI (99.9%): [1724.341, 1790.470] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 7.14% complete, ETA 01:15:13
# Fork: 1 of 1
# Warmup Iteration   1: 3.348 us/op
Iteration   1: 3.153 us/op
Iteration   2: 3.459 us/op
Iteration   3: 3.462 us/op
Iteration   4: 3.454 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  3.382 ±(99.9%) 0.986 us/op [Average]
  (min, avg, max) = (3.153, 3.382, 3.462), stdev = 0.153
  CI (99.9%): [2.396, 4.368] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 7.50% complete, ETA 01:14:55
# Fork: 1 of 1
# Warmup Iteration   1: 9.830 us/op
Iteration   1: 9.258 us/op
Iteration   2: 9.231 us/op
Iteration   3: 8.890 us/op
Iteration   4: 13.194 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  10.143 ±(99.9%) 13.188 us/op [Average]
  (min, avg, max) = (8.890, 10.143, 13.194), stdev = 2.041
  CI (99.9%): [≈ 0, 23.331] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 7.86% complete, ETA 01:14:38
# Fork: 1 of 1
# Warmup Iteration   1: 52.262 us/op
Iteration   1: 62.190 us/op
Iteration   2: 63.270 us/op
Iteration   3: 63.060 us/op
Iteration   4: 63.386 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  62.977 ±(99.9%) 3.500 us/op [Average]
  (min, avg, max) = (62.190, 62.977, 63.386), stdev = 0.542
  CI (99.9%): [59.477, 66.476] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 8.21% complete, ETA 01:14:20
# Fork: 1 of 1
# Warmup Iteration   1: 339.521 us/op
Iteration   1: 321.125 us/op
Iteration   2: 320.868 us/op
Iteration   3: 321.623 us/op
Iteration   4: 321.245 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  321.215 ±(99.9%) 2.030 us/op [Average]
  (min, avg, max) = (320.868, 321.215, 321.623), stdev = 0.314
  CI (99.9%): [319.185, 323.246] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 8.57% complete, ETA 01:14:02
# Fork: 1 of 1
# Warmup Iteration   1: 2033.578 us/op
Iteration   1: 1841.333 us/op
Iteration   2: 1840.797 us/op
Iteration   3: 1845.675 us/op
Iteration   4: 1844.744 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  1843.137 ±(99.9%) 15.720 us/op [Average]
  (min, avg, max) = (1840.797, 1843.137, 1845.675), stdev = 2.433
  CI (99.9%): [1827.418, 1858.857] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 8.93% complete, ETA 01:13:45
# Fork: 1 of 1
# Warmup Iteration   1: 2.565 us/op
Iteration   1: 2.476 us/op
Iteration   2: 2.551 us/op
Iteration   3: 2.557 us/op
Iteration   4: 2.558 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  2.536 ±(99.9%) 0.257 us/op [Average]
  (min, avg, max) = (2.476, 2.536, 2.558), stdev = 0.040
  CI (99.9%): [2.278, 2.793] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 9.29% complete, ETA 01:13:28
# Fork: 1 of 1
# Warmup Iteration   1: 9.011 us/op
Iteration   1: 8.331 us/op
Iteration   2: 8.996 us/op
Iteration   3: 8.788 us/op
Iteration   4: 10.259 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  9.094 ±(99.9%) 5.332 us/op [Average]
  (min, avg, max) = (8.331, 9.094, 10.259), stdev = 0.825
  CI (99.9%): [3.762, 14.426] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 9.64% complete, ETA 01:13:10
# Fork: 1 of 1
# Warmup Iteration   1: 58.065 us/op
Iteration   1: 55.292 us/op
Iteration   2: 55.345 us/op
Iteration   3: 55.242 us/op
Iteration   4: 55.720 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  55.400 ±(99.9%) 1.405 us/op [Average]
  (min, avg, max) = (55.242, 55.400, 55.720), stdev = 0.217
  CI (99.9%): [53.994, 56.805] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 10.00% complete, ETA 01:12:53
# Fork: 1 of 1
# Warmup Iteration   1: 368.719 us/op
Iteration   1: 347.887 us/op
Iteration   2: 347.365 us/op
Iteration   3: 348.372 us/op
Iteration   4: 347.253 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  347.719 ±(99.9%) 3.331 us/op [Average]
  (min, avg, max) = (347.253, 347.719, 348.372), stdev = 0.515
  CI (99.9%): [344.389, 351.050] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 10.36% complete, ETA 01:12:35
# Fork: 1 of 1
# Warmup Iteration   1: 2509.114 us/op
Iteration   1: 2242.325 us/op
Iteration   2: 2241.985 us/op
Iteration   3: 2239.250 us/op
Iteration   4: 2241.040 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  2241.150 ±(99.9%) 8.907 us/op [Average]
  (min, avg, max) = (2239.250, 2241.150, 2242.325), stdev = 1.378
  CI (99.9%): [2232.243, 2250.057] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 10.71% complete, ETA 01:12:19
# Fork: 1 of 1
# Warmup Iteration   1: 3.325 us/op
Iteration   1: 3.115 us/op
Iteration   2: 2.947 us/op
Iteration   3: 2.946 us/op
Iteration   4: 2.945 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  2.988 ±(99.9%) 0.546 us/op [Average]
  (min, avg, max) = (2.945, 2.988, 3.115), stdev = 0.084
  CI (99.9%): [2.442, 3.534] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 11.07% complete, ETA 01:12:01
# Fork: 1 of 1
# Warmup Iteration   1: 9.488 us/op
Iteration   1: 10.179 us/op
Iteration   2: 9.515 us/op
Iteration   3: 9.515 us/op
Iteration   4: 9.337 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  9.636 ±(99.9%) 2.398 us/op [Average]
  (min, avg, max) = (9.337, 9.636, 10.179), stdev = 0.371
  CI (99.9%): [7.239, 12.034] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 11.43% complete, ETA 01:11:44
# Fork: 1 of 1
# Warmup Iteration   1: 54.674 us/op
Iteration   1: 55.332 us/op
Iteration   2: 55.527 us/op
Iteration   3: 55.131 us/op
Iteration   4: 55.242 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  55.308 ±(99.9%) 1.082 us/op [Average]
  (min, avg, max) = (55.131, 55.308, 55.527), stdev = 0.167
  CI (99.9%): [54.226, 56.390] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 11.79% complete, ETA 01:11:26
# Fork: 1 of 1
# Warmup Iteration   1: 315.143 us/op
Iteration   1: 306.061 us/op
Iteration   2: 283.046 us/op
Iteration   3: 271.546 us/op
Iteration   4: 271.205 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  282.965 ±(99.9%) 105.665 us/op [Average]
  (min, avg, max) = (271.205, 282.965, 306.061), stdev = 16.352
  CI (99.9%): [177.300, 388.629] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 12.14% complete, ETA 01:11:09
# Fork: 1 of 1
# Warmup Iteration   1: 1814.224 us/op
Iteration   1: 1757.074 us/op
Iteration   2: 1759.162 us/op
Iteration   3: 1756.577 us/op
Iteration   4: 1750.838 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  1755.913 ±(99.9%) 23.029 us/op [Average]
  (min, avg, max) = (1750.838, 1755.913, 1759.162), stdev = 3.564
  CI (99.9%): [1732.883, 1778.942] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 12.50% complete, ETA 01:10:52
# Fork: 1 of 1
# Warmup Iteration   1: 3.048 us/op
Iteration   1: 3.049 us/op
Iteration   2: 3.119 us/op
Iteration   3: 3.122 us/op
Iteration   4: 3.117 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  3.102 ±(99.9%) 0.229 us/op [Average]
  (min, avg, max) = (3.049, 3.102, 3.122), stdev = 0.035
  CI (99.9%): [2.873, 3.331] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 12.86% complete, ETA 01:10:34
# Fork: 1 of 1
# Warmup Iteration   1: 9.267 us/op
Iteration   1: 8.628 us/op
Iteration   2: 8.897 us/op
Iteration   3: 8.528 us/op
Iteration   4: 11.931 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  9.496 ±(99.9%) 10.539 us/op [Average]
  (min, avg, max) = (8.528, 9.496, 11.931), stdev = 1.631
  CI (99.9%): [≈ 0, 20.036] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 13.21% complete, ETA 01:10:17
# Fork: 1 of 1
# Warmup Iteration   1: 51.828 us/op
Iteration   1: 57.343 us/op
Iteration   2: 58.707 us/op
Iteration   3: 58.395 us/op
Iteration   4: 59.317 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  58.440 ±(99.9%) 5.336 us/op [Average]
  (min, avg, max) = (57.343, 58.440, 59.317), stdev = 0.826
  CI (99.9%): [53.105, 63.776] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 13.57% complete, ETA 01:09:59
# Fork: 1 of 1
# Warmup Iteration   1: 325.874 us/op
Iteration   1: 306.899 us/op
Iteration   2: 307.958 us/op
Iteration   3: 306.436 us/op
Iteration   4: 306.769 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  307.015 ±(99.9%) 4.253 us/op [Average]
  (min, avg, max) = (306.436, 307.015, 307.958), stdev = 0.658
  CI (99.9%): [302.763, 311.268] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Byte.testSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 13.93% complete, ETA 01:09:42
# Fork: 1 of 1
# Warmup Iteration   1: 1967.694 us/op
Iteration   1: 1759.295 us/op
Iteration   2: 1755.945 us/op
Iteration   3: 1754.152 us/op
Iteration   4: 1756.536 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Byte.testSort":
  1756.482 ±(99.9%) 13.774 us/op [Average]
  (min, avg, max) = (1754.152, 1756.482, 1759.295), stdev = 2.132
  CI (99.9%): [1742.708, 1770.256] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 14.29% complete, ETA 01:09:25
# Fork: 1 of 1
# Warmup Iteration   1: 15.072 us/op
Iteration   1: 14.770 us/op
Iteration   2: 14.748 us/op
Iteration   3: 14.662 us/op
Iteration   4: 14.575 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  14.689 ±(99.9%) 0.576 us/op [Average]
  (min, avg, max) = (14.575, 14.689, 14.770), stdev = 0.089
  CI (99.9%): [14.113, 15.265] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 14.64% complete, ETA 01:09:08
# Fork: 1 of 1
# Warmup Iteration   1: 187.749 us/op
Iteration   1: 180.174 us/op
Iteration   2: 180.069 us/op
Iteration   3: 179.790 us/op
Iteration   4: 179.764 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  179.950 ±(99.9%) 1.316 us/op [Average]
  (min, avg, max) = (179.764, 179.950, 180.174), stdev = 0.204
  CI (99.9%): [178.633, 181.266] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 15.00% complete, ETA 01:08:50
# Fork: 1 of 1
# Warmup Iteration   1: 886.957 us/op
Iteration   1: 837.322 us/op
Iteration   2: 826.958 us/op
Iteration   3: 814.728 us/op
Iteration   4: 816.036 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  823.761 ±(99.9%) 68.325 us/op [Average]
  (min, avg, max) = (814.728, 823.761, 837.322), stdev = 10.573
  CI (99.9%): [755.436, 892.086] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 15.36% complete, ETA 01:08:33
# Fork: 1 of 1
# Warmup Iteration   1: 2051.556 us/op
Iteration   1: 2035.422 us/op
Iteration   2: 2025.315 us/op
Iteration   3: 1933.487 us/op
Iteration   4: 1918.809 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  1978.258 ±(99.9%) 391.662 us/op [Average]
  (min, avg, max) = (1918.809, 1978.258, 2035.422), stdev = 60.610
  CI (99.9%): [1586.596, 2369.920] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 15.71% complete, ETA 01:08:15
# Fork: 1 of 1
# Warmup Iteration   1: 5711.892 us/op
Iteration   1: 5418.505 us/op
Iteration   2: 5468.857 us/op
Iteration   3: 5397.305 us/op
Iteration   4: 5381.255 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  5416.480 ±(99.9%) 246.235 us/op [Average]
  (min, avg, max) = (5381.255, 5416.480, 5468.857), stdev = 38.105
  CI (99.9%): [5170.246, 5662.715] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 16.07% complete, ETA 01:07:58
# Fork: 1 of 1
# Warmup Iteration   1: 3.444 us/op
Iteration   1: 3.365 us/op
Iteration   2: 3.347 us/op
Iteration   3: 3.335 us/op
Iteration   4: 3.351 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  3.350 ±(99.9%) 0.080 us/op [Average]
  (min, avg, max) = (3.335, 3.350, 3.365), stdev = 0.012
  CI (99.9%): [3.269, 3.430] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 16.43% complete, ETA 01:07:41
# Fork: 1 of 1
# Warmup Iteration   1: 59.039 us/op
Iteration   1: 50.150 us/op
Iteration   2: 50.136 us/op
Iteration   3: 50.207 us/op
Iteration   4: 49.978 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  50.118 ±(99.9%) 0.634 us/op [Average]
  (min, avg, max) = (49.978, 50.118, 50.207), stdev = 0.098
  CI (99.9%): [49.484, 50.752] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 16.79% complete, ETA 01:07:24
# Fork: 1 of 1
# Warmup Iteration   1: 131.570 us/op
Iteration   1: 102.390 us/op
Iteration   2: 102.255 us/op
Iteration   3: 101.764 us/op
Iteration   4: 103.007 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  102.354 ±(99.9%) 3.307 us/op [Average]
  (min, avg, max) = (101.764, 102.354, 103.007), stdev = 0.512
  CI (99.9%): [99.047, 105.661] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 17.14% complete, ETA 01:07:06
# Fork: 1 of 1
# Warmup Iteration   1: 717.315 us/op
Iteration   1: 725.259 us/op
Iteration   2: 648.148 us/op
Iteration   3: 624.121 us/op
Iteration   4: 627.222 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  656.187 ±(99.9%) 305.445 us/op [Average]
  (min, avg, max) = (624.121, 656.187, 725.259), stdev = 47.268
  CI (99.9%): [350.742, 961.632] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 17.50% complete, ETA 01:06:49
# Fork: 1 of 1
# Warmup Iteration   1: 2906.941 us/op
Iteration   1: 2615.068 us/op
Iteration   2: 2656.608 us/op
Iteration   3: 2586.479 us/op
Iteration   4: 2582.128 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  2610.071 ±(99.9%) 221.602 us/op [Average]
  (min, avg, max) = (2582.128, 2610.071, 2656.608), stdev = 34.293
  CI (99.9%): [2388.468, 2831.673] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 17.86% complete, ETA 01:06:32
# Fork: 1 of 1
# Warmup Iteration   1: 13.345 us/op
Iteration   1: 13.192 us/op
Iteration   2: 13.158 us/op
Iteration   3: 13.124 us/op
Iteration   4: 13.114 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  13.147 ±(99.9%) 0.229 us/op [Average]
  (min, avg, max) = (13.114, 13.147, 13.192), stdev = 0.035
  CI (99.9%): [12.918, 13.376] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 18.21% complete, ETA 01:06:14
# Fork: 1 of 1
# Warmup Iteration   1: 74.940 us/op
Iteration   1: 69.021 us/op
Iteration   2: 69.000 us/op
Iteration   3: 73.145 us/op
Iteration   4: 74.131 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  71.325 ±(99.9%) 17.460 us/op [Average]
  (min, avg, max) = (69.000, 71.325, 74.131), stdev = 2.702
  CI (99.9%): [53.865, 88.784] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 18.57% complete, ETA 01:05:57
# Fork: 1 of 1
# Warmup Iteration   1: 205.146 us/op
Iteration   1: 206.979 us/op
Iteration   2: 207.058 us/op
Iteration   3: 207.168 us/op
Iteration   4: 207.695 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  207.225 ±(99.9%) 2.084 us/op [Average]
  (min, avg, max) = (206.979, 207.225, 207.695), stdev = 0.322
  CI (99.9%): [205.141, 209.309] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 18.93% complete, ETA 01:05:40
# Fork: 1 of 1
# Warmup Iteration   1: 770.044 us/op
Iteration   1: 710.039 us/op
Iteration   2: 708.257 us/op
Iteration   3: 714.651 us/op
Iteration   4: 716.307 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  712.314 ±(99.9%) 24.476 us/op [Average]
  (min, avg, max) = (708.257, 712.314, 716.307), stdev = 3.788
  CI (99.9%): [687.838, 736.790] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 19.29% complete, ETA 01:05:22
# Fork: 1 of 1
# Warmup Iteration   1: 2770.855 us/op
Iteration   1: 2691.986 us/op
Iteration   2: 2688.287 us/op
Iteration   3: 2687.086 us/op
Iteration   4: 2684.987 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  2688.087 ±(99.9%) 18.970 us/op [Average]
  (min, avg, max) = (2684.987, 2688.087, 2691.986), stdev = 2.936
  CI (99.9%): [2669.117, 2707.057] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 19.64% complete, ETA 01:05:05
# Fork: 1 of 1
# Warmup Iteration   1: 9.915 us/op
Iteration   1: 9.659 us/op
Iteration   2: 9.653 us/op
Iteration   3: 9.628 us/op
Iteration   4: 9.646 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  9.647 ±(99.9%) 0.087 us/op [Average]
  (min, avg, max) = (9.628, 9.647, 9.659), stdev = 0.013
  CI (99.9%): [9.560, 9.733] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 20.00% complete, ETA 01:04:47
# Fork: 1 of 1
# Warmup Iteration   1: 79.317 us/op
Iteration   1: 73.928 us/op
Iteration   2: 73.767 us/op
Iteration   3: 74.005 us/op
Iteration   4: 74.398 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  74.025 ±(99.9%) 1.733 us/op [Average]
  (min, avg, max) = (73.767, 74.025, 74.398), stdev = 0.268
  CI (99.9%): [72.291, 75.758] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 20.36% complete, ETA 01:04:30
# Fork: 1 of 1
# Warmup Iteration   1: 288.226 us/op
Iteration   1: 239.303 us/op
Iteration   2: 219.171 us/op
Iteration   3: 219.969 us/op
Iteration   4: 219.039 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  224.370 ±(99.9%) 64.382 us/op [Average]
  (min, avg, max) = (219.039, 224.370, 239.303), stdev = 9.963
  CI (99.9%): [159.988, 288.753] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 20.71% complete, ETA 01:04:12
# Fork: 1 of 1
# Warmup Iteration   1: 790.874 us/op
Iteration   1: 803.918 us/op
Iteration   2: 747.398 us/op
Iteration   3: 702.751 us/op
Iteration   4: 707.037 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  740.276 ±(99.9%) 303.415 us/op [Average]
  (min, avg, max) = (702.751, 740.276, 803.918), stdev = 46.954
  CI (99.9%): [436.861, 1043.691] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 21.07% complete, ETA 01:03:55
# Fork: 1 of 1
# Warmup Iteration   1: 2851.132 us/op
Iteration   1: 2523.368 us/op
Iteration   2: 2562.693 us/op
Iteration   3: 2481.735 us/op
Iteration   4: 2482.749 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testParallelSort":
  2512.636 ±(99.9%) 249.406 us/op [Average]
  (min, avg, max) = (2481.735, 2512.636, 2562.693), stdev = 38.596
  CI (99.9%): [2263.230, 2762.042] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 21.43% complete, ETA 01:03:38
# Fork: 1 of 1
# Warmup Iteration   1: 14.874 us/op
Iteration   1: 14.551 us/op
Iteration   2: 14.646 us/op
Iteration   3: 14.618 us/op
Iteration   4: 14.528 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  14.586 ±(99.9%) 0.357 us/op [Average]
  (min, avg, max) = (14.528, 14.586, 14.646), stdev = 0.055
  CI (99.9%): [14.229, 14.943] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 21.79% complete, ETA 01:03:20
# Fork: 1 of 1
# Warmup Iteration   1: 194.614 us/op
Iteration   1: 180.629 us/op
Iteration   2: 180.387 us/op
Iteration   3: 180.664 us/op
Iteration   4: 180.330 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  180.503 ±(99.9%) 1.089 us/op [Average]
  (min, avg, max) = (180.330, 180.503, 180.664), stdev = 0.168
  CI (99.9%): [179.414, 181.591] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 22.14% complete, ETA 01:03:03
# Fork: 1 of 1
# Warmup Iteration   1: 886.416 us/op
Iteration   1: 837.675 us/op
Iteration   2: 829.070 us/op
Iteration   3: 816.354 us/op
Iteration   4: 815.992 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  824.773 ±(99.9%) 68.072 us/op [Average]
  (min, avg, max) = (815.992, 824.773, 837.675), stdev = 10.534
  CI (99.9%): [756.701, 892.845] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 22.50% complete, ETA 01:02:45
# Fork: 1 of 1
# Warmup Iteration   1: 2061.398 us/op
Iteration   1: 2051.096 us/op
Iteration   2: 2038.999 us/op
Iteration   3: 1951.933 us/op
Iteration   4: 1944.881 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  1996.727 ±(99.9%) 362.439 us/op [Average]
  (min, avg, max) = (1944.881, 1996.727, 2051.096), stdev = 56.088
  CI (99.9%): [1634.289, 2359.166] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 22.86% complete, ETA 01:02:28
# Fork: 1 of 1
# Warmup Iteration   1: 5756.559 us/op
Iteration   1: 5475.422 us/op
Iteration   2: 5350.247 us/op
Iteration   3: 5445.772 us/op
Iteration   4: 5316.803 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  5397.061 ±(99.9%) 488.526 us/op [Average]
  (min, avg, max) = (5316.803, 5397.061, 5475.422), stdev = 75.600
  CI (99.9%): [4908.535, 5885.587] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 23.21% complete, ETA 01:02:11
# Fork: 1 of 1
# Warmup Iteration   1: 3.386 us/op
Iteration   1: 3.347 us/op
Iteration   2: 3.318 us/op
Iteration   3: 3.319 us/op
Iteration   4: 3.289 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  3.318 ±(99.9%) 0.154 us/op [Average]
  (min, avg, max) = (3.289, 3.318, 3.347), stdev = 0.024
  CI (99.9%): [3.165, 3.472] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 23.57% complete, ETA 01:01:54
# Fork: 1 of 1
# Warmup Iteration   1: 74.557 us/op
Iteration   1: 67.181 us/op
Iteration   2: 67.319 us/op
Iteration   3: 59.177 us/op
Iteration   4: 52.846 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  61.631 ±(99.9%) 45.136 us/op [Average]
  (min, avg, max) = (52.846, 61.631, 67.319), stdev = 6.985
  CI (99.9%): [16.495, 106.767] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 23.93% complete, ETA 01:01:36
# Fork: 1 of 1
# Warmup Iteration   1: 130.232 us/op
Iteration   1: 101.041 us/op
Iteration   2: 100.713 us/op
Iteration   3: 100.074 us/op
Iteration   4: 100.645 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  100.618 ±(99.9%) 2.597 us/op [Average]
  (min, avg, max) = (100.074, 100.618, 101.041), stdev = 0.402
  CI (99.9%): [98.021, 103.215] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 24.29% complete, ETA 01:01:19
# Fork: 1 of 1
# Warmup Iteration   1: 717.989 us/op
Iteration   1: 728.241 us/op
Iteration   2: 651.420 us/op
Iteration   3: 622.335 us/op
Iteration   4: 623.851 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  656.462 ±(99.9%) 321.063 us/op [Average]
  (min, avg, max) = (622.335, 656.462, 728.241), stdev = 49.685
  CI (99.9%): [335.399, 977.525] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 24.64% complete, ETA 01:01:02
# Fork: 1 of 1
# Warmup Iteration   1: 2982.296 us/op
Iteration   1: 2624.385 us/op
Iteration   2: 2667.062 us/op
Iteration   3: 2583.014 us/op
Iteration   4: 2597.665 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  2618.031 ±(99.9%) 238.465 us/op [Average]
  (min, avg, max) = (2583.014, 2618.031, 2667.062), stdev = 36.903
  CI (99.9%): [2379.566, 2856.497] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 25.00% complete, ETA 01:00:45
# Fork: 1 of 1
# Warmup Iteration   1: 13.483 us/op
Iteration   1: 13.217 us/op
Iteration   2: 13.204 us/op
Iteration   3: 13.190 us/op
Iteration   4: 13.292 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  13.226 ±(99.9%) 0.294 us/op [Average]
  (min, avg, max) = (13.190, 13.226, 13.292), stdev = 0.045
  CI (99.9%): [12.932, 13.520] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 25.36% complete, ETA 01:00:27
# Fork: 1 of 1
# Warmup Iteration   1: 75.247 us/op
Iteration   1: 68.092 us/op
Iteration   2: 67.048 us/op
Iteration   3: 73.156 us/op
Iteration   4: 74.113 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  70.602 ±(99.9%) 22.932 us/op [Average]
  (min, avg, max) = (67.048, 70.602, 74.113), stdev = 3.549
  CI (99.9%): [47.670, 93.535] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 25.71% complete, ETA 01:00:10
# Fork: 1 of 1
# Warmup Iteration   1: 205.024 us/op
Iteration   1: 207.067 us/op
Iteration   2: 206.934 us/op
Iteration   3: 206.957 us/op
Iteration   4: 206.772 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  206.933 ±(99.9%) 0.785 us/op [Average]
  (min, avg, max) = (206.772, 206.933, 207.067), stdev = 0.121
  CI (99.9%): [206.148, 207.717] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 26.07% complete, ETA 00:59:52
# Fork: 1 of 1
# Warmup Iteration   1: 772.301 us/op
Iteration   1: 713.158 us/op
Iteration   2: 711.402 us/op
Iteration   3: 716.226 us/op
Iteration   4: 720.908 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  715.423 ±(99.9%) 26.911 us/op [Average]
  (min, avg, max) = (711.402, 715.423, 720.908), stdev = 4.165
  CI (99.9%): [688.512, 742.334] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 26.43% complete, ETA 00:59:35
# Fork: 1 of 1
# Warmup Iteration   1: 2760.167 us/op
Iteration   1: 2689.671 us/op
Iteration   2: 2689.018 us/op
Iteration   3: 2690.120 us/op
Iteration   4: 2696.300 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  2691.277 ±(99.9%) 21.836 us/op [Average]
  (min, avg, max) = (2689.018, 2691.277, 2696.300), stdev = 3.379
  CI (99.9%): [2669.441, 2713.114] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 26.79% complete, ETA 00:59:18
# Fork: 1 of 1
# Warmup Iteration   1: 9.864 us/op
Iteration   1: 9.638 us/op
Iteration   2: 9.665 us/op
Iteration   3: 9.671 us/op
Iteration   4: 9.683 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  9.664 ±(99.9%) 0.123 us/op [Average]
  (min, avg, max) = (9.638, 9.664, 9.683), stdev = 0.019
  CI (99.9%): [9.541, 9.787] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 27.14% complete, ETA 00:59:00
# Fork: 1 of 1
# Warmup Iteration   1: 85.227 us/op
Iteration   1: 75.784 us/op
Iteration   2: 76.019 us/op
Iteration   3: 75.660 us/op
Iteration   4: 75.534 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  75.749 ±(99.9%) 1.336 us/op [Average]
  (min, avg, max) = (75.534, 75.749, 76.019), stdev = 0.207
  CI (99.9%): [74.414, 77.085] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 27.50% complete, ETA 00:58:43
# Fork: 1 of 1
# Warmup Iteration   1: 285.426 us/op
Iteration   1: 237.540 us/op
Iteration   2: 218.150 us/op
Iteration   3: 218.429 us/op
Iteration   4: 218.357 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  223.119 ±(99.9%) 62.131 us/op [Average]
  (min, avg, max) = (218.150, 223.119, 237.540), stdev = 9.615
  CI (99.9%): [160.988, 285.250] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 27.86% complete, ETA 00:58:25
# Fork: 1 of 1
# Warmup Iteration   1: 780.901 us/op
Iteration   1: 804.231 us/op
Iteration   2: 767.103 us/op
Iteration   3: 702.757 us/op
Iteration   4: 705.833 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  744.981 ±(99.9%) 319.098 us/op [Average]
  (min, avg, max) = (702.757, 744.981, 804.231), stdev = 49.381
  CI (99.9%): [425.883, 1064.079] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Char.testSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 28.21% complete, ETA 00:58:08
# Fork: 1 of 1
# Warmup Iteration   1: 2845.550 us/op
Iteration   1: 2516.400 us/op
Iteration   2: 2559.392 us/op
Iteration   3: 2471.714 us/op
Iteration   4: 2473.433 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Char.testSort":
  2505.235 ±(99.9%) 268.845 us/op [Average]
  (min, avg, max) = (2471.714, 2505.235, 2559.392), stdev = 41.604
  CI (99.9%): [2236.390, 2774.080] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 28.57% complete, ETA 00:57:51
# Fork: 1 of 1
# Warmup Iteration   1: 19.018 us/op
Iteration   1: 17.799 us/op
Iteration   2: 17.830 us/op
Iteration   3: 17.757 us/op
Iteration   4: 17.758 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  17.786 ±(99.9%) 0.227 us/op [Average]
  (min, avg, max) = (17.757, 17.786, 17.830), stdev = 0.035
  CI (99.9%): [17.559, 18.013] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 28.93% complete, ETA 00:57:33
# Fork: 1 of 1
# Warmup Iteration   1: 551.168 us/op
Iteration   1: 527.466 us/op
Iteration   2: 522.847 us/op
Iteration   3: 524.382 us/op
Iteration   4: 527.855 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  525.638 ±(99.9%) 15.661 us/op [Average]
  (min, avg, max) = (522.847, 525.638, 527.855), stdev = 2.424
  CI (99.9%): [509.976, 541.299] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 29.29% complete, ETA 00:57:16
# Fork: 1 of 1
# Warmup Iteration   1: 2069.287 us/op
Iteration   1: 1923.875 us/op
Iteration   2: 1919.250 us/op
Iteration   3: 1920.100 us/op
Iteration   4: 1920.710 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  1920.984 ±(99.9%) 13.044 us/op [Average]
  (min, avg, max) = (1919.250, 1920.984, 1923.875), stdev = 2.019
  CI (99.9%): [1907.940, 1934.028] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 29.64% complete, ETA 00:56:59
# Fork: 1 of 1
# Warmup Iteration   1: 12098.826 us/op
Iteration   1: 11249.133 us/op
Iteration   2: 11126.072 us/op
Iteration   3: 11201.582 us/op
Iteration   4: 11259.041 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  11208.957 ±(99.9%) 392.125 us/op [Average]
  (min, avg, max) = (11126.072, 11208.957, 11259.041), stdev = 60.682
  CI (99.9%): [10816.832, 11601.083] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 30.00% complete, ETA 00:56:41
# Fork: 1 of 1
# Warmup Iteration   1: 92264.326 us/op
Iteration   1: 80737.618 us/op
Iteration   2: 80662.418 us/op
Iteration   3: 80366.092 us/op
Iteration   4: 80208.376 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  80493.626 ±(99.9%) 1607.531 us/op [Average]
  (min, avg, max) = (80208.376, 80493.626, 80737.618), stdev = 248.767
  CI (99.9%): [78886.095, 82101.157] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 30.36% complete, ETA 00:56:24
# Fork: 1 of 1
# Warmup Iteration   1: 5.437 us/op
Iteration   1: 5.258 us/op
Iteration   2: 5.248 us/op
Iteration   3: 5.230 us/op
Iteration   4: 5.225 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  5.240 ±(99.9%) 0.101 us/op [Average]
  (min, avg, max) = (5.225, 5.240, 5.258), stdev = 0.016
  CI (99.9%): [5.140, 5.341] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 30.71% complete, ETA 00:56:07
# Fork: 1 of 1
# Warmup Iteration   1: 162.995 us/op
Iteration   1: 158.257 us/op
Iteration   2: 158.264 us/op
Iteration   3: 158.138 us/op
Iteration   4: 158.161 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  158.205 ±(99.9%) 0.421 us/op [Average]
  (min, avg, max) = (158.138, 158.205, 158.264), stdev = 0.065
  CI (99.9%): [157.784, 158.626] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 31.07% complete, ETA 00:55:50
# Fork: 1 of 1
# Warmup Iteration   1: 1091.922 us/op
Iteration   1: 1078.176 us/op
Iteration   2: 1072.211 us/op
Iteration   3: 1031.511 us/op
Iteration   4: 1030.594 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  1053.123 ±(99.9%) 165.451 us/op [Average]
  (min, avg, max) = (1030.594, 1053.123, 1078.176), stdev = 25.604
  CI (99.9%): [887.672, 1218.574] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 31.43% complete, ETA 00:55:32
# Fork: 1 of 1
# Warmup Iteration   1: 6621.955 us/op
Iteration   1: 6412.485 us/op
Iteration   2: 6417.401 us/op
Iteration   3: 6417.705 us/op
Iteration   4: 6413.491 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  6415.271 ±(99.9%) 17.254 us/op [Average]
  (min, avg, max) = (6412.485, 6415.271, 6417.705), stdev = 2.670
  CI (99.9%): [6398.017, 6432.525] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 31.79% complete, ETA 00:55:15
# Fork: 1 of 1
# Warmup Iteration   1: 43702.280 us/op
Iteration   1: 41636.796 us/op
Iteration   2: 41625.841 us/op
Iteration   3: 41709.439 us/op
Iteration   4: 41627.812 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  41649.972 ±(99.9%) 258.029 us/op [Average]
  (min, avg, max) = (41625.841, 41649.972, 41709.439), stdev = 39.930
  CI (99.9%): [41391.943, 41908.000] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 32.14% complete, ETA 00:54:58
# Fork: 1 of 1
# Warmup Iteration   1: 6.297 us/op
Iteration   1: 5.967 us/op
Iteration   2: 5.945 us/op
Iteration   3: 5.951 us/op
Iteration   4: 5.945 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  5.952 ±(99.9%) 0.067 us/op [Average]
  (min, avg, max) = (5.945, 5.952, 5.967), stdev = 0.010
  CI (99.9%): [5.885, 6.019] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 32.50% complete, ETA 00:54:40
# Fork: 1 of 1
# Warmup Iteration   1: 54.276 us/op
Iteration   1: 50.936 us/op
Iteration   2: 51.284 us/op
Iteration   3: 51.037 us/op
Iteration   4: 50.969 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  51.056 ±(99.9%) 1.018 us/op [Average]
  (min, avg, max) = (50.936, 51.056, 51.284), stdev = 0.158
  CI (99.9%): [50.038, 52.074] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 32.86% complete, ETA 00:54:23
# Fork: 1 of 1
# Warmup Iteration   1: 352.785 us/op
Iteration   1: 325.490 us/op
Iteration   2: 325.022 us/op
Iteration   3: 324.476 us/op
Iteration   4: 324.684 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  324.918 ±(99.9%) 2.862 us/op [Average]
  (min, avg, max) = (324.476, 324.918, 325.490), stdev = 0.443
  CI (99.9%): [322.057, 327.780] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 33.21% complete, ETA 00:54:06
# Fork: 1 of 1
# Warmup Iteration   1: 1842.341 us/op
Iteration   1: 1736.821 us/op
Iteration   2: 1742.851 us/op
Iteration   3: 1741.802 us/op
Iteration   4: 1740.792 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  1740.566 ±(99.9%) 17.025 us/op [Average]
  (min, avg, max) = (1736.821, 1740.566, 1742.851), stdev = 2.635
  CI (99.9%): [1723.542, 1757.591] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 33.57% complete, ETA 00:53:48
# Fork: 1 of 1
# Warmup Iteration   1: 13920.140 us/op
Iteration   1: 12910.523 us/op
Iteration   2: 12883.124 us/op
Iteration   3: 12890.140 us/op
Iteration   4: 12864.111 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  12886.974 ±(99.9%) 123.856 us/op [Average]
  (min, avg, max) = (12864.111, 12886.974, 12910.523), stdev = 19.167
  CI (99.9%): [12763.118, 13010.831] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 33.93% complete, ETA 00:53:31
# Fork: 1 of 1
# Warmup Iteration   1: 12.604 us/op
Iteration   1: 12.150 us/op
Iteration   2: 12.113 us/op
Iteration   3: 12.126 us/op
Iteration   4: 12.121 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  12.128 ±(99.9%) 0.103 us/op [Average]
  (min, avg, max) = (12.113, 12.128, 12.150), stdev = 0.016
  CI (99.9%): [12.025, 12.230] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 34.29% complete, ETA 00:53:14
# Fork: 1 of 1
# Warmup Iteration   1: 256.425 us/op
Iteration   1: 250.595 us/op
Iteration   2: 239.893 us/op
Iteration   3: 249.187 us/op
Iteration   4: 246.598 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  246.568 ±(99.9%) 30.682 us/op [Average]
  (min, avg, max) = (239.893, 246.568, 250.595), stdev = 4.748
  CI (99.9%): [215.886, 277.250] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 34.64% complete, ETA 00:52:56
# Fork: 1 of 1
# Warmup Iteration   1: 954.402 us/op
Iteration   1: 860.209 us/op
Iteration   2: 862.094 us/op
Iteration   3: 854.610 us/op
Iteration   4: 862.097 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  859.752 ±(99.9%) 22.888 us/op [Average]
  (min, avg, max) = (854.610, 859.752, 862.097), stdev = 3.542
  CI (99.9%): [836.864, 882.641] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 35.00% complete, ETA 00:52:39
# Fork: 1 of 1
# Warmup Iteration   1: 5821.692 us/op
Iteration   1: 4893.379 us/op
Iteration   2: 4882.948 us/op
Iteration   3: 4880.212 us/op
Iteration   4: 4901.004 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  4889.386 ±(99.9%) 62.041 us/op [Average]
  (min, avg, max) = (4880.212, 4889.386, 4901.004), stdev = 9.601
  CI (99.9%): [4827.345, 4951.427] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 35.36% complete, ETA 00:52:21
# Fork: 1 of 1
# Warmup Iteration   1: 41976.975 us/op
Iteration   1: 37005.988 us/op
Iteration   2: 37173.118 us/op
Iteration   3: 37225.012 us/op
Iteration   4: 37139.452 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testParallelSort":
  37135.892 ±(99.9%) 604.069 us/op [Average]
  (min, avg, max) = (37005.988, 37135.892, 37225.012), stdev = 93.480
  CI (99.9%): [36531.824, 37739.961] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 35.71% complete, ETA 00:52:05
# Fork: 1 of 1
# Warmup Iteration   1: 18.709 us/op
Iteration   1: 17.778 us/op
Iteration   2: 17.701 us/op
Iteration   3: 17.692 us/op
Iteration   4: 17.725 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  17.724 ±(99.9%) 0.249 us/op [Average]
  (min, avg, max) = (17.692, 17.724, 17.778), stdev = 0.039
  CI (99.9%): [17.475, 17.973] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 36.07% complete, ETA 00:51:47
# Fork: 1 of 1
# Warmup Iteration   1: 617.310 us/op
Iteration   1: 600.373 us/op
Iteration   2: 600.359 us/op
Iteration   3: 600.380 us/op
Iteration   4: 600.411 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  600.381 ±(99.9%) 0.142 us/op [Average]
  (min, avg, max) = (600.359, 600.381, 600.411), stdev = 0.022
  CI (99.9%): [600.239, 600.523] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 36.43% complete, ETA 00:51:30
# Fork: 1 of 1
# Warmup Iteration   1: 5305.784 us/op
Iteration   1: 5020.939 us/op
Iteration   2: 5033.572 us/op
Iteration   3: 5035.126 us/op
Iteration   4: 5015.705 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  5026.336 ±(99.9%) 61.506 us/op [Average]
  (min, avg, max) = (5015.705, 5026.336, 5035.126), stdev = 9.518
  CI (99.9%): [4964.830, 5087.841] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 36.79% complete, ETA 00:51:12
# Fork: 1 of 1
# Warmup Iteration   1: 34894.640 us/op
Iteration   1: 33822.265 us/op
Iteration   2: 33818.941 us/op
Iteration   3: 33812.943 us/op
Iteration   4: 33812.804 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  33816.738 ±(99.9%) 30.144 us/op [Average]
  (min, avg, max) = (33812.804, 33816.738, 33822.265), stdev = 4.665
  CI (99.9%): [33786.594, 33846.882] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 37.14% complete, ETA 00:50:55
# Fork: 1 of 1
# Warmup Iteration   1: 282649.620 us/op
Iteration   1: 266682.702 us/op
Iteration   2: 265699.302 us/op
Iteration   3: 265712.327 us/op
Iteration   4: 266624.970 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  266179.825 ±(99.9%) 3540.354 us/op [Average]
  (min, avg, max) = (265699.302, 266179.825, 266682.702), stdev = 547.874
  CI (99.9%): [262639.471, 269720.180] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 37.50% complete, ETA 00:50:38
# Fork: 1 of 1
# Warmup Iteration   1: 5.379 us/op
Iteration   1: 5.253 us/op
Iteration   2: 5.271 us/op
Iteration   3: 5.280 us/op
Iteration   4: 5.287 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  5.273 ±(99.9%) 0.094 us/op [Average]
  (min, avg, max) = (5.253, 5.273, 5.287), stdev = 0.015
  CI (99.9%): [5.179, 5.367] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 37.86% complete, ETA 00:50:21
# Fork: 1 of 1
# Warmup Iteration   1: 168.213 us/op
Iteration   1: 165.996 us/op
Iteration   2: 166.217 us/op
Iteration   3: 166.230 us/op
Iteration   4: 166.730 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  166.293 ±(99.9%) 2.004 us/op [Average]
  (min, avg, max) = (165.996, 166.293, 166.730), stdev = 0.310
  CI (99.9%): [164.289, 168.298] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 38.21% complete, ETA 00:50:03
# Fork: 1 of 1
# Warmup Iteration   1: 1137.515 us/op
Iteration   1: 1119.508 us/op
Iteration   2: 1121.837 us/op
Iteration   3: 1093.083 us/op
Iteration   4: 1092.814 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  1106.811 ±(99.9%) 103.619 us/op [Average]
  (min, avg, max) = (1092.814, 1106.811, 1121.837), stdev = 16.035
  CI (99.9%): [1003.192, 1210.430] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 38.57% complete, ETA 00:49:46
# Fork: 1 of 1
# Warmup Iteration   1: 6581.982 us/op
Iteration   1: 6480.717 us/op
Iteration   2: 6473.528 us/op
Iteration   3: 6498.418 us/op
Iteration   4: 6499.244 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  6487.977 ±(99.9%) 83.211 us/op [Average]
  (min, avg, max) = (6473.528, 6487.977, 6499.244), stdev = 12.877
  CI (99.9%): [6404.766, 6571.187] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 38.93% complete, ETA 00:49:28
# Fork: 1 of 1
# Warmup Iteration   1: 43763.141 us/op
Iteration   1: 42822.196 us/op
Iteration   2: 42988.215 us/op
Iteration   3: 42964.652 us/op
Iteration   4: 42935.817 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  42927.720 ±(99.9%) 475.216 us/op [Average]
  (min, avg, max) = (42822.196, 42927.720, 42988.215), stdev = 73.540
  CI (99.9%): [42452.505, 43402.936] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 39.29% complete, ETA 00:49:12
# Fork: 1 of 1
# Warmup Iteration   1: 6.292 us/op
Iteration   1: 6.003 us/op
Iteration   2: 6.011 us/op
Iteration   3: 6.005 us/op
Iteration   4: 6.001 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  6.005 ±(99.9%) 0.026 us/op [Average]
  (min, avg, max) = (6.001, 6.005, 6.011), stdev = 0.004
  CI (99.9%): [5.979, 6.031] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 39.64% complete, ETA 00:48:54
# Fork: 1 of 1
# Warmup Iteration   1: 55.581 us/op
Iteration   1: 53.006 us/op
Iteration   2: 52.858 us/op
Iteration   3: 52.922 us/op
Iteration   4: 52.815 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  52.900 ±(99.9%) 0.539 us/op [Average]
  (min, avg, max) = (52.815, 52.900, 53.006), stdev = 0.083
  CI (99.9%): [52.361, 53.439] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 40.00% complete, ETA 00:48:37
# Fork: 1 of 1
# Warmup Iteration   1: 390.240 us/op
Iteration   1: 366.066 us/op
Iteration   2: 366.044 us/op
Iteration   3: 366.187 us/op
Iteration   4: 365.742 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  366.010 ±(99.9%) 1.224 us/op [Average]
  (min, avg, max) = (365.742, 366.010, 366.187), stdev = 0.189
  CI (99.9%): [364.785, 367.234] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 40.36% complete, ETA 00:48:19
# Fork: 1 of 1
# Warmup Iteration   1: 2248.609 us/op
Iteration   1: 2175.223 us/op
Iteration   2: 2166.525 us/op
Iteration   3: 2167.196 us/op
Iteration   4: 2167.997 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  2169.235 ±(99.9%) 26.087 us/op [Average]
  (min, avg, max) = (2166.525, 2169.235, 2175.223), stdev = 4.037
  CI (99.9%): [2143.149, 2195.322] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 40.71% complete, ETA 00:48:02
# Fork: 1 of 1
# Warmup Iteration   1: 17431.277 us/op
Iteration   1: 16337.463 us/op
Iteration   2: 16273.172 us/op
Iteration   3: 16343.811 us/op
Iteration   4: 16301.412 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  16313.964 ±(99.9%) 213.165 us/op [Average]
  (min, avg, max) = (16273.172, 16313.964, 16343.811), stdev = 32.988
  CI (99.9%): [16100.799, 16527.130] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 41.07% complete, ETA 00:47:45
# Fork: 1 of 1
# Warmup Iteration   1: 12.734 us/op
Iteration   1: 12.169 us/op
Iteration   2: 12.152 us/op
Iteration   3: 12.148 us/op
Iteration   4: 12.110 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  12.145 ±(99.9%) 0.160 us/op [Average]
  (min, avg, max) = (12.110, 12.145, 12.169), stdev = 0.025
  CI (99.9%): [11.985, 12.305] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 41.43% complete, ETA 00:47:27
# Fork: 1 of 1
# Warmup Iteration   1: 272.286 us/op
Iteration   1: 258.935 us/op
Iteration   2: 259.446 us/op
Iteration   3: 259.120 us/op
Iteration   4: 259.016 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  259.129 ±(99.9%) 1.450 us/op [Average]
  (min, avg, max) = (258.935, 259.129, 259.446), stdev = 0.224
  CI (99.9%): [257.679, 260.580] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 41.79% complete, ETA 00:47:10
# Fork: 1 of 1
# Warmup Iteration   1: 2133.914 us/op
Iteration   1: 2056.636 us/op
Iteration   2: 2054.781 us/op
Iteration   3: 2059.781 us/op
Iteration   4: 2059.095 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  2057.573 ±(99.9%) 14.859 us/op [Average]
  (min, avg, max) = (2054.781, 2057.573, 2059.781), stdev = 2.299
  CI (99.9%): [2042.715, 2072.432] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 42.14% complete, ETA 00:46:52
# Fork: 1 of 1
# Warmup Iteration   1: 14032.770 us/op
Iteration   1: 13269.408 us/op
Iteration   2: 13077.628 us/op
Iteration   3: 13067.352 us/op
Iteration   4: 13074.102 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  13122.123 ±(99.9%) 635.101 us/op [Average]
  (min, avg, max) = (13067.352, 13122.123, 13269.408), stdev = 98.283
  CI (99.9%): [12487.022, 13757.223] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Double.testSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 42.50% complete, ETA 00:46:35
# Fork: 1 of 1
# Warmup Iteration   1: 96961.057 us/op
Iteration   1: 89308.114 us/op
Iteration   2: 89140.713 us/op
Iteration   3: 87975.201 us/op
Iteration   4: 87442.304 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Double.testSort":
  88466.583 ±(99.9%) 5843.522 us/op [Average]
  (min, avg, max) = (87442.304, 88466.583, 89308.114), stdev = 904.291
  CI (99.9%): [82623.061, 94310.105] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 42.86% complete, ETA 00:46:18
# Fork: 1 of 1
# Warmup Iteration   1: 18.070 us/op
Iteration   1: 17.315 us/op
Iteration   2: 17.236 us/op
Iteration   3: 17.229 us/op
Iteration   4: 17.174 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  17.238 ±(99.9%) 0.375 us/op [Average]
  (min, avg, max) = (17.174, 17.238, 17.315), stdev = 0.058
  CI (99.9%): [16.864, 17.613] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 43.21% complete, ETA 00:46:01
# Fork: 1 of 1
# Warmup Iteration   1: 558.839 us/op
Iteration   1: 529.140 us/op
Iteration   2: 529.228 us/op
Iteration   3: 526.961 us/op
Iteration   4: 527.172 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  528.125 ±(99.9%) 7.923 us/op [Average]
  (min, avg, max) = (526.961, 528.125, 529.228), stdev = 1.226
  CI (99.9%): [520.202, 536.049] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 43.57% complete, ETA 00:45:43
# Fork: 1 of 1
# Warmup Iteration   1: 2096.948 us/op
Iteration   1: 1956.320 us/op
Iteration   2: 1952.332 us/op
Iteration   3: 1940.643 us/op
Iteration   4: 1949.126 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  1949.605 ±(99.9%) 43.036 us/op [Average]
  (min, avg, max) = (1940.643, 1949.605, 1956.320), stdev = 6.660
  CI (99.9%): [1906.569, 1992.642] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 43.93% complete, ETA 00:45:26
# Fork: 1 of 1
# Warmup Iteration   1: 12553.766 us/op
Iteration   1: 11452.058 us/op
Iteration   2: 11488.453 us/op
Iteration   3: 11458.582 us/op
Iteration   4: 11506.218 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  11476.328 ±(99.9%) 164.510 us/op [Average]
  (min, avg, max) = (11452.058, 11476.328, 11506.218), stdev = 25.458
  CI (99.9%): [11311.818, 11640.838] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 44.29% complete, ETA 00:45:08
# Fork: 1 of 1
# Warmup Iteration   1: 93317.128 us/op
Iteration   1: 81315.363 us/op
Iteration   2: 80689.080 us/op
Iteration   3: 80682.401 us/op
Iteration   4: 80766.942 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  80863.447 ±(99.9%) 1962.584 us/op [Average]
  (min, avg, max) = (80682.401, 80863.447, 81315.363), stdev = 303.712
  CI (99.9%): [78900.863, 82826.030] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 44.64% complete, ETA 00:44:51
# Fork: 1 of 1
# Warmup Iteration   1: 5.554 us/op
Iteration   1: 5.338 us/op
Iteration   2: 5.330 us/op
Iteration   3: 5.324 us/op
Iteration   4: 5.343 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  5.334 ±(99.9%) 0.056 us/op [Average]
  (min, avg, max) = (5.324, 5.334, 5.343), stdev = 0.009
  CI (99.9%): [5.278, 5.390] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 45.00% complete, ETA 00:44:34
# Fork: 1 of 1
# Warmup Iteration   1: 162.105 us/op
Iteration   1: 157.232 us/op
Iteration   2: 157.095 us/op
Iteration   3: 156.938 us/op
Iteration   4: 157.075 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  157.085 ±(99.9%) 0.780 us/op [Average]
  (min, avg, max) = (156.938, 157.085, 157.232), stdev = 0.121
  CI (99.9%): [156.305, 157.865] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 45.36% complete, ETA 00:44:17
# Fork: 1 of 1
# Warmup Iteration   1: 1091.468 us/op
Iteration   1: 1072.995 us/op
Iteration   2: 1070.276 us/op
Iteration   3: 1034.637 us/op
Iteration   4: 1034.456 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  1053.091 ±(99.9%) 138.557 us/op [Average]
  (min, avg, max) = (1034.456, 1053.091, 1072.995), stdev = 21.442
  CI (99.9%): [914.533, 1191.648] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 45.71% complete, ETA 00:43:59
# Fork: 1 of 1
# Warmup Iteration   1: 6592.681 us/op
Iteration   1: 6411.339 us/op
Iteration   2: 6413.185 us/op
Iteration   3: 6406.374 us/op
Iteration   4: 6407.947 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  6409.711 ±(99.9%) 20.080 us/op [Average]
  (min, avg, max) = (6406.374, 6409.711, 6413.185), stdev = 3.107
  CI (99.9%): [6389.631, 6429.791] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 46.07% complete, ETA 00:43:42
# Fork: 1 of 1
# Warmup Iteration   1: 43288.930 us/op
Iteration   1: 41182.479 us/op
Iteration   2: 41320.826 us/op
Iteration   3: 41260.721 us/op
Iteration   4: 41195.753 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  41239.945 ±(99.9%) 412.567 us/op [Average]
  (min, avg, max) = (41182.479, 41239.945, 41320.826), stdev = 63.845
  CI (99.9%): [40827.377, 41652.512] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 46.43% complete, ETA 00:43:25
# Fork: 1 of 1
# Warmup Iteration   1: 6.011 us/op
Iteration   1: 5.694 us/op
Iteration   2: 5.716 us/op
Iteration   3: 5.724 us/op
Iteration   4: 5.726 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  5.715 ±(99.9%) 0.094 us/op [Average]
  (min, avg, max) = (5.694, 5.715, 5.726), stdev = 0.015
  CI (99.9%): [5.621, 5.810] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 46.79% complete, ETA 00:43:07
# Fork: 1 of 1
# Warmup Iteration   1: 51.666 us/op
Iteration   1: 48.968 us/op
Iteration   2: 48.726 us/op
Iteration   3: 48.699 us/op
Iteration   4: 48.698 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  48.773 ±(99.9%) 0.844 us/op [Average]
  (min, avg, max) = (48.698, 48.773, 48.968), stdev = 0.131
  CI (99.9%): [47.929, 49.616] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 47.14% complete, ETA 00:42:50
# Fork: 1 of 1
# Warmup Iteration   1: 336.088 us/op
Iteration   1: 311.374 us/op
Iteration   2: 310.444 us/op
Iteration   3: 310.236 us/op
Iteration   4: 310.292 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  310.586 ±(99.9%) 3.440 us/op [Average]
  (min, avg, max) = (310.236, 310.586, 311.374), stdev = 0.532
  CI (99.9%): [307.147, 314.026] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 47.50% complete, ETA 00:42:33
# Fork: 1 of 1
# Warmup Iteration   1: 1681.537 us/op
Iteration   1: 1554.789 us/op
Iteration   2: 1552.095 us/op
Iteration   3: 1551.706 us/op
Iteration   4: 1551.979 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  1552.642 ±(99.9%) 9.308 us/op [Average]
  (min, avg, max) = (1551.706, 1552.642, 1554.789), stdev = 1.440
  CI (99.9%): [1543.334, 1561.950] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 47.86% complete, ETA 00:42:15
# Fork: 1 of 1
# Warmup Iteration   1: 11845.368 us/op
Iteration   1: 10730.436 us/op
Iteration   2: 10696.085 us/op
Iteration   3: 10681.348 us/op
Iteration   4: 10693.339 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  10700.302 ±(99.9%) 136.241 us/op [Average]
  (min, avg, max) = (10681.348, 10700.302, 10730.436), stdev = 21.083
  CI (99.9%): [10564.061, 10836.543] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 48.21% complete, ETA 00:41:58
# Fork: 1 of 1
# Warmup Iteration   1: 12.968 us/op
Iteration   1: 12.517 us/op
Iteration   2: 12.514 us/op
Iteration   3: 12.476 us/op
Iteration   4: 12.544 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  12.513 ±(99.9%) 0.180 us/op [Average]
  (min, avg, max) = (12.476, 12.513, 12.544), stdev = 0.028
  CI (99.9%): [12.332, 12.693] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 48.57% complete, ETA 00:41:40
# Fork: 1 of 1
# Warmup Iteration   1: 262.362 us/op
Iteration   1: 241.855 us/op
Iteration   2: 252.581 us/op
Iteration   3: 245.601 us/op
Iteration   4: 244.163 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  246.050 ±(99.9%) 29.848 us/op [Average]
  (min, avg, max) = (241.855, 246.050, 252.581), stdev = 4.619
  CI (99.9%): [216.202, 275.898] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 48.93% complete, ETA 00:41:23
# Fork: 1 of 1
# Warmup Iteration   1: 941.167 us/op
Iteration   1: 858.214 us/op
Iteration   2: 852.468 us/op
Iteration   3: 851.843 us/op
Iteration   4: 852.335 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  853.715 ±(99.9%) 19.459 us/op [Average]
  (min, avg, max) = (851.843, 853.715, 858.214), stdev = 3.011
  CI (99.9%): [834.256, 873.174] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 49.29% complete, ETA 00:41:06
# Fork: 1 of 1
# Warmup Iteration   1: 5330.527 us/op
Iteration   1: 4843.703 us/op
Iteration   2: 4845.270 us/op
Iteration   3: 4812.646 us/op
Iteration   4: 4821.529 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  4830.787 ±(99.9%) 104.956 us/op [Average]
  (min, avg, max) = (4812.646, 4830.787, 4845.270), stdev = 16.242
  CI (99.9%): [4725.831, 4935.743] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 49.64% complete, ETA 00:40:48
# Fork: 1 of 1
# Warmup Iteration   1: 42130.937 us/op
Iteration   1: 36335.701 us/op
Iteration   2: 36372.983 us/op
Iteration   3: 36633.552 us/op
Iteration   4: 36603.549 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testParallelSort":
  36486.446 ±(99.9%) 993.769 us/op [Average]
  (min, avg, max) = (36335.701, 36486.446, 36633.552), stdev = 153.787
  CI (99.9%): [35492.677, 37480.215] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 50.00% complete, ETA 00:40:31
# Fork: 1 of 1
# Warmup Iteration   1: 18.378 us/op
Iteration   1: 17.252 us/op
Iteration   2: 17.224 us/op
Iteration   3: 17.228 us/op
Iteration   4: 17.198 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  17.226 ±(99.9%) 0.142 us/op [Average]
  (min, avg, max) = (17.198, 17.226, 17.252), stdev = 0.022
  CI (99.9%): [17.083, 17.368] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 50.36% complete, ETA 00:40:14
# Fork: 1 of 1
# Warmup Iteration   1: 616.600 us/op
Iteration   1: 600.964 us/op
Iteration   2: 600.964 us/op
Iteration   3: 602.139 us/op
Iteration   4: 602.185 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  601.563 ±(99.9%) 4.472 us/op [Average]
  (min, avg, max) = (600.964, 601.563, 602.185), stdev = 0.692
  CI (99.9%): [597.091, 606.035] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 50.71% complete, ETA 00:39:56
# Fork: 1 of 1
# Warmup Iteration   1: 5393.290 us/op
Iteration   1: 5069.366 us/op
Iteration   2: 5076.120 us/op
Iteration   3: 5075.891 us/op
Iteration   4: 5061.985 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  5070.841 ±(99.9%) 43.185 us/op [Average]
  (min, avg, max) = (5061.985, 5070.841, 5076.120), stdev = 6.683
  CI (99.9%): [5027.656, 5114.025] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 51.07% complete, ETA 00:39:39
# Fork: 1 of 1
# Warmup Iteration   1: 36116.956 us/op
Iteration   1: 34122.827 us/op
Iteration   2: 34107.116 us/op
Iteration   3: 34176.412 us/op
Iteration   4: 34112.652 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  34129.752 ±(99.9%) 205.363 us/op [Average]
  (min, avg, max) = (34107.116, 34129.752, 34176.412), stdev = 31.780
  CI (99.9%): [33924.389, 34335.115] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 51.43% complete, ETA 00:39:22
# Fork: 1 of 1
# Warmup Iteration   1: 280415.024 us/op
Iteration   1: 260113.933 us/op
Iteration   2: 260099.603 us/op
Iteration   3: 260135.963 us/op
Iteration   4: 260061.625 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  260102.781 ±(99.9%) 201.922 us/op [Average]
  (min, avg, max) = (260061.625, 260102.781, 260135.963), stdev = 31.248
  CI (99.9%): [259900.858, 260304.703] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 51.79% complete, ETA 00:39:05
# Fork: 1 of 1
# Warmup Iteration   1: 5.215 us/op
Iteration   1: 5.126 us/op
Iteration   2: 5.081 us/op
Iteration   3: 5.111 us/op
Iteration   4: 5.131 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  5.112 ±(99.9%) 0.145 us/op [Average]
  (min, avg, max) = (5.081, 5.112, 5.131), stdev = 0.022
  CI (99.9%): [4.967, 5.257] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 52.14% complete, ETA 00:38:48
# Fork: 1 of 1
# Warmup Iteration   1: 164.969 us/op
Iteration   1: 161.188 us/op
Iteration   2: 161.201 us/op
Iteration   3: 161.228 us/op
Iteration   4: 161.258 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  161.219 ±(99.9%) 0.200 us/op [Average]
  (min, avg, max) = (161.188, 161.219, 161.258), stdev = 0.031
  CI (99.9%): [161.019, 161.419] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 52.50% complete, ETA 00:38:30
# Fork: 1 of 1
# Warmup Iteration   1: 1094.100 us/op
Iteration   1: 1083.054 us/op
Iteration   2: 1081.085 us/op
Iteration   3: 1044.002 us/op
Iteration   4: 1047.570 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  1063.928 ±(99.9%) 135.796 us/op [Average]
  (min, avg, max) = (1044.002, 1063.928, 1083.054), stdev = 21.015
  CI (99.9%): [928.132, 1199.723] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 52.86% complete, ETA 00:38:13
# Fork: 1 of 1
# Warmup Iteration   1: 6741.774 us/op
Iteration   1: 6623.021 us/op
Iteration   2: 6620.867 us/op
Iteration   3: 6615.602 us/op
Iteration   4: 6610.424 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  6617.479 ±(99.9%) 36.456 us/op [Average]
  (min, avg, max) = (6610.424, 6617.479, 6623.021), stdev = 5.642
  CI (99.9%): [6581.023, 6653.934] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 53.21% complete, ETA 00:37:56
# Fork: 1 of 1
# Warmup Iteration   1: 43416.648 us/op
Iteration   1: 41629.060 us/op
Iteration   2: 41626.500 us/op
Iteration   3: 41641.625 us/op
Iteration   4: 41643.752 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  41635.234 ±(99.9%) 56.310 us/op [Average]
  (min, avg, max) = (41626.500, 41635.234, 41643.752), stdev = 8.714
  CI (99.9%): [41578.924, 41691.545] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 53.57% complete, ETA 00:37:38
# Fork: 1 of 1
# Warmup Iteration   1: 5.999 us/op
Iteration   1: 5.704 us/op
Iteration   2: 5.698 us/op
Iteration   3: 5.695 us/op
Iteration   4: 5.689 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  5.696 ±(99.9%) 0.040 us/op [Average]
  (min, avg, max) = (5.689, 5.696, 5.704), stdev = 0.006
  CI (99.9%): [5.656, 5.737] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 53.93% complete, ETA 00:37:21
# Fork: 1 of 1
# Warmup Iteration   1: 53.045 us/op
Iteration   1: 50.234 us/op
Iteration   2: 50.294 us/op
Iteration   3: 50.403 us/op
Iteration   4: 50.466 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  50.349 ±(99.9%) 0.675 us/op [Average]
  (min, avg, max) = (50.234, 50.349, 50.466), stdev = 0.104
  CI (99.9%): [49.674, 51.024] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 54.29% complete, ETA 00:37:04
# Fork: 1 of 1
# Warmup Iteration   1: 360.410 us/op
Iteration   1: 339.767 us/op
Iteration   2: 339.545 us/op
Iteration   3: 339.812 us/op
Iteration   4: 339.432 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  339.639 ±(99.9%) 1.168 us/op [Average]
  (min, avg, max) = (339.432, 339.639, 339.812), stdev = 0.181
  CI (99.9%): [338.471, 340.807] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 54.64% complete, ETA 00:36:46
# Fork: 1 of 1
# Warmup Iteration   1: 2301.346 us/op
Iteration   1: 2178.329 us/op
Iteration   2: 2176.530 us/op
Iteration   3: 2172.640 us/op
Iteration   4: 2175.852 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  2175.838 ±(99.9%) 15.344 us/op [Average]
  (min, avg, max) = (2172.640, 2175.838, 2178.329), stdev = 2.374
  CI (99.9%): [2160.494, 2191.182] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 55.00% complete, ETA 00:36:29
# Fork: 1 of 1
# Warmup Iteration   1: 15202.825 us/op
Iteration   1: 14193.414 us/op
Iteration   2: 14181.974 us/op
Iteration   3: 14181.610 us/op
Iteration   4: 14193.951 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  14187.737 ±(99.9%) 44.392 us/op [Average]
  (min, avg, max) = (14181.610, 14187.737, 14193.951), stdev = 6.870
  CI (99.9%): [14143.345, 14232.130] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 55.36% complete, ETA 00:36:11
# Fork: 1 of 1
# Warmup Iteration   1: 13.277 us/op
Iteration   1: 12.504 us/op
Iteration   2: 12.526 us/op
Iteration   3: 12.500 us/op
Iteration   4: 12.471 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  12.500 ±(99.9%) 0.147 us/op [Average]
  (min, avg, max) = (12.471, 12.500, 12.526), stdev = 0.023
  CI (99.9%): [12.353, 12.647] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 55.71% complete, ETA 00:35:54
# Fork: 1 of 1
# Warmup Iteration   1: 265.556 us/op
Iteration   1: 255.876 us/op
Iteration   2: 255.854 us/op
Iteration   3: 255.834 us/op
Iteration   4: 256.327 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  255.973 ±(99.9%) 1.530 us/op [Average]
  (min, avg, max) = (255.834, 255.973, 256.327), stdev = 0.237
  CI (99.9%): [254.443, 257.503] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 56.07% complete, ETA 00:35:37
# Fork: 1 of 1
# Warmup Iteration   1: 2145.645 us/op
Iteration   1: 2058.635 us/op
Iteration   2: 2058.882 us/op
Iteration   3: 2055.042 us/op
Iteration   4: 2062.970 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  2058.882 ±(99.9%) 20.946 us/op [Average]
  (min, avg, max) = (2055.042, 2058.882, 2062.970), stdev = 3.241
  CI (99.9%): [2037.936, 2079.828] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 56.43% complete, ETA 00:35:19
# Fork: 1 of 1
# Warmup Iteration   1: 13364.227 us/op
Iteration   1: 12939.643 us/op
Iteration   2: 12969.925 us/op
Iteration   3: 12764.039 us/op
Iteration   4: 12724.164 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  12849.443 ±(99.9%) 797.043 us/op [Average]
  (min, avg, max) = (12724.164, 12849.443, 12969.925), stdev = 123.343
  CI (99.9%): [12052.399, 13646.486] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Float.testSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 56.79% complete, ETA 00:35:02
# Fork: 1 of 1
# Warmup Iteration   1: 92673.196 us/op
Iteration   1: 85861.277 us/op
Iteration   2: 86284.576 us/op
Iteration   3: 86263.286 us/op
Iteration   4: 86352.443 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Float.testSort":
  86190.395 ±(99.9%) 1438.965 us/op [Average]
  (min, avg, max) = (85861.277, 86190.395, 86352.443), stdev = 222.681
  CI (99.9%): [84751.431, 87629.360] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 57.14% complete, ETA 00:34:45
# Fork: 1 of 1
# Warmup Iteration   1: 16.007 us/op
Iteration   1: 15.291 us/op
Iteration   2: 15.257 us/op
Iteration   3: 15.231 us/op
Iteration   4: 15.241 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  15.255 ±(99.9%) 0.171 us/op [Average]
  (min, avg, max) = (15.231, 15.255, 15.291), stdev = 0.026
  CI (99.9%): [15.084, 15.426] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 57.50% complete, ETA 00:34:27
# Fork: 1 of 1
# Warmup Iteration   1: 506.106 us/op
Iteration   1: 490.834 us/op
Iteration   2: 496.352 us/op
Iteration   3: 494.013 us/op
Iteration   4: 489.287 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  492.621 ±(99.9%) 20.491 us/op [Average]
  (min, avg, max) = (489.287, 492.621, 496.352), stdev = 3.171
  CI (99.9%): [472.130, 513.112] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 57.86% complete, ETA 00:34:10
# Fork: 1 of 1
# Warmup Iteration   1: 1806.536 us/op
Iteration   1: 1708.299 us/op
Iteration   2: 1706.099 us/op
Iteration   3: 1704.648 us/op
Iteration   4: 1700.625 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  1704.918 ±(99.9%) 20.883 us/op [Average]
  (min, avg, max) = (1700.625, 1704.918, 1708.299), stdev = 3.232
  CI (99.9%): [1684.035, 1725.800] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 58.21% complete, ETA 00:33:53
# Fork: 1 of 1
# Warmup Iteration   1: 11177.679 us/op
Iteration   1: 10246.950 us/op
Iteration   2: 10150.379 us/op
Iteration   3: 10255.924 us/op
Iteration   4: 10267.598 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  10230.213 ±(99.9%) 348.233 us/op [Average]
  (min, avg, max) = (10150.379, 10230.213, 10267.598), stdev = 53.890
  CI (99.9%): [9881.980, 10578.446] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 58.57% complete, ETA 00:33:35
# Fork: 1 of 1
# Warmup Iteration   1: 82290.710 us/op
Iteration   1: 75587.288 us/op
Iteration   2: 74452.577 us/op
Iteration   3: 74814.249 us/op
Iteration   4: 74926.510 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  74945.156 ±(99.9%) 3059.401 us/op [Average]
  (min, avg, max) = (74452.577, 74945.156, 75587.288), stdev = 473.446
  CI (99.9%): [71885.755, 78004.557] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 58.93% complete, ETA 00:33:18
# Fork: 1 of 1
# Warmup Iteration   1: 3.822 us/op
Iteration   1: 3.740 us/op
Iteration   2: 3.721 us/op
Iteration   3: 3.746 us/op
Iteration   4: 3.730 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  3.734 ±(99.9%) 0.070 us/op [Average]
  (min, avg, max) = (3.721, 3.734, 3.746), stdev = 0.011
  CI (99.9%): [3.664, 3.805] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 59.29% complete, ETA 00:33:01
# Fork: 1 of 1
# Warmup Iteration   1: 98.497 us/op
Iteration   1: 95.563 us/op
Iteration   2: 95.571 us/op
Iteration   3: 95.765 us/op
Iteration   4: 95.399 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  95.575 ±(99.9%) 0.969 us/op [Average]
  (min, avg, max) = (95.399, 95.575, 95.765), stdev = 0.150
  CI (99.9%): [94.606, 96.543] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 59.64% complete, ETA 00:32:43
# Fork: 1 of 1
# Warmup Iteration   1: 735.071 us/op
Iteration   1: 724.239 us/op
Iteration   2: 723.962 us/op
Iteration   3: 723.395 us/op
Iteration   4: 723.239 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  723.709 ±(99.9%) 3.039 us/op [Average]
  (min, avg, max) = (723.239, 723.709, 724.239), stdev = 0.470
  CI (99.9%): [720.669, 726.748] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 60.00% complete, ETA 00:32:26
# Fork: 1 of 1
# Warmup Iteration   1: 4499.285 us/op
Iteration   1: 4457.227 us/op
Iteration   2: 4456.364 us/op
Iteration   3: 4454.066 us/op
Iteration   4: 4454.633 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  4455.572 ±(99.9%) 9.524 us/op [Average]
  (min, avg, max) = (4454.066, 4455.572, 4457.227), stdev = 1.474
  CI (99.9%): [4446.048, 4465.096] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 60.36% complete, ETA 00:32:08
# Fork: 1 of 1
# Warmup Iteration   1: 26444.420 us/op
Iteration   1: 25487.737 us/op
Iteration   2: 25489.446 us/op
Iteration   3: 25477.013 us/op
Iteration   4: 25447.889 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  25475.521 ±(99.9%) 124.235 us/op [Average]
  (min, avg, max) = (25447.889, 25475.521, 25489.446), stdev = 19.226
  CI (99.9%): [25351.286, 25599.756] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 60.71% complete, ETA 00:31:51
# Fork: 1 of 1
# Warmup Iteration   1: 4.580 us/op
Iteration   1: 4.398 us/op
Iteration   2: 4.388 us/op
Iteration   3: 4.384 us/op
Iteration   4: 4.390 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  4.390 ±(99.9%) 0.038 us/op [Average]
  (min, avg, max) = (4.384, 4.390, 4.398), stdev = 0.006
  CI (99.9%): [4.352, 4.428] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 61.07% complete, ETA 00:31:34
# Fork: 1 of 1
# Warmup Iteration   1: 45.618 us/op
Iteration   1: 42.740 us/op
Iteration   2: 42.538 us/op
Iteration   3: 42.498 us/op
Iteration   4: 43.270 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  42.761 ±(99.9%) 2.296 us/op [Average]
  (min, avg, max) = (42.498, 42.761, 43.270), stdev = 0.355
  CI (99.9%): [40.465, 45.058] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 61.43% complete, ETA 00:31:16
# Fork: 1 of 1
# Warmup Iteration   1: 284.494 us/op
Iteration   1: 263.777 us/op
Iteration   2: 262.884 us/op
Iteration   3: 262.802 us/op
Iteration   4: 262.911 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  263.094 ±(99.9%) 2.960 us/op [Average]
  (min, avg, max) = (262.802, 263.094, 263.777), stdev = 0.458
  CI (99.9%): [260.133, 266.054] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 61.79% complete, ETA 00:30:59
# Fork: 1 of 1
# Warmup Iteration   1: 1258.764 us/op
Iteration   1: 1154.085 us/op
Iteration   2: 1156.339 us/op
Iteration   3: 1153.716 us/op
Iteration   4: 1152.113 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  1154.063 ±(99.9%) 11.257 us/op [Average]
  (min, avg, max) = (1152.113, 1154.063, 1156.339), stdev = 1.742
  CI (99.9%): [1142.807, 1165.320] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 62.14% complete, ETA 00:30:41
# Fork: 1 of 1
# Warmup Iteration   1: 8031.369 us/op
Iteration   1: 7410.013 us/op
Iteration   2: 7380.136 us/op
Iteration   3: 7397.379 us/op
Iteration   4: 7370.483 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  7389.503 ±(99.9%) 113.908 us/op [Average]
  (min, avg, max) = (7370.483, 7389.503, 7410.013), stdev = 17.627
  CI (99.9%): [7275.595, 7503.411] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 62.50% complete, ETA 00:30:24
# Fork: 1 of 1
# Warmup Iteration   1: 11.967 us/op
Iteration   1: 11.953 us/op
Iteration   2: 11.550 us/op
Iteration   3: 11.640 us/op
Iteration   4: 11.478 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  11.655 ±(99.9%) 1.354 us/op [Average]
  (min, avg, max) = (11.478, 11.655, 11.953), stdev = 0.210
  CI (99.9%): [10.301, 13.009] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 62.86% complete, ETA 00:30:07
# Fork: 1 of 1
# Warmup Iteration   1: 237.164 us/op
Iteration   1: 223.488 us/op
Iteration   2: 227.400 us/op
Iteration   3: 223.867 us/op
Iteration   4: 223.952 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  224.677 ±(99.9%) 11.804 us/op [Average]
  (min, avg, max) = (223.488, 224.677, 227.400), stdev = 1.827
  CI (99.9%): [212.873, 236.480] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 63.21% complete, ETA 00:29:49
# Fork: 1 of 1
# Warmup Iteration   1: 793.006 us/op
Iteration   1: 754.136 us/op
Iteration   2: 747.769 us/op
Iteration   3: 744.718 us/op
Iteration   4: 739.207 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  746.457 ±(99.9%) 40.228 us/op [Average]
  (min, avg, max) = (739.207, 746.457, 754.136), stdev = 6.225
  CI (99.9%): [706.229, 786.686] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 63.57% complete, ETA 00:29:32
# Fork: 1 of 1
# Warmup Iteration   1: 4703.726 us/op
Iteration   1: 4187.797 us/op
Iteration   2: 4089.263 us/op
Iteration   3: 4103.213 us/op
Iteration   4: 4095.586 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  4118.965 ±(99.9%) 298.810 us/op [Average]
  (min, avg, max) = (4089.263, 4118.965, 4187.797), stdev = 46.241
  CI (99.9%): [3820.155, 4417.775] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 63.93% complete, ETA 00:29:14
# Fork: 1 of 1
# Warmup Iteration   1: 37258.161 us/op
Iteration   1: 30541.023 us/op
Iteration   2: 30508.092 us/op
Iteration   3: 30311.799 us/op
Iteration   4: 29920.544 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  30320.364 ±(99.9%) 1842.372 us/op [Average]
  (min, avg, max) = (29920.544, 30320.364, 30541.023), stdev = 285.109
  CI (99.9%): [28477.992, 32162.737] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 64.29% complete, ETA 00:28:57
# Fork: 1 of 1
# Warmup Iteration   1: 15.681 us/op
Iteration   1: 15.187 us/op
Iteration   2: 15.146 us/op
Iteration   3: 15.155 us/op
Iteration   4: 15.204 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  15.173 ±(99.9%) 0.175 us/op [Average]
  (min, avg, max) = (15.146, 15.173, 15.204), stdev = 0.027
  CI (99.9%): [14.998, 15.348] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 64.64% complete, ETA 00:28:40
# Fork: 1 of 1
# Warmup Iteration   1: 556.752 us/op
Iteration   1: 546.784 us/op
Iteration   2: 546.885 us/op
Iteration   3: 546.798 us/op
Iteration   4: 545.483 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  546.488 ±(99.9%) 4.336 us/op [Average]
  (min, avg, max) = (545.483, 546.488, 546.885), stdev = 0.671
  CI (99.9%): [542.152, 550.824] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 65.00% complete, ETA 00:28:22
# Fork: 1 of 1
# Warmup Iteration   1: 4917.527 us/op
Iteration   1: 4750.994 us/op
Iteration   2: 4757.037 us/op
Iteration   3: 4750.940 us/op
Iteration   4: 4750.364 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  4752.334 ±(99.9%) 20.346 us/op [Average]
  (min, avg, max) = (4750.364, 4752.334, 4757.037), stdev = 3.149
  CI (99.9%): [4731.988, 4772.680] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 65.36% complete, ETA 00:28:05
# Fork: 1 of 1
# Warmup Iteration   1: 34257.071 us/op
Iteration   1: 32783.389 us/op
Iteration   2: 32831.838 us/op
Iteration   3: 32816.267 us/op
Iteration   4: 32837.452 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  32817.237 ±(99.9%) 156.894 us/op [Average]
  (min, avg, max) = (32783.389, 32817.237, 32837.452), stdev = 24.279
  CI (99.9%): [32660.343, 32974.130] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 65.71% complete, ETA 00:27:48
# Fork: 1 of 1
# Warmup Iteration   1: 268728.177 us/op
Iteration   1: 256302.079 us/op
Iteration   2: 256293.608 us/op
Iteration   3: 256422.505 us/op
Iteration   4: 256211.484 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  256307.419 ±(99.9%) 561.705 us/op [Average]
  (min, avg, max) = (256211.484, 256307.419, 256422.505), stdev = 86.924
  CI (99.9%): [255745.714, 256869.124] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 66.07% complete, ETA 00:27:31
# Fork: 1 of 1
# Warmup Iteration   1: 4.009 us/op
Iteration   1: 3.922 us/op
Iteration   2: 3.923 us/op
Iteration   3: 3.906 us/op
Iteration   4: 3.912 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  3.916 ±(99.9%) 0.051 us/op [Average]
  (min, avg, max) = (3.906, 3.916, 3.923), stdev = 0.008
  CI (99.9%): [3.864, 3.967] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 66.43% complete, ETA 00:27:13
# Fork: 1 of 1
# Warmup Iteration   1: 101.310 us/op
Iteration   1: 100.484 us/op
Iteration   2: 100.444 us/op
Iteration   3: 100.441 us/op
Iteration   4: 100.147 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  100.379 ±(99.9%) 1.007 us/op [Average]
  (min, avg, max) = (100.147, 100.379, 100.484), stdev = 0.156
  CI (99.9%): [99.372, 101.386] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 66.79% complete, ETA 00:26:56
# Fork: 1 of 1
# Warmup Iteration   1: 726.834 us/op
Iteration   1: 717.860 us/op
Iteration   2: 719.402 us/op
Iteration   3: 717.800 us/op
Iteration   4: 716.439 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  717.875 ±(99.9%) 7.827 us/op [Average]
  (min, avg, max) = (716.439, 717.875, 719.402), stdev = 1.211
  CI (99.9%): [710.048, 725.702] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 67.14% complete, ETA 00:26:38
# Fork: 1 of 1
# Warmup Iteration   1: 4480.295 us/op
Iteration   1: 4428.151 us/op
Iteration   2: 4427.599 us/op
Iteration   3: 4433.296 us/op
Iteration   4: 4435.011 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  4431.014 ±(99.9%) 23.900 us/op [Average]
  (min, avg, max) = (4427.599, 4431.014, 4435.011), stdev = 3.699
  CI (99.9%): [4407.115, 4454.914] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 67.50% complete, ETA 00:26:21
# Fork: 1 of 1
# Warmup Iteration   1: 25951.108 us/op
Iteration   1: 25436.695 us/op
Iteration   2: 25440.695 us/op
Iteration   3: 25471.971 us/op
Iteration   4: 25381.321 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  25432.670 ±(99.9%) 243.560 us/op [Average]
  (min, avg, max) = (25381.321, 25432.670, 25471.971), stdev = 37.691
  CI (99.9%): [25189.110, 25676.231] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 67.86% complete, ETA 00:26:04
# Fork: 1 of 1
# Warmup Iteration   1: 4.809 us/op
Iteration   1: 4.525 us/op
Iteration   2: 4.537 us/op
Iteration   3: 4.542 us/op
Iteration   4: 4.554 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  4.540 ±(99.9%) 0.078 us/op [Average]
  (min, avg, max) = (4.525, 4.540, 4.554), stdev = 0.012
  CI (99.9%): [4.462, 4.617] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 68.21% complete, ETA 00:25:46
# Fork: 1 of 1
# Warmup Iteration   1: 40.137 us/op
Iteration   1: 37.956 us/op
Iteration   2: 37.956 us/op
Iteration   3: 37.875 us/op
Iteration   4: 37.874 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  37.915 ±(99.9%) 0.306 us/op [Average]
  (min, avg, max) = (37.874, 37.915, 37.956), stdev = 0.047
  CI (99.9%): [37.609, 38.221] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 68.57% complete, ETA 00:25:29
# Fork: 1 of 1
# Warmup Iteration   1: 293.055 us/op
Iteration   1: 276.898 us/op
Iteration   2: 276.928 us/op
Iteration   3: 276.839 us/op
Iteration   4: 276.502 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  276.792 ±(99.9%) 1.271 us/op [Average]
  (min, avg, max) = (276.502, 276.792, 276.928), stdev = 0.197
  CI (99.9%): [275.521, 278.062] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 68.93% complete, ETA 00:25:12
# Fork: 1 of 1
# Warmup Iteration   1: 1754.897 us/op
Iteration   1: 1662.918 us/op
Iteration   2: 1662.906 us/op
Iteration   3: 1665.516 us/op
Iteration   4: 1665.159 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  1664.124 ±(99.9%) 9.098 us/op [Average]
  (min, avg, max) = (1662.906, 1664.124, 1665.516), stdev = 1.408
  CI (99.9%): [1655.026, 1673.223] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 69.29% complete, ETA 00:24:54
# Fork: 1 of 1
# Warmup Iteration   1: 12000.146 us/op
Iteration   1: 11294.050 us/op
Iteration   2: 11267.298 us/op
Iteration   3: 11279.283 us/op
Iteration   4: 11267.816 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  11277.112 ±(99.9%) 81.253 us/op [Average]
  (min, avg, max) = (11267.298, 11277.112, 11294.050), stdev = 12.574
  CI (99.9%): [11195.858, 11358.365] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 69.64% complete, ETA 00:24:37
# Fork: 1 of 1
# Warmup Iteration   1: 11.604 us/op
Iteration   1: 11.135 us/op
Iteration   2: 11.109 us/op
Iteration   3: 11.081 us/op
Iteration   4: 11.106 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  11.108 ±(99.9%) 0.142 us/op [Average]
  (min, avg, max) = (11.081, 11.108, 11.135), stdev = 0.022
  CI (99.9%): [10.966, 11.250] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 70.00% complete, ETA 00:24:19
# Fork: 1 of 1
# Warmup Iteration   1: 256.324 us/op
Iteration   1: 249.809 us/op
Iteration   2: 249.795 us/op
Iteration   3: 250.001 us/op
Iteration   4: 249.766 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  249.843 ±(99.9%) 0.693 us/op [Average]
  (min, avg, max) = (249.766, 249.843, 250.001), stdev = 0.107
  CI (99.9%): [249.149, 250.536] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 70.36% complete, ETA 00:24:02
# Fork: 1 of 1
# Warmup Iteration   1: 1919.874 us/op
Iteration   1: 1847.176 us/op
Iteration   2: 1847.593 us/op
Iteration   3: 1843.616 us/op
Iteration   4: 1845.984 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  1846.092 ±(99.9%) 11.541 us/op [Average]
  (min, avg, max) = (1843.616, 1846.092, 1847.593), stdev = 1.786
  CI (99.9%): [1834.551, 1857.634] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 70.71% complete, ETA 00:23:45
# Fork: 1 of 1
# Warmup Iteration   1: 13386.491 us/op
Iteration   1: 13056.264 us/op
Iteration   2: 13055.728 us/op
Iteration   3: 12869.170 us/op
Iteration   4: 12820.911 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  12950.518 ±(99.9%) 797.271 us/op [Average]
  (min, avg, max) = (12820.911, 12950.518, 13056.264), stdev = 123.379
  CI (99.9%): [12153.247, 13747.790] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 71.07% complete, ETA 00:23:27
# Fork: 1 of 1
# Warmup Iteration   1: 87745.907 us/op
Iteration   1: 80590.835 us/op
Iteration   2: 81026.068 us/op
Iteration   3: 81014.797 us/op
Iteration   4: 81064.349 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  80924.012 ±(99.9%) 1441.852 us/op [Average]
  (min, avg, max) = (80590.835, 80924.012, 81064.349), stdev = 223.128
  CI (99.9%): [79482.160, 82365.864] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 71.43% complete, ETA 00:23:10
# Fork: 1 of 1
# Warmup Iteration   1: 16.729 us/op
Iteration   1: 15.958 us/op
Iteration   2: 15.884 us/op
Iteration   3: 15.805 us/op
Iteration   4: 15.892 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  15.885 ±(99.9%) 0.406 us/op [Average]
  (min, avg, max) = (15.805, 15.885, 15.958), stdev = 0.063
  CI (99.9%): [15.479, 16.291] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 71.79% complete, ETA 00:22:53
# Fork: 1 of 1
# Warmup Iteration   1: 504.236 us/op
Iteration   1: 480.441 us/op
Iteration   2: 488.743 us/op
Iteration   3: 489.646 us/op
Iteration   4: 488.038 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  486.717 ±(99.9%) 27.371 us/op [Average]
  (min, avg, max) = (480.441, 486.717, 489.646), stdev = 4.236
  CI (99.9%): [459.346, 514.088] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 72.14% complete, ETA 00:22:35
# Fork: 1 of 1
# Warmup Iteration   1: 1905.869 us/op
Iteration   1: 1734.990 us/op
Iteration   2: 1733.629 us/op
Iteration   3: 1741.951 us/op
Iteration   4: 1733.965 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  1736.134 ±(99.9%) 25.337 us/op [Average]
  (min, avg, max) = (1733.629, 1736.134, 1741.951), stdev = 3.921
  CI (99.9%): [1710.796, 1761.471] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 72.50% complete, ETA 00:22:18
# Fork: 1 of 1
# Warmup Iteration   1: 11341.892 us/op
Iteration   1: 10533.108 us/op
Iteration   2: 10501.068 us/op
Iteration   3: 10568.301 us/op
Iteration   4: 10541.241 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  10535.930 ±(99.9%) 178.901 us/op [Average]
  (min, avg, max) = (10501.068, 10535.930, 10568.301), stdev = 27.685
  CI (99.9%): [10357.028, 10714.831] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 72.86% complete, ETA 00:22:00
# Fork: 1 of 1
# Warmup Iteration   1: 87865.723 us/op
Iteration   1: 76832.992 us/op
Iteration   2: 76465.535 us/op
Iteration   3: 77076.437 us/op
Iteration   4: 75947.057 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  76580.505 ±(99.9%) 3174.875 us/op [Average]
  (min, avg, max) = (75947.057, 76580.505, 77076.437), stdev = 491.315
  CI (99.9%): [73405.630, 79755.380] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 73.21% complete, ETA 00:21:43
# Fork: 1 of 1
# Warmup Iteration   1: 3.749 us/op
Iteration   1: 3.644 us/op
Iteration   2: 3.657 us/op
Iteration   3: 3.681 us/op
Iteration   4: 3.660 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  3.661 ±(99.9%) 0.098 us/op [Average]
  (min, avg, max) = (3.644, 3.661, 3.681), stdev = 0.015
  CI (99.9%): [3.562, 3.759] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 73.57% complete, ETA 00:21:26
# Fork: 1 of 1
# Warmup Iteration   1: 100.409 us/op
Iteration   1: 97.918 us/op
Iteration   2: 98.253 us/op
Iteration   3: 98.526 us/op
Iteration   4: 97.348 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  98.011 ±(99.9%) 3.278 us/op [Average]
  (min, avg, max) = (97.348, 98.011, 98.526), stdev = 0.507
  CI (99.9%): [94.733, 101.289] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 73.93% complete, ETA 00:21:08
# Fork: 1 of 1
# Warmup Iteration   1: 744.710 us/op
Iteration   1: 729.100 us/op
Iteration   2: 728.437 us/op
Iteration   3: 727.804 us/op
Iteration   4: 727.624 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  728.241 ±(99.9%) 4.330 us/op [Average]
  (min, avg, max) = (727.624, 728.241, 729.100), stdev = 0.670
  CI (99.9%): [723.911, 732.572] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 74.29% complete, ETA 00:20:51
# Fork: 1 of 1
# Warmup Iteration   1: 4421.363 us/op
Iteration   1: 4369.242 us/op
Iteration   2: 4365.333 us/op
Iteration   3: 4366.648 us/op
Iteration   4: 4367.947 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  4367.293 ±(99.9%) 10.865 us/op [Average]
  (min, avg, max) = (4365.333, 4367.293, 4369.242), stdev = 1.681
  CI (99.9%): [4356.427, 4378.158] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 74.64% complete, ETA 00:20:33
# Fork: 1 of 1
# Warmup Iteration   1: 27144.502 us/op
Iteration   1: 26104.827 us/op
Iteration   2: 26122.206 us/op
Iteration   3: 26089.857 us/op
Iteration   4: 26082.417 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  26099.827 ±(99.9%) 113.673 us/op [Average]
  (min, avg, max) = (26082.417, 26099.827, 26122.206), stdev = 17.591
  CI (99.9%): [25986.153, 26213.500] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 75.00% complete, ETA 00:20:16
# Fork: 1 of 1
# Warmup Iteration   1: 5.088 us/op
Iteration   1: 4.822 us/op
Iteration   2: 4.643 us/op
Iteration   3: 4.632 us/op
Iteration   4: 4.628 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  4.681 ±(99.9%) 0.606 us/op [Average]
  (min, avg, max) = (4.628, 4.681, 4.822), stdev = 0.094
  CI (99.9%): [4.075, 5.287] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 75.36% complete, ETA 00:19:59
# Fork: 1 of 1
# Warmup Iteration   1: 46.231 us/op
Iteration   1: 43.439 us/op
Iteration   2: 43.236 us/op
Iteration   3: 43.162 us/op
Iteration   4: 43.294 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  43.283 ±(99.9%) 0.759 us/op [Average]
  (min, avg, max) = (43.162, 43.283, 43.439), stdev = 0.118
  CI (99.9%): [42.524, 44.042] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 75.71% complete, ETA 00:19:41
# Fork: 1 of 1
# Warmup Iteration   1: 287.642 us/op
Iteration   1: 270.383 us/op
Iteration   2: 268.640 us/op
Iteration   3: 268.679 us/op
Iteration   4: 268.671 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  269.093 ±(99.9%) 5.556 us/op [Average]
  (min, avg, max) = (268.640, 269.093, 270.383), stdev = 0.860
  CI (99.9%): [263.538, 274.649] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 76.07% complete, ETA 00:19:24
# Fork: 1 of 1
# Warmup Iteration   1: 1368.268 us/op
Iteration   1: 1316.516 us/op
Iteration   2: 1293.932 us/op
Iteration   3: 1297.186 us/op
Iteration   4: 1293.564 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  1300.299 ±(99.9%) 70.646 us/op [Average]
  (min, avg, max) = (1293.564, 1300.299, 1316.516), stdev = 10.933
  CI (99.9%): [1229.653, 1370.946] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 76.43% complete, ETA 00:19:07
# Fork: 1 of 1
# Warmup Iteration   1: 10213.345 us/op
Iteration   1: 9570.443 us/op
Iteration   2: 9571.685 us/op
Iteration   3: 9530.398 us/op
Iteration   4: 9546.625 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  9554.788 ±(99.9%) 128.813 us/op [Average]
  (min, avg, max) = (9530.398, 9554.788, 9571.685), stdev = 19.934
  CI (99.9%): [9425.975, 9683.600] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 76.79% complete, ETA 00:18:49
# Fork: 1 of 1
# Warmup Iteration   1: 11.978 us/op
Iteration   1: 12.410 us/op
Iteration   2: 11.513 us/op
Iteration   3: 11.525 us/op
Iteration   4: 11.488 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  11.734 ±(99.9%) 2.912 us/op [Average]
  (min, avg, max) = (11.488, 11.734, 12.410), stdev = 0.451
  CI (99.9%): [8.822, 14.646] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 77.14% complete, ETA 00:18:32
# Fork: 1 of 1
# Warmup Iteration   1: 238.947 us/op
Iteration   1: 229.607 us/op
Iteration   2: 226.714 us/op
Iteration   3: 222.041 us/op
Iteration   4: 226.053 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  226.104 ±(99.9%) 20.146 us/op [Average]
  (min, avg, max) = (222.041, 226.104, 229.607), stdev = 3.118
  CI (99.9%): [205.958, 246.250] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 77.50% complete, ETA 00:18:14
# Fork: 1 of 1
# Warmup Iteration   1: 863.332 us/op
Iteration   1: 767.708 us/op
Iteration   2: 772.685 us/op
Iteration   3: 756.123 us/op
Iteration   4: 751.179 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  761.924 ±(99.9%) 64.443 us/op [Average]
  (min, avg, max) = (751.179, 761.924, 772.685), stdev = 9.973
  CI (99.9%): [697.481, 826.367] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 77.86% complete, ETA 00:17:57
# Fork: 1 of 1
# Warmup Iteration   1: 4910.410 us/op
Iteration   1: 4168.392 us/op
Iteration   2: 4168.593 us/op
Iteration   3: 4183.596 us/op
Iteration   4: 4151.229 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  4167.953 ±(99.9%) 85.485 us/op [Average]
  (min, avg, max) = (4151.229, 4167.953, 4183.596), stdev = 13.229
  CI (99.9%): [4082.467, 4253.438] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 78.21% complete, ETA 00:17:40
# Fork: 1 of 1
# Warmup Iteration   1: 39143.095 us/op
Iteration   1: 31647.470 us/op
Iteration   2: 31422.895 us/op
Iteration   3: 31470.785 us/op
Iteration   4: 31290.432 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testParallelSort":
  31457.895 ±(99.9%) 953.908 us/op [Average]
  (min, avg, max) = (31290.432, 31457.895, 31647.470), stdev = 147.618
  CI (99.9%): [30503.988, 32411.803] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 78.57% complete, ETA 00:17:22
# Fork: 1 of 1
# Warmup Iteration   1: 16.517 us/op
Iteration   1: 15.829 us/op
Iteration   2: 15.765 us/op
Iteration   3: 15.756 us/op
Iteration   4: 15.749 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  15.775 ±(99.9%) 0.239 us/op [Average]
  (min, avg, max) = (15.749, 15.775, 15.829), stdev = 0.037
  CI (99.9%): [15.536, 16.014] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 78.93% complete, ETA 00:17:05
# Fork: 1 of 1
# Warmup Iteration   1: 555.114 us/op
Iteration   1: 545.574 us/op
Iteration   2: 545.570 us/op
Iteration   3: 545.469 us/op
Iteration   4: 544.293 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  545.227 ±(99.9%) 4.033 us/op [Average]
  (min, avg, max) = (544.293, 545.227, 545.574), stdev = 0.624
  CI (99.9%): [541.193, 549.260] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 79.29% complete, ETA 00:16:47
# Fork: 1 of 1
# Warmup Iteration   1: 4952.220 us/op
Iteration   1: 4813.640 us/op
Iteration   2: 4818.465 us/op
Iteration   3: 4815.687 us/op
Iteration   4: 4809.592 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  4814.346 ±(99.9%) 24.139 us/op [Average]
  (min, avg, max) = (4809.592, 4814.346, 4818.465), stdev = 3.736
  CI (99.9%): [4790.207, 4838.485] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 79.64% complete, ETA 00:16:30
# Fork: 1 of 1
# Warmup Iteration   1: 33857.949 us/op
Iteration   1: 32704.662 us/op
Iteration   2: 32705.062 us/op
Iteration   3: 32694.587 us/op
Iteration   4: 32560.858 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  32666.292 ±(99.9%) 455.288 us/op [Average]
  (min, avg, max) = (32560.858, 32666.292, 32705.062), stdev = 70.456
  CI (99.9%): [32211.004, 33121.581] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 80.00% complete, ETA 00:16:13
# Fork: 1 of 1
# Warmup Iteration   1: 263825.490 us/op
Iteration   1: 256364.343 us/op
Iteration   2: 255277.434 us/op
Iteration   3: 255275.797 us/op
Iteration   4: 255309.551 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  255556.781 ±(99.9%) 3480.419 us/op [Average]
  (min, avg, max) = (255275.797, 255556.781, 256364.343), stdev = 538.599
  CI (99.9%): [252076.362, 259037.200] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 80.36% complete, ETA 00:15:56
# Fork: 1 of 1
# Warmup Iteration   1: 3.805 us/op
Iteration   1: 3.740 us/op
Iteration   2: 3.727 us/op
Iteration   3: 3.745 us/op
Iteration   4: 3.732 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  3.736 ±(99.9%) 0.050 us/op [Average]
  (min, avg, max) = (3.727, 3.736, 3.745), stdev = 0.008
  CI (99.9%): [3.686, 3.787] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 80.71% complete, ETA 00:15:38
# Fork: 1 of 1
# Warmup Iteration   1: 104.230 us/op
Iteration   1: 102.811 us/op
Iteration   2: 102.943 us/op
Iteration   3: 102.701 us/op
Iteration   4: 102.379 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  102.708 ±(99.9%) 1.558 us/op [Average]
  (min, avg, max) = (102.379, 102.708, 102.943), stdev = 0.241
  CI (99.9%): [101.150, 104.267] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 81.07% complete, ETA 00:15:21
# Fork: 1 of 1
# Warmup Iteration   1: 743.759 us/op
Iteration   1: 732.653 us/op
Iteration   2: 732.523 us/op
Iteration   3: 732.476 us/op
Iteration   4: 734.689 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  733.085 ±(99.9%) 6.925 us/op [Average]
  (min, avg, max) = (732.476, 733.085, 734.689), stdev = 1.072
  CI (99.9%): [726.160, 740.010] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 81.43% complete, ETA 00:15:03
# Fork: 1 of 1
# Warmup Iteration   1: 4320.323 us/op
Iteration   1: 4245.269 us/op
Iteration   2: 4245.901 us/op
Iteration   3: 4247.171 us/op
Iteration   4: 4245.307 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  4245.912 ±(99.9%) 5.737 us/op [Average]
  (min, avg, max) = (4245.269, 4245.912, 4247.171), stdev = 0.888
  CI (99.9%): [4240.175, 4251.649] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 81.79% complete, ETA 00:14:46
# Fork: 1 of 1
# Warmup Iteration   1: 26946.766 us/op
Iteration   1: 26411.981 us/op
Iteration   2: 26443.076 us/op
Iteration   3: 26419.963 us/op
Iteration   4: 26417.418 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  26423.109 ±(99.9%) 88.665 us/op [Average]
  (min, avg, max) = (26411.981, 26423.109, 26443.076), stdev = 13.721
  CI (99.9%): [26334.445, 26511.774] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 82.14% complete, ETA 00:14:29
# Fork: 1 of 1
# Warmup Iteration   1: 5.289 us/op
Iteration   1: 5.023 us/op
Iteration   2: 5.011 us/op
Iteration   3: 5.010 us/op
Iteration   4: 5.012 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  5.014 ±(99.9%) 0.041 us/op [Average]
  (min, avg, max) = (5.010, 5.014, 5.023), stdev = 0.006
  CI (99.9%): [4.973, 5.055] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 82.50% complete, ETA 00:14:11
# Fork: 1 of 1
# Warmup Iteration   1: 42.914 us/op
Iteration   1: 40.552 us/op
Iteration   2: 40.679 us/op
Iteration   3: 40.576 us/op
Iteration   4: 40.504 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  40.578 ±(99.9%) 0.477 us/op [Average]
  (min, avg, max) = (40.504, 40.578, 40.679), stdev = 0.074
  CI (99.9%): [40.101, 41.054] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 82.86% complete, ETA 00:13:54
# Fork: 1 of 1
# Warmup Iteration   1: 301.260 us/op
Iteration   1: 284.797 us/op
Iteration   2: 285.034 us/op
Iteration   3: 284.283 us/op
Iteration   4: 284.257 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  284.593 ±(99.9%) 2.488 us/op [Average]
  (min, avg, max) = (284.257, 284.593, 285.034), stdev = 0.385
  CI (99.9%): [282.105, 287.081] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 83.21% complete, ETA 00:13:36
# Fork: 1 of 1
# Warmup Iteration   1: 1865.810 us/op
Iteration   1: 1795.277 us/op
Iteration   2: 1796.883 us/op
Iteration   3: 1798.062 us/op
Iteration   4: 1797.126 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  1796.837 ±(99.9%) 7.481 us/op [Average]
  (min, avg, max) = (1795.277, 1796.837, 1798.062), stdev = 1.158
  CI (99.9%): [1789.356, 1804.318] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 83.57% complete, ETA 00:13:19
# Fork: 1 of 1
# Warmup Iteration   1: 13364.474 us/op
Iteration   1: 12718.665 us/op
Iteration   2: 12730.918 us/op
Iteration   3: 12713.637 us/op
Iteration   4: 12692.071 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  12713.823 ±(99.9%) 104.787 us/op [Average]
  (min, avg, max) = (12692.071, 12713.823, 12730.918), stdev = 16.216
  CI (99.9%): [12609.035, 12818.610] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 83.93% complete, ETA 00:13:02
# Fork: 1 of 1
# Warmup Iteration   1: 12.176 us/op
Iteration   1: 11.232 us/op
Iteration   2: 11.191 us/op
Iteration   3: 11.215 us/op
Iteration   4: 11.161 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  11.200 ±(99.9%) 0.200 us/op [Average]
  (min, avg, max) = (11.161, 11.200, 11.232), stdev = 0.031
  CI (99.9%): [11.000, 11.399] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 84.29% complete, ETA 00:12:44
# Fork: 1 of 1
# Warmup Iteration   1: 245.135 us/op
Iteration   1: 233.495 us/op
Iteration   2: 233.440 us/op
Iteration   3: 233.384 us/op
Iteration   4: 233.421 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  233.435 ±(99.9%) 0.300 us/op [Average]
  (min, avg, max) = (233.384, 233.435, 233.495), stdev = 0.046
  CI (99.9%): [233.135, 233.735] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 84.64% complete, ETA 00:12:27
# Fork: 1 of 1
# Warmup Iteration   1: 1963.859 us/op
Iteration   1: 1885.092 us/op
Iteration   2: 1882.713 us/op
Iteration   3: 1889.682 us/op
Iteration   4: 1889.651 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  1886.785 ±(99.9%) 22.401 us/op [Average]
  (min, avg, max) = (1882.713, 1886.785, 1889.682), stdev = 3.467
  CI (99.9%): [1864.384, 1909.185] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 85.00% complete, ETA 00:12:09
# Fork: 1 of 1
# Warmup Iteration   1: 12728.766 us/op
Iteration   1: 12016.482 us/op
Iteration   2: 11876.012 us/op
Iteration   3: 11864.060 us/op
Iteration   4: 11916.312 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  11918.217 ±(99.9%) 447.293 us/op [Average]
  (min, avg, max) = (11864.060, 11918.217, 12016.482), stdev = 69.219
  CI (99.9%): [11470.924, 12365.509] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Long.testSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 85.36% complete, ETA 00:11:52
# Fork: 1 of 1
# Warmup Iteration   1: 84953.808 us/op
Iteration   1: 80868.239 us/op
Iteration   2: 80869.397 us/op
Iteration   3: 79661.443 us/op
Iteration   4: 79574.601 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Long.testSort":
  80243.420 ±(99.9%) 4672.132 us/op [Average]
  (min, avg, max) = (79574.601, 80243.420, 80869.397), stdev = 723.018
  CI (99.9%): [75571.288, 84915.552] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 85.71% complete, ETA 00:11:35
# Fork: 1 of 1
# Warmup Iteration   1: 15.645 us/op
Iteration   1: 15.427 us/op
Iteration   2: 15.357 us/op
Iteration   3: 15.437 us/op
Iteration   4: 15.307 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  15.382 ±(99.9%) 0.396 us/op [Average]
  (min, avg, max) = (15.307, 15.382, 15.437), stdev = 0.061
  CI (99.9%): [14.986, 15.778] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 86.07% complete, ETA 00:11:17
# Fork: 1 of 1
# Warmup Iteration   1: 194.376 us/op
Iteration   1: 185.186 us/op
Iteration   2: 184.973 us/op
Iteration   3: 185.066 us/op
Iteration   4: 185.025 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  185.062 ±(99.9%) 0.585 us/op [Average]
  (min, avg, max) = (184.973, 185.062, 185.186), stdev = 0.090
  CI (99.9%): [184.478, 185.647] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 86.43% complete, ETA 00:11:00
# Fork: 1 of 1
# Warmup Iteration   1: 889.508 us/op
Iteration   1: 842.192 us/op
Iteration   2: 851.060 us/op
Iteration   3: 855.409 us/op
Iteration   4: 857.431 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  851.523 ±(99.9%) 43.715 us/op [Average]
  (min, avg, max) = (842.192, 851.523, 857.431), stdev = 6.765
  CI (99.9%): [807.808, 895.238] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 86.79% complete, ETA 00:10:43
# Fork: 1 of 1
# Warmup Iteration   1: 2016.143 us/op
Iteration   1: 2013.334 us/op
Iteration   2: 1995.529 us/op
Iteration   3: 1911.954 us/op
Iteration   4: 1908.048 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  1957.216 ±(99.9%) 355.572 us/op [Average]
  (min, avg, max) = (1908.048, 1957.216, 2013.334), stdev = 55.025
  CI (99.9%): [1601.645, 2312.788] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 87.14% complete, ETA 00:10:25
# Fork: 1 of 1
# Warmup Iteration   1: 5647.897 us/op
Iteration   1: 5433.757 us/op
Iteration   2: 5269.773 us/op
Iteration   3: 5375.475 us/op
Iteration   4: 5202.975 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  5320.495 ±(99.9%) 669.834 us/op [Average]
  (min, avg, max) = (5202.975, 5320.495, 5433.757), stdev = 103.658
  CI (99.9%): [4650.660, 5990.329] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 87.50% complete, ETA 00:10:08
# Fork: 1 of 1
# Warmup Iteration   1: 3.459 us/op
Iteration   1: 3.371 us/op
Iteration   2: 3.313 us/op
Iteration   3: 3.352 us/op
Iteration   4: 3.385 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  3.355 ±(99.9%) 0.203 us/op [Average]
  (min, avg, max) = (3.313, 3.355, 3.385), stdev = 0.031
  CI (99.9%): [3.152, 3.558] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 87.86% complete, ETA 00:09:50
# Fork: 1 of 1
# Warmup Iteration   1: 67.600 us/op
Iteration   1: 57.786 us/op
Iteration   2: 57.582 us/op
Iteration   3: 57.663 us/op
Iteration   4: 57.819 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  57.713 ±(99.9%) 0.711 us/op [Average]
  (min, avg, max) = (57.582, 57.713, 57.819), stdev = 0.110
  CI (99.9%): [57.001, 58.424] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 88.21% complete, ETA 00:09:33
# Fork: 1 of 1
# Warmup Iteration   1: 138.178 us/op
Iteration   1: 108.466 us/op
Iteration   2: 106.407 us/op
Iteration   3: 107.138 us/op
Iteration   4: 107.407 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  107.354 ±(99.9%) 5.511 us/op [Average]
  (min, avg, max) = (106.407, 107.354, 108.466), stdev = 0.853
  CI (99.9%): [101.843, 112.866] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 88.57% complete, ETA 00:09:16
# Fork: 1 of 1
# Warmup Iteration   1: 597.845 us/op
Iteration   1: 607.241 us/op
Iteration   2: 525.682 us/op
Iteration   3: 504.059 us/op
Iteration   4: 505.988 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  535.742 ±(99.9%) 314.420 us/op [Average]
  (min, avg, max) = (504.059, 535.742, 607.241), stdev = 48.657
  CI (99.9%): [221.323, 850.162] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 88.93% complete, ETA 00:08:58
# Fork: 1 of 1
# Warmup Iteration   1: 2870.796 us/op
Iteration   1: 2615.660 us/op
Iteration   2: 2658.412 us/op
Iteration   3: 2557.427 us/op
Iteration   4: 2569.325 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  2600.206 ±(99.9%) 298.711 us/op [Average]
  (min, avg, max) = (2557.427, 2600.206, 2658.412), stdev = 46.226
  CI (99.9%): [2301.495, 2898.917] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 89.29% complete, ETA 00:08:41
# Fork: 1 of 1
# Warmup Iteration   1: 13.485 us/op
Iteration   1: 13.228 us/op
Iteration   2: 13.292 us/op
Iteration   3: 13.258 us/op
Iteration   4: 13.309 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  13.272 ±(99.9%) 0.233 us/op [Average]
  (min, avg, max) = (13.228, 13.272, 13.309), stdev = 0.036
  CI (99.9%): [13.039, 13.505] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 89.64% complete, ETA 00:08:24
# Fork: 1 of 1
# Warmup Iteration   1: 66.075 us/op
Iteration   1: 59.611 us/op
Iteration   2: 60.941 us/op
Iteration   3: 63.131 us/op
Iteration   4: 63.221 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  61.726 ±(99.9%) 11.376 us/op [Average]
  (min, avg, max) = (59.611, 61.726, 63.221), stdev = 1.760
  CI (99.9%): [50.350, 73.102] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 90.00% complete, ETA 00:08:06
# Fork: 1 of 1
# Warmup Iteration   1: 196.409 us/op
Iteration   1: 196.270 us/op
Iteration   2: 196.464 us/op
Iteration   3: 196.315 us/op
Iteration   4: 195.712 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  196.190 ±(99.9%) 2.129 us/op [Average]
  (min, avg, max) = (195.712, 196.190, 196.464), stdev = 0.330
  CI (99.9%): [194.061, 198.320] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 90.36% complete, ETA 00:07:49
# Fork: 1 of 1
# Warmup Iteration   1: 754.237 us/op
Iteration   1: 693.462 us/op
Iteration   2: 694.454 us/op
Iteration   3: 678.902 us/op
Iteration   4: 676.484 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  685.826 ±(99.9%) 61.071 us/op [Average]
  (min, avg, max) = (676.484, 685.826, 694.454), stdev = 9.451
  CI (99.9%): [624.754, 746.897] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 90.71% complete, ETA 00:07:31
# Fork: 1 of 1
# Warmup Iteration   1: 2734.323 us/op
Iteration   1: 2702.315 us/op
Iteration   2: 2722.704 us/op
Iteration   3: 2707.419 us/op
Iteration   4: 2704.160 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  2709.150 ±(99.9%) 59.964 us/op [Average]
  (min, avg, max) = (2702.315, 2709.150, 2722.704), stdev = 9.279
  CI (99.9%): [2649.186, 2769.113] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 91.07% complete, ETA 00:07:14
# Fork: 1 of 1
# Warmup Iteration   1: 9.926 us/op
Iteration   1: 9.638 us/op
Iteration   2: 9.685 us/op
Iteration   3: 9.657 us/op
Iteration   4: 9.662 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  9.661 ±(99.9%) 0.123 us/op [Average]
  (min, avg, max) = (9.638, 9.661, 9.685), stdev = 0.019
  CI (99.9%): [9.537, 9.784] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 91.43% complete, ETA 00:06:57
# Fork: 1 of 1
# Warmup Iteration   1: 64.210 us/op
Iteration   1: 59.120 us/op
Iteration   2: 58.898 us/op
Iteration   3: 59.406 us/op
Iteration   4: 59.546 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  59.242 ±(99.9%) 1.875 us/op [Average]
  (min, avg, max) = (58.898, 59.242, 59.546), stdev = 0.290
  CI (99.9%): [57.368, 61.117] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 91.79% complete, ETA 00:06:39
# Fork: 1 of 1
# Warmup Iteration   1: 283.871 us/op
Iteration   1: 246.796 us/op
Iteration   2: 245.074 us/op
Iteration   3: 245.477 us/op
Iteration   4: 247.522 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  246.217 ±(99.9%) 7.360 us/op [Average]
  (min, avg, max) = (245.074, 246.217, 247.522), stdev = 1.139
  CI (99.9%): [238.858, 253.577] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 92.14% complete, ETA 00:06:22
# Fork: 1 of 1
# Warmup Iteration   1: 766.663 us/op
Iteration   1: 789.729 us/op
Iteration   2: 763.801 us/op
Iteration   3: 686.008 us/op
Iteration   4: 686.903 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  731.610 ±(99.9%) 343.809 us/op [Average]
  (min, avg, max) = (686.008, 731.610, 789.729), stdev = 53.205
  CI (99.9%): [387.802, 1075.419] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 92.50% complete, ETA 00:06:04
# Fork: 1 of 1
# Warmup Iteration   1: 2797.601 us/op
Iteration   1: 2527.212 us/op
Iteration   2: 2567.568 us/op
Iteration   3: 2486.006 us/op
Iteration   4: 2484.172 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testParallelSort":
  2516.240 ±(99.9%) 255.702 us/op [Average]
  (min, avg, max) = (2484.172, 2516.240, 2567.568), stdev = 39.570
  CI (99.9%): [2260.537, 2771.942] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = RANDOM, size = 800)

# Run progress: 92.86% complete, ETA 00:05:47
# Fork: 1 of 1
# Warmup Iteration   1: 15.737 us/op
Iteration   1: 15.357 us/op
Iteration   2: 15.397 us/op
Iteration   3: 15.331 us/op
Iteration   4: 15.425 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  15.377 ±(99.9%) 0.269 us/op [Average]
  (min, avg, max) = (15.331, 15.377, 15.425), stdev = 0.042
  CI (99.9%): [15.108, 15.646] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = RANDOM, size = 7000)

# Run progress: 93.21% complete, ETA 00:05:30
# Fork: 1 of 1
# Warmup Iteration   1: 194.524 us/op
Iteration   1: 187.396 us/op
Iteration   2: 187.161 us/op
Iteration   3: 186.954 us/op
Iteration   4: 187.045 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  187.139 ±(99.9%) 1.235 us/op [Average]
  (min, avg, max) = (186.954, 187.139, 187.396), stdev = 0.191
  CI (99.9%): [185.904, 188.374] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = RANDOM, size = 50000)

# Run progress: 93.57% complete, ETA 00:05:12
# Fork: 1 of 1
# Warmup Iteration   1: 892.275 us/op
Iteration   1: 843.117 us/op
Iteration   2: 849.324 us/op
Iteration   3: 857.133 us/op
Iteration   4: 858.045 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  851.905 ±(99.9%) 45.528 us/op [Average]
  (min, avg, max) = (843.117, 851.905, 858.045), stdev = 7.046
  CI (99.9%): [806.376, 897.433] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = RANDOM, size = 300000)

# Run progress: 93.93% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 1932.052 us/op
Iteration   1: 1924.911 us/op
Iteration   2: 1924.907 us/op
Iteration   3: 1844.354 us/op
Iteration   4: 1820.885 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  1878.764 ±(99.9%) 349.838 us/op [Average]
  (min, avg, max) = (1820.885, 1878.764, 1924.911), stdev = 54.138
  CI (99.9%): [1528.926, 2228.602] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = RANDOM, size = 2000000)

# Run progress: 94.29% complete, ETA 00:04:38
# Fork: 1 of 1
# Warmup Iteration   1: 5679.204 us/op
Iteration   1: 5444.590 us/op
Iteration   2: 5259.976 us/op
Iteration   3: 5407.721 us/op
Iteration   4: 5243.490 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  5338.944 ±(99.9%) 659.404 us/op [Average]
  (min, avg, max) = (5243.490, 5338.944, 5444.590), stdev = 102.044
  CI (99.9%): [4679.540, 5998.348] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = REPEATED, size = 800)

# Run progress: 94.64% complete, ETA 00:04:20
# Fork: 1 of 1
# Warmup Iteration   1: 4.343 us/op
Iteration   1: 4.214 us/op
Iteration   2: 4.216 us/op
Iteration   3: 4.220 us/op
Iteration   4: 4.226 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  4.219 ±(99.9%) 0.035 us/op [Average]
  (min, avg, max) = (4.214, 4.219, 4.226), stdev = 0.005
  CI (99.9%): [4.184, 4.254] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = REPEATED, size = 7000)

# Run progress: 95.00% complete, ETA 00:04:03
# Fork: 1 of 1
# Warmup Iteration   1: 63.379 us/op
Iteration   1: 58.025 us/op
Iteration   2: 57.922 us/op
Iteration   3: 58.046 us/op
Iteration   4: 58.296 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  58.072 ±(99.9%) 1.026 us/op [Average]
  (min, avg, max) = (57.922, 58.072, 58.296), stdev = 0.159
  CI (99.9%): [57.047, 59.098] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = REPEATED, size = 50000)

# Run progress: 95.36% complete, ETA 00:03:45
# Fork: 1 of 1
# Warmup Iteration   1: 138.479 us/op
Iteration   1: 107.975 us/op
Iteration   2: 107.146 us/op
Iteration   3: 107.180 us/op
Iteration   4: 107.378 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  107.420 ±(99.9%) 2.481 us/op [Average]
  (min, avg, max) = (107.146, 107.420, 107.975), stdev = 0.384
  CI (99.9%): [104.939, 109.900] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = REPEATED, size = 300000)

# Run progress: 95.71% complete, ETA 00:03:28
# Fork: 1 of 1
# Warmup Iteration   1: 599.069 us/op
Iteration   1: 606.847 us/op
Iteration   2: 523.586 us/op
Iteration   3: 503.357 us/op
Iteration   4: 504.745 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  534.634 ±(99.9%) 316.756 us/op [Average]
  (min, avg, max) = (503.357, 534.634, 606.847), stdev = 49.018
  CI (99.9%): [217.878, 851.389] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = REPEATED, size = 2000000)

# Run progress: 96.07% complete, ETA 00:03:11
# Fork: 1 of 1
# Warmup Iteration   1: 2878.085 us/op
Iteration   1: 2603.631 us/op
Iteration   2: 2665.217 us/op
Iteration   3: 2564.821 us/op
Iteration   4: 2573.733 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  2601.850 ±(99.9%) 293.297 us/op [Average]
  (min, avg, max) = (2564.821, 2601.850, 2665.217), stdev = 45.388
  CI (99.9%): [2308.553, 2895.148] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = STAGGER, size = 800)

# Run progress: 96.43% complete, ETA 00:02:53
# Fork: 1 of 1
# Warmup Iteration   1: 13.362 us/op
Iteration   1: 13.228 us/op
Iteration   2: 13.169 us/op
Iteration   3: 13.190 us/op
Iteration   4: 13.227 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  13.203 ±(99.9%) 0.189 us/op [Average]
  (min, avg, max) = (13.169, 13.203, 13.228), stdev = 0.029
  CI (99.9%): [13.015, 13.392] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = STAGGER, size = 7000)

# Run progress: 96.79% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: 64.489 us/op
Iteration   1: 59.927 us/op
Iteration   2: 61.371 us/op
Iteration   3: 64.285 us/op
Iteration   4: 64.296 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  62.470 ±(99.9%) 14.110 us/op [Average]
  (min, avg, max) = (59.927, 62.470, 64.296), stdev = 2.184
  CI (99.9%): [48.360, 76.580] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = STAGGER, size = 50000)

# Run progress: 97.14% complete, ETA 00:02:19
# Fork: 1 of 1
# Warmup Iteration   1: 203.265 us/op
Iteration   1: 191.544 us/op
Iteration   2: 191.643 us/op
Iteration   3: 191.512 us/op
Iteration   4: 191.247 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  191.487 ±(99.9%) 1.092 us/op [Average]
  (min, avg, max) = (191.247, 191.487, 191.643), stdev = 0.169
  CI (99.9%): [190.394, 192.579] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = STAGGER, size = 300000)

# Run progress: 97.50% complete, ETA 00:02:01
# Fork: 1 of 1
# Warmup Iteration   1: 751.806 us/op
Iteration   1: 691.544 us/op
Iteration   2: 690.416 us/op
Iteration   3: 676.893 us/op
Iteration   4: 677.705 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  684.139 ±(99.9%) 51.172 us/op [Average]
  (min, avg, max) = (676.893, 684.139, 691.544), stdev = 7.919
  CI (99.9%): [632.967, 735.311] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = STAGGER, size = 2000000)

# Run progress: 97.86% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: 2739.271 us/op
Iteration   1: 2681.483 us/op
Iteration   2: 2656.401 us/op
Iteration   3: 2595.112 us/op
Iteration   4: 2690.966 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  2655.990 ±(99.9%) 278.678 us/op [Average]
  (min, avg, max) = (2595.112, 2655.990, 2690.966), stdev = 43.126
  CI (99.9%): [2377.312, 2934.668] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = SHUFFLE, size = 800)

# Run progress: 98.21% complete, ETA 00:01:26
# Fork: 1 of 1
# Warmup Iteration   1: 9.835 us/op
Iteration   1: 9.639 us/op
Iteration   2: 9.634 us/op
Iteration   3: 9.622 us/op
Iteration   4: 9.592 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  9.622 ±(99.9%) 0.136 us/op [Average]
  (min, avg, max) = (9.592, 9.622, 9.639), stdev = 0.021
  CI (99.9%): [9.486, 9.758] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = SHUFFLE, size = 7000)

# Run progress: 98.57% complete, ETA 00:01:09
# Fork: 1 of 1
# Warmup Iteration   1: 64.201 us/op
Iteration   1: 59.012 us/op
Iteration   2: 58.779 us/op
Iteration   3: 59.218 us/op
Iteration   4: 59.664 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  59.168 ±(99.9%) 2.431 us/op [Average]
  (min, avg, max) = (58.779, 59.168, 59.664), stdev = 0.376
  CI (99.9%): [56.737, 61.600] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = SHUFFLE, size = 50000)

# Run progress: 98.93% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: 281.506 us/op
Iteration   1: 247.309 us/op
Iteration   2: 248.825 us/op
Iteration   3: 245.312 us/op
Iteration   4: 252.116 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  248.391 ±(99.9%) 18.547 us/op [Average]
  (min, avg, max) = (245.312, 248.391, 252.116), stdev = 2.870
  CI (99.9%): [229.843, 266.938] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = SHUFFLE, size = 300000)

# Run progress: 99.29% complete, ETA 00:00:34
# Fork: 1 of 1
# Warmup Iteration   1: 782.941 us/op
Iteration   1: 792.800 us/op
Iteration   2: 720.521 us/op
Iteration   3: 688.747 us/op
Iteration   4: 692.211 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  723.570 ±(99.9%) 312.101 us/op [Average]
  (min, avg, max) = (688.747, 723.570, 792.800), stdev = 48.298
  CI (99.9%): [411.469, 1035.671] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Short.testSort
# Parameters: (builder = SHUFFLE, size = 2000000)

# Run progress: 99.64% complete, ETA 00:00:17
# Fork: 1 of 1
# Warmup Iteration   1: 2821.821 us/op
Iteration   1: 2532.431 us/op
Iteration   2: 2574.440 us/op
Iteration   3: 2489.742 us/op
Iteration   4: 2486.479 us/op


Result "org.openjdk.bench.java.util.ArraysSort.Short.testSort":
  2520.773 ±(99.9%) 267.869 us/op [Average]
  (min, avg, max) = (2486.479, 2520.773, 2574.440), stdev = 41.453
  CI (99.9%): [2252.905, 2788.642] (assumes normal distribution)


# Run complete. Total time: 01:21:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           (builder)   (size)  Mode  Cnt       Score      Error  Units
ArraysSort.Byte.testParallelSort       RANDOM      800  avgt    4       3.378 ±    0.998  us/op
ArraysSort.Byte.testParallelSort       RANDOM     7000  avgt    4      10.168 ±   13.107  us/op
ArraysSort.Byte.testParallelSort       RANDOM    50000  avgt    4      62.990 ±    3.240  us/op
ArraysSort.Byte.testParallelSort       RANDOM   300000  avgt    4     319.839 ±    2.166  us/op
ArraysSort.Byte.testParallelSort       RANDOM  2000000  avgt    4    1844.617 ±   23.662  us/op
ArraysSort.Byte.testParallelSort     REPEATED      800  avgt    4       2.536 ±    0.174  us/op
ArraysSort.Byte.testParallelSort     REPEATED     7000  avgt    4       9.101 ±    5.383  us/op
ArraysSort.Byte.testParallelSort     REPEATED    50000  avgt    4      55.483 ±    2.918  us/op
ArraysSort.Byte.testParallelSort     REPEATED   300000  avgt    4     367.148 ±    3.023  us/op
ArraysSort.Byte.testParallelSort     REPEATED  2000000  avgt    4    2247.701 ±   68.150  us/op
ArraysSort.Byte.testParallelSort      STAGGER      800  avgt    4       2.991 ±    0.527  us/op
ArraysSort.Byte.testParallelSort      STAGGER     7000  avgt    4       9.646 ±    2.226  us/op
ArraysSort.Byte.testParallelSort      STAGGER    50000  avgt    4      56.620 ±    1.210  us/op
ArraysSort.Byte.testParallelSort      STAGGER   300000  avgt    4     283.358 ±  108.230  us/op
ArraysSort.Byte.testParallelSort      STAGGER  2000000  avgt    4    1754.625 ±   18.806  us/op
ArraysSort.Byte.testParallelSort      SHUFFLE      800  avgt    4       3.076 ±    0.422  us/op
ArraysSort.Byte.testParallelSort      SHUFFLE     7000  avgt    4       9.642 ±   12.073  us/op
ArraysSort.Byte.testParallelSort      SHUFFLE    50000  avgt    4      58.448 ±    5.499  us/op
ArraysSort.Byte.testParallelSort      SHUFFLE   300000  avgt    4     306.365 ±    1.035  us/op
ArraysSort.Byte.testParallelSort      SHUFFLE  2000000  avgt    4    1757.405 ±   33.064  us/op
ArraysSort.Byte.testSort               RANDOM      800  avgt    4       3.382 ±    0.986  us/op
ArraysSort.Byte.testSort               RANDOM     7000  avgt    4      10.143 ±   13.188  us/op
ArraysSort.Byte.testSort               RANDOM    50000  avgt    4      62.977 ±    3.500  us/op
ArraysSort.Byte.testSort               RANDOM   300000  avgt    4     321.215 ±    2.030  us/op
ArraysSort.Byte.testSort               RANDOM  2000000  avgt    4    1843.137 ±   15.720  us/op
ArraysSort.Byte.testSort             REPEATED      800  avgt    4       2.536 ±    0.257  us/op
ArraysSort.Byte.testSort             REPEATED     7000  avgt    4       9.094 ±    5.332  us/op
ArraysSort.Byte.testSort             REPEATED    50000  avgt    4      55.400 ±    1.405  us/op
ArraysSort.Byte.testSort             REPEATED   300000  avgt    4     347.719 ±    3.331  us/op
ArraysSort.Byte.testSort             REPEATED  2000000  avgt    4    2241.150 ±    8.907  us/op
ArraysSort.Byte.testSort              STAGGER      800  avgt    4       2.988 ±    0.546  us/op
ArraysSort.Byte.testSort              STAGGER     7000  avgt    4       9.636 ±    2.398  us/op
ArraysSort.Byte.testSort              STAGGER    50000  avgt    4      55.308 ±    1.082  us/op
ArraysSort.Byte.testSort              STAGGER   300000  avgt    4     282.965 ±  105.665  us/op
ArraysSort.Byte.testSort              STAGGER  2000000  avgt    4    1755.913 ±   23.029  us/op
ArraysSort.Byte.testSort              SHUFFLE      800  avgt    4       3.102 ±    0.229  us/op
ArraysSort.Byte.testSort              SHUFFLE     7000  avgt    4       9.496 ±   10.539  us/op
ArraysSort.Byte.testSort              SHUFFLE    50000  avgt    4      58.440 ±    5.336  us/op
ArraysSort.Byte.testSort              SHUFFLE   300000  avgt    4     307.015 ±    4.253  us/op
ArraysSort.Byte.testSort              SHUFFLE  2000000  avgt    4    1756.482 ±   13.774  us/op
ArraysSort.Char.testParallelSort       RANDOM      800  avgt    4      14.689 ±    0.576  us/op
ArraysSort.Char.testParallelSort       RANDOM     7000  avgt    4     179.950 ±    1.316  us/op
ArraysSort.Char.testParallelSort       RANDOM    50000  avgt    4     823.761 ±   68.325  us/op
ArraysSort.Char.testParallelSort       RANDOM   300000  avgt    4    1978.258 ±  391.662  us/op
ArraysSort.Char.testParallelSort       RANDOM  2000000  avgt    4    5416.480 ±  246.235  us/op
ArraysSort.Char.testParallelSort     REPEATED      800  avgt    4       3.350 ±    0.080  us/op
ArraysSort.Char.testParallelSort     REPEATED     7000  avgt    4      50.118 ±    0.634  us/op
ArraysSort.Char.testParallelSort     REPEATED    50000  avgt    4     102.354 ±    3.307  us/op
ArraysSort.Char.testParallelSort     REPEATED   300000  avgt    4     656.187 ±  305.445  us/op
ArraysSort.Char.testParallelSort     REPEATED  2000000  avgt    4    2610.071 ±  221.602  us/op
ArraysSort.Char.testParallelSort      STAGGER      800  avgt    4      13.147 ±    0.229  us/op
ArraysSort.Char.testParallelSort      STAGGER     7000  avgt    4      71.325 ±   17.460  us/op
ArraysSort.Char.testParallelSort      STAGGER    50000  avgt    4     207.225 ±    2.084  us/op
ArraysSort.Char.testParallelSort      STAGGER   300000  avgt    4     712.314 ±   24.476  us/op
ArraysSort.Char.testParallelSort      STAGGER  2000000  avgt    4    2688.087 ±   18.970  us/op
ArraysSort.Char.testParallelSort      SHUFFLE      800  avgt    4       9.647 ±    0.087  us/op
ArraysSort.Char.testParallelSort      SHUFFLE     7000  avgt    4      74.025 ±    1.733  us/op
ArraysSort.Char.testParallelSort      SHUFFLE    50000  avgt    4     224.370 ±   64.382  us/op
ArraysSort.Char.testParallelSort      SHUFFLE   300000  avgt    4     740.276 ±  303.415  us/op
ArraysSort.Char.testParallelSort      SHUFFLE  2000000  avgt    4    2512.636 ±  249.406  us/op
ArraysSort.Char.testSort               RANDOM      800  avgt    4      14.586 ±    0.357  us/op
ArraysSort.Char.testSort               RANDOM     7000  avgt    4     180.503 ±    1.089  us/op
ArraysSort.Char.testSort               RANDOM    50000  avgt    4     824.773 ±   68.072  us/op
ArraysSort.Char.testSort               RANDOM   300000  avgt    4    1996.727 ±  362.439  us/op
ArraysSort.Char.testSort               RANDOM  2000000  avgt    4    5397.061 ±  488.526  us/op
ArraysSort.Char.testSort             REPEATED      800  avgt    4       3.318 ±    0.154  us/op
ArraysSort.Char.testSort             REPEATED     7000  avgt    4      61.631 ±   45.136  us/op
ArraysSort.Char.testSort             REPEATED    50000  avgt    4     100.618 ±    2.597  us/op
ArraysSort.Char.testSort             REPEATED   300000  avgt    4     656.462 ±  321.063  us/op
ArraysSort.Char.testSort             REPEATED  2000000  avgt    4    2618.031 ±  238.465  us/op
ArraysSort.Char.testSort              STAGGER      800  avgt    4      13.226 ±    0.294  us/op
ArraysSort.Char.testSort              STAGGER     7000  avgt    4      70.602 ±   22.932  us/op
ArraysSort.Char.testSort              STAGGER    50000  avgt    4     206.933 ±    0.785  us/op
ArraysSort.Char.testSort              STAGGER   300000  avgt    4     715.423 ±   26.911  us/op
ArraysSort.Char.testSort              STAGGER  2000000  avgt    4    2691.277 ±   21.836  us/op
ArraysSort.Char.testSort              SHUFFLE      800  avgt    4       9.664 ±    0.123  us/op
ArraysSort.Char.testSort              SHUFFLE     7000  avgt    4      75.749 ±    1.336  us/op
ArraysSort.Char.testSort              SHUFFLE    50000  avgt    4     223.119 ±   62.131  us/op
ArraysSort.Char.testSort              SHUFFLE   300000  avgt    4     744.981 ±  319.098  us/op
ArraysSort.Char.testSort              SHUFFLE  2000000  avgt    4    2505.235 ±  268.845  us/op
ArraysSort.Double.testParallelSort     RANDOM      800  avgt    4      17.786 ±    0.227  us/op
ArraysSort.Double.testParallelSort     RANDOM     7000  avgt    4     525.638 ±   15.661  us/op
ArraysSort.Double.testParallelSort     RANDOM    50000  avgt    4    1920.984 ±   13.044  us/op
ArraysSort.Double.testParallelSort     RANDOM   300000  avgt    4   11208.957 ±  392.125  us/op
ArraysSort.Double.testParallelSort     RANDOM  2000000  avgt    4   80493.626 ± 1607.531  us/op
ArraysSort.Double.testParallelSort   REPEATED      800  avgt    4       5.240 ±    0.101  us/op
ArraysSort.Double.testParallelSort   REPEATED     7000  avgt    4     158.205 ±    0.421  us/op
ArraysSort.Double.testParallelSort   REPEATED    50000  avgt    4    1053.123 ±  165.451  us/op
ArraysSort.Double.testParallelSort   REPEATED   300000  avgt    4    6415.271 ±   17.254  us/op
ArraysSort.Double.testParallelSort   REPEATED  2000000  avgt    4   41649.972 ±  258.029  us/op
ArraysSort.Double.testParallelSort    STAGGER      800  avgt    4       5.952 ±    0.067  us/op
ArraysSort.Double.testParallelSort    STAGGER     7000  avgt    4      51.056 ±    1.018  us/op
ArraysSort.Double.testParallelSort    STAGGER    50000  avgt    4     324.918 ±    2.862  us/op
ArraysSort.Double.testParallelSort    STAGGER   300000  avgt    4    1740.566 ±   17.025  us/op
ArraysSort.Double.testParallelSort    STAGGER  2000000  avgt    4   12886.974 ±  123.856  us/op
ArraysSort.Double.testParallelSort    SHUFFLE      800  avgt    4      12.128 ±    0.103  us/op
ArraysSort.Double.testParallelSort    SHUFFLE     7000  avgt    4     246.568 ±   30.682  us/op
ArraysSort.Double.testParallelSort    SHUFFLE    50000  avgt    4     859.752 ±   22.888  us/op
ArraysSort.Double.testParallelSort    SHUFFLE   300000  avgt    4    4889.386 ±   62.041  us/op
ArraysSort.Double.testParallelSort    SHUFFLE  2000000  avgt    4   37135.892 ±  604.069  us/op
ArraysSort.Double.testSort             RANDOM      800  avgt    4      17.724 ±    0.249  us/op
ArraysSort.Double.testSort             RANDOM     7000  avgt    4     600.381 ±    0.142  us/op
ArraysSort.Double.testSort             RANDOM    50000  avgt    4    5026.336 ±   61.506  us/op
ArraysSort.Double.testSort             RANDOM   300000  avgt    4   33816.738 ±   30.144  us/op
ArraysSort.Double.testSort             RANDOM  2000000  avgt    4  266179.825 ± 3540.354  us/op
ArraysSort.Double.testSort           REPEATED      800  avgt    4       5.273 ±    0.094  us/op
ArraysSort.Double.testSort           REPEATED     7000  avgt    4     166.293 ±    2.004  us/op
ArraysSort.Double.testSort           REPEATED    50000  avgt    4    1106.811 ±  103.619  us/op
ArraysSort.Double.testSort           REPEATED   300000  avgt    4    6487.977 ±   83.211  us/op
ArraysSort.Double.testSort           REPEATED  2000000  avgt    4   42927.720 ±  475.216  us/op
ArraysSort.Double.testSort            STAGGER      800  avgt    4       6.005 ±    0.026  us/op
ArraysSort.Double.testSort            STAGGER     7000  avgt    4      52.900 ±    0.539  us/op
ArraysSort.Double.testSort            STAGGER    50000  avgt    4     366.010 ±    1.224  us/op
ArraysSort.Double.testSort            STAGGER   300000  avgt    4    2169.235 ±   26.087  us/op
ArraysSort.Double.testSort            STAGGER  2000000  avgt    4   16313.964 ±  213.165  us/op
ArraysSort.Double.testSort            SHUFFLE      800  avgt    4      12.145 ±    0.160  us/op
ArraysSort.Double.testSort            SHUFFLE     7000  avgt    4     259.129 ±    1.450  us/op
ArraysSort.Double.testSort            SHUFFLE    50000  avgt    4    2057.573 ±   14.859  us/op
ArraysSort.Double.testSort            SHUFFLE   300000  avgt    4   13122.123 ±  635.101  us/op
ArraysSort.Double.testSort            SHUFFLE  2000000  avgt    4   88466.583 ± 5843.522  us/op
ArraysSort.Float.testParallelSort      RANDOM      800  avgt    4      17.238 ±    0.375  us/op
ArraysSort.Float.testParallelSort      RANDOM     7000  avgt    4     528.125 ±    7.923  us/op
ArraysSort.Float.testParallelSort      RANDOM    50000  avgt    4    1949.605 ±   43.036  us/op
ArraysSort.Float.testParallelSort      RANDOM   300000  avgt    4   11476.328 ±  164.510  us/op
ArraysSort.Float.testParallelSort      RANDOM  2000000  avgt    4   80863.447 ± 1962.584  us/op
ArraysSort.Float.testParallelSort    REPEATED      800  avgt    4       5.334 ±    0.056  us/op
ArraysSort.Float.testParallelSort    REPEATED     7000  avgt    4     157.085 ±    0.780  us/op
ArraysSort.Float.testParallelSort    REPEATED    50000  avgt    4    1053.091 ±  138.557  us/op
ArraysSort.Float.testParallelSort    REPEATED   300000  avgt    4    6409.711 ±   20.080  us/op
ArraysSort.Float.testParallelSort    REPEATED  2000000  avgt    4   41239.945 ±  412.567  us/op
ArraysSort.Float.testParallelSort     STAGGER      800  avgt    4       5.715 ±    0.094  us/op
ArraysSort.Float.testParallelSort     STAGGER     7000  avgt    4      48.773 ±    0.844  us/op
ArraysSort.Float.testParallelSort     STAGGER    50000  avgt    4     310.586 ±    3.440  us/op
ArraysSort.Float.testParallelSort     STAGGER   300000  avgt    4    1552.642 ±    9.308  us/op
ArraysSort.Float.testParallelSort     STAGGER  2000000  avgt    4   10700.302 ±  136.241  us/op
ArraysSort.Float.testParallelSort     SHUFFLE      800  avgt    4      12.513 ±    0.180  us/op
ArraysSort.Float.testParallelSort     SHUFFLE     7000  avgt    4     246.050 ±   29.848  us/op
ArraysSort.Float.testParallelSort     SHUFFLE    50000  avgt    4     853.715 ±   19.459  us/op
ArraysSort.Float.testParallelSort     SHUFFLE   300000  avgt    4    4830.787 ±  104.956  us/op
ArraysSort.Float.testParallelSort     SHUFFLE  2000000  avgt    4   36486.446 ±  993.769  us/op
ArraysSort.Float.testSort              RANDOM      800  avgt    4      17.226 ±    0.142  us/op
ArraysSort.Float.testSort              RANDOM     7000  avgt    4     601.563 ±    4.472  us/op
ArraysSort.Float.testSort              RANDOM    50000  avgt    4    5070.841 ±   43.185  us/op
ArraysSort.Float.testSort              RANDOM   300000  avgt    4   34129.752 ±  205.363  us/op
ArraysSort.Float.testSort              RANDOM  2000000  avgt    4  260102.781 ±  201.922  us/op
ArraysSort.Float.testSort            REPEATED      800  avgt    4       5.112 ±    0.145  us/op
ArraysSort.Float.testSort            REPEATED     7000  avgt    4     161.219 ±    0.200  us/op
ArraysSort.Float.testSort            REPEATED    50000  avgt    4    1063.928 ±  135.796  us/op
ArraysSort.Float.testSort            REPEATED   300000  avgt    4    6617.479 ±   36.456  us/op
ArraysSort.Float.testSort            REPEATED  2000000  avgt    4   41635.234 ±   56.310  us/op
ArraysSort.Float.testSort             STAGGER      800  avgt    4       5.696 ±    0.040  us/op
ArraysSort.Float.testSort             STAGGER     7000  avgt    4      50.349 ±    0.675  us/op
ArraysSort.Float.testSort             STAGGER    50000  avgt    4     339.639 ±    1.168  us/op
ArraysSort.Float.testSort             STAGGER   300000  avgt    4    2175.838 ±   15.344  us/op
ArraysSort.Float.testSort             STAGGER  2000000  avgt    4   14187.737 ±   44.392  us/op
ArraysSort.Float.testSort             SHUFFLE      800  avgt    4      12.500 ±    0.147  us/op
ArraysSort.Float.testSort             SHUFFLE     7000  avgt    4     255.973 ±    1.530  us/op
ArraysSort.Float.testSort             SHUFFLE    50000  avgt    4    2058.882 ±   20.946  us/op
ArraysSort.Float.testSort             SHUFFLE   300000  avgt    4   12849.443 ±  797.043  us/op
ArraysSort.Float.testSort             SHUFFLE  2000000  avgt    4   86190.395 ± 1438.965  us/op
ArraysSort.Int.testParallelSort        RANDOM      800  avgt    4      15.255 ±    0.171  us/op
ArraysSort.Int.testParallelSort        RANDOM     7000  avgt    4     492.621 ±   20.491  us/op
ArraysSort.Int.testParallelSort        RANDOM    50000  avgt    4    1704.918 ±   20.883  us/op
ArraysSort.Int.testParallelSort        RANDOM   300000  avgt    4   10230.213 ±  348.233  us/op
ArraysSort.Int.testParallelSort        RANDOM  2000000  avgt    4   74945.156 ± 3059.401  us/op
ArraysSort.Int.testParallelSort      REPEATED      800  avgt    4       3.734 ±    0.070  us/op
ArraysSort.Int.testParallelSort      REPEATED     7000  avgt    4      95.575 ±    0.969  us/op
ArraysSort.Int.testParallelSort      REPEATED    50000  avgt    4     723.709 ±    3.039  us/op
ArraysSort.Int.testParallelSort      REPEATED   300000  avgt    4    4455.572 ±    9.524  us/op
ArraysSort.Int.testParallelSort      REPEATED  2000000  avgt    4   25475.521 ±  124.235  us/op
ArraysSort.Int.testParallelSort       STAGGER      800  avgt    4       4.390 ±    0.038  us/op
ArraysSort.Int.testParallelSort       STAGGER     7000  avgt    4      42.761 ±    2.296  us/op
ArraysSort.Int.testParallelSort       STAGGER    50000  avgt    4     263.094 ±    2.960  us/op
ArraysSort.Int.testParallelSort       STAGGER   300000  avgt    4    1154.063 ±   11.257  us/op
ArraysSort.Int.testParallelSort       STAGGER  2000000  avgt    4    7389.503 ±  113.908  us/op
ArraysSort.Int.testParallelSort       SHUFFLE      800  avgt    4      11.655 ±    1.354  us/op
ArraysSort.Int.testParallelSort       SHUFFLE     7000  avgt    4     224.677 ±   11.804  us/op
ArraysSort.Int.testParallelSort       SHUFFLE    50000  avgt    4     746.457 ±   40.228  us/op
ArraysSort.Int.testParallelSort       SHUFFLE   300000  avgt    4    4118.965 ±  298.810  us/op
ArraysSort.Int.testParallelSort       SHUFFLE  2000000  avgt    4   30320.364 ± 1842.372  us/op
ArraysSort.Int.testSort                RANDOM      800  avgt    4      15.173 ±    0.175  us/op
ArraysSort.Int.testSort                RANDOM     7000  avgt    4     546.488 ±    4.336  us/op
ArraysSort.Int.testSort                RANDOM    50000  avgt    4    4752.334 ±   20.346  us/op
ArraysSort.Int.testSort                RANDOM   300000  avgt    4   32817.237 ±  156.894  us/op
ArraysSort.Int.testSort                RANDOM  2000000  avgt    4  256307.419 ±  561.705  us/op
ArraysSort.Int.testSort              REPEATED      800  avgt    4       3.916 ±    0.051  us/op
ArraysSort.Int.testSort              REPEATED     7000  avgt    4     100.379 ±    1.007  us/op
ArraysSort.Int.testSort              REPEATED    50000  avgt    4     717.875 ±    7.827  us/op
ArraysSort.Int.testSort              REPEATED   300000  avgt    4    4431.014 ±   23.900  us/op
ArraysSort.Int.testSort              REPEATED  2000000  avgt    4   25432.670 ±  243.560  us/op
ArraysSort.Int.testSort               STAGGER      800  avgt    4       4.540 ±    0.078  us/op
ArraysSort.Int.testSort               STAGGER     7000  avgt    4      37.915 ±    0.306  us/op
ArraysSort.Int.testSort               STAGGER    50000  avgt    4     276.792 ±    1.271  us/op
ArraysSort.Int.testSort               STAGGER   300000  avgt    4    1664.124 ±    9.098  us/op
ArraysSort.Int.testSort               STAGGER  2000000  avgt    4   11277.112 ±   81.253  us/op
ArraysSort.Int.testSort               SHUFFLE      800  avgt    4      11.108 ±    0.142  us/op
ArraysSort.Int.testSort               SHUFFLE     7000  avgt    4     249.843 ±    0.693  us/op
ArraysSort.Int.testSort               SHUFFLE    50000  avgt    4    1846.092 ±   11.541  us/op
ArraysSort.Int.testSort               SHUFFLE   300000  avgt    4   12950.518 ±  797.271  us/op
ArraysSort.Int.testSort               SHUFFLE  2000000  avgt    4   80924.012 ± 1441.852  us/op
ArraysSort.Long.testParallelSort       RANDOM      800  avgt    4      15.885 ±    0.406  us/op
ArraysSort.Long.testParallelSort       RANDOM     7000  avgt    4     486.717 ±   27.371  us/op
ArraysSort.Long.testParallelSort       RANDOM    50000  avgt    4    1736.134 ±   25.337  us/op
ArraysSort.Long.testParallelSort       RANDOM   300000  avgt    4   10535.930 ±  178.901  us/op
ArraysSort.Long.testParallelSort       RANDOM  2000000  avgt    4   76580.505 ± 3174.875  us/op
ArraysSort.Long.testParallelSort     REPEATED      800  avgt    4       3.661 ±    0.098  us/op
ArraysSort.Long.testParallelSort     REPEATED     7000  avgt    4      98.011 ±    3.278  us/op
ArraysSort.Long.testParallelSort     REPEATED    50000  avgt    4     728.241 ±    4.330  us/op
ArraysSort.Long.testParallelSort     REPEATED   300000  avgt    4    4367.293 ±   10.865  us/op
ArraysSort.Long.testParallelSort     REPEATED  2000000  avgt    4   26099.827 ±  113.673  us/op
ArraysSort.Long.testParallelSort      STAGGER      800  avgt    4       4.681 ±    0.606  us/op
ArraysSort.Long.testParallelSort      STAGGER     7000  avgt    4      43.283 ±    0.759  us/op
ArraysSort.Long.testParallelSort      STAGGER    50000  avgt    4     269.093 ±    5.556  us/op
ArraysSort.Long.testParallelSort      STAGGER   300000  avgt    4    1300.299 ±   70.646  us/op
ArraysSort.Long.testParallelSort      STAGGER  2000000  avgt    4    9554.788 ±  128.813  us/op
ArraysSort.Long.testParallelSort      SHUFFLE      800  avgt    4      11.734 ±    2.912  us/op
ArraysSort.Long.testParallelSort      SHUFFLE     7000  avgt    4     226.104 ±   20.146  us/op
ArraysSort.Long.testParallelSort      SHUFFLE    50000  avgt    4     761.924 ±   64.443  us/op
ArraysSort.Long.testParallelSort      SHUFFLE   300000  avgt    4    4167.953 ±   85.485  us/op
ArraysSort.Long.testParallelSort      SHUFFLE  2000000  avgt    4   31457.895 ±  953.908  us/op
ArraysSort.Long.testSort               RANDOM      800  avgt    4      15.775 ±    0.239  us/op
ArraysSort.Long.testSort               RANDOM     7000  avgt    4     545.227 ±    4.033  us/op
ArraysSort.Long.testSort               RANDOM    50000  avgt    4    4814.346 ±   24.139  us/op
ArraysSort.Long.testSort               RANDOM   300000  avgt    4   32666.292 ±  455.288  us/op
ArraysSort.Long.testSort               RANDOM  2000000  avgt    4  255556.781 ± 3480.419  us/op
ArraysSort.Long.testSort             REPEATED      800  avgt    4       3.736 ±    0.050  us/op
ArraysSort.Long.testSort             REPEATED     7000  avgt    4     102.708 ±    1.558  us/op
ArraysSort.Long.testSort             REPEATED    50000  avgt    4     733.085 ±    6.925  us/op
ArraysSort.Long.testSort             REPEATED   300000  avgt    4    4245.912 ±    5.737  us/op
ArraysSort.Long.testSort             REPEATED  2000000  avgt    4   26423.109 ±   88.665  us/op
ArraysSort.Long.testSort              STAGGER      800  avgt    4       5.014 ±    0.041  us/op
ArraysSort.Long.testSort              STAGGER     7000  avgt    4      40.578 ±    0.477  us/op
ArraysSort.Long.testSort              STAGGER    50000  avgt    4     284.593 ±    2.488  us/op
ArraysSort.Long.testSort              STAGGER   300000  avgt    4    1796.837 ±    7.481  us/op
ArraysSort.Long.testSort              STAGGER  2000000  avgt    4   12713.823 ±  104.787  us/op
ArraysSort.Long.testSort              SHUFFLE      800  avgt    4      11.200 ±    0.200  us/op
ArraysSort.Long.testSort              SHUFFLE     7000  avgt    4     233.435 ±    0.300  us/op
ArraysSort.Long.testSort              SHUFFLE    50000  avgt    4    1886.785 ±   22.401  us/op
ArraysSort.Long.testSort              SHUFFLE   300000  avgt    4   11918.217 ±  447.293  us/op
ArraysSort.Long.testSort              SHUFFLE  2000000  avgt    4   80243.420 ± 4672.132  us/op
ArraysSort.Short.testParallelSort      RANDOM      800  avgt    4      15.382 ±    0.396  us/op
ArraysSort.Short.testParallelSort      RANDOM     7000  avgt    4     185.062 ±    0.585  us/op
ArraysSort.Short.testParallelSort      RANDOM    50000  avgt    4     851.523 ±   43.715  us/op
ArraysSort.Short.testParallelSort      RANDOM   300000  avgt    4    1957.216 ±  355.572  us/op
ArraysSort.Short.testParallelSort      RANDOM  2000000  avgt    4    5320.495 ±  669.834  us/op
ArraysSort.Short.testParallelSort    REPEATED      800  avgt    4       3.355 ±    0.203  us/op
ArraysSort.Short.testParallelSort    REPEATED     7000  avgt    4      57.713 ±    0.711  us/op
ArraysSort.Short.testParallelSort    REPEATED    50000  avgt    4     107.354 ±    5.511  us/op
ArraysSort.Short.testParallelSort    REPEATED   300000  avgt    4     535.742 ±  314.420  us/op
ArraysSort.Short.testParallelSort    REPEATED  2000000  avgt    4    2600.206 ±  298.711  us/op
ArraysSort.Short.testParallelSort     STAGGER      800  avgt    4      13.272 ±    0.233  us/op
ArraysSort.Short.testParallelSort     STAGGER     7000  avgt    4      61.726 ±   11.376  us/op
ArraysSort.Short.testParallelSort     STAGGER    50000  avgt    4     196.190 ±    2.129  us/op
ArraysSort.Short.testParallelSort     STAGGER   300000  avgt    4     685.826 ±   61.071  us/op
ArraysSort.Short.testParallelSort     STAGGER  2000000  avgt    4    2709.150 ±   59.964  us/op
ArraysSort.Short.testParallelSort     SHUFFLE      800  avgt    4       9.661 ±    0.123  us/op
ArraysSort.Short.testParallelSort     SHUFFLE     7000  avgt    4      59.242 ±    1.875  us/op
ArraysSort.Short.testParallelSort     SHUFFLE    50000  avgt    4     246.217 ±    7.360  us/op
ArraysSort.Short.testParallelSort     SHUFFLE   300000  avgt    4     731.610 ±  343.809  us/op
ArraysSort.Short.testParallelSort     SHUFFLE  2000000  avgt    4    2516.240 ±  255.702  us/op
ArraysSort.Short.testSort              RANDOM      800  avgt    4      15.377 ±    0.269  us/op
ArraysSort.Short.testSort              RANDOM     7000  avgt    4     187.139 ±    1.235  us/op
ArraysSort.Short.testSort              RANDOM    50000  avgt    4     851.905 ±   45.528  us/op
ArraysSort.Short.testSort              RANDOM   300000  avgt    4    1878.764 ±  349.838  us/op
ArraysSort.Short.testSort              RANDOM  2000000  avgt    4    5338.944 ±  659.404  us/op
ArraysSort.Short.testSort            REPEATED      800  avgt    4       4.219 ±    0.035  us/op
ArraysSort.Short.testSort            REPEATED     7000  avgt    4      58.072 ±    1.026  us/op
ArraysSort.Short.testSort            REPEATED    50000  avgt    4     107.420 ±    2.481  us/op
ArraysSort.Short.testSort            REPEATED   300000  avgt    4     534.634 ±  316.756  us/op
ArraysSort.Short.testSort            REPEATED  2000000  avgt    4    2601.850 ±  293.297  us/op
ArraysSort.Short.testSort             STAGGER      800  avgt    4      13.203 ±    0.189  us/op
ArraysSort.Short.testSort             STAGGER     7000  avgt    4      62.470 ±   14.110  us/op
ArraysSort.Short.testSort             STAGGER    50000  avgt    4     191.487 ±    1.092  us/op
ArraysSort.Short.testSort             STAGGER   300000  avgt    4     684.139 ±   51.172  us/op
ArraysSort.Short.testSort             STAGGER  2000000  avgt    4    2655.990 ±  278.678  us/op
ArraysSort.Short.testSort             SHUFFLE      800  avgt    4       9.622 ±    0.136  us/op
ArraysSort.Short.testSort             SHUFFLE     7000  avgt    4      59.168 ±    2.431  us/op
ArraysSort.Short.testSort             SHUFFLE    50000  avgt    4     248.391 ±   18.547  us/op
ArraysSort.Short.testSort             SHUFFLE   300000  avgt    4     723.570 ±  312.101  us/op
ArraysSort.Short.testSort             SHUFFLE  2000000  avgt    4    2520.773 ±  267.869  us/op

Benchmark result is saved to /home/bourgesl/libs/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/test-results/micro_java_util_ArraysSort/jmh-result.json
