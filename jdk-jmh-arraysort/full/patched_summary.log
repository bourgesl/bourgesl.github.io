# Run complete. Total time: 01:20:33

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                            (size)    (type)  Mode  Cnt   Score    Error  Units
ArraysSort.Byte.testParallelSort        100    RANDOM  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Byte.testParallelSort        100  REPEATED  avgt    4  ≈ 10⁻⁴           ms/op
ArraysSort.Byte.testParallelSort        100   STAGGER  avgt    4  ≈ 10⁻³           ms/op
ArraysSort.Byte.testParallelSort        100   SHUFFLE  avgt    4  ≈ 10⁻³           ms/op
ArraysSort.Byte.testParallelSort       1000    RANDOM  avgt    4   0.006 ±  0.004  ms/op
ArraysSort.Byte.testParallelSort       1000  REPEATED  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Byte.testParallelSort       1000   STAGGER  avgt    4   0.002 ±  0.002  ms/op
ArraysSort.Byte.testParallelSort       1000   SHUFFLE  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Byte.testParallelSort      10000    RANDOM  avgt    4   0.013 ±  0.008  ms/op
ArraysSort.Byte.testParallelSort      10000  REPEATED  avgt    4   0.012 ±  0.007  ms/op
ArraysSort.Byte.testParallelSort      10000   STAGGER  avgt    4   0.009 ±  0.003  ms/op
ArraysSort.Byte.testParallelSort      10000   SHUFFLE  avgt    4   0.009 ±  0.002  ms/op
ArraysSort.Byte.testParallelSort     100000    RANDOM  avgt    4   0.083 ±  0.025  ms/op
ArraysSort.Byte.testParallelSort     100000  REPEATED  avgt    4   0.069 ±  0.020  ms/op
ArraysSort.Byte.testParallelSort     100000   STAGGER  avgt    4   0.071 ±  0.001  ms/op
ArraysSort.Byte.testParallelSort     100000   SHUFFLE  avgt    4   0.078 ±  0.039  ms/op
ArraysSort.Byte.testParallelSort    1000000    RANDOM  avgt    4   0.698 ±  0.015  ms/op
ArraysSort.Byte.testParallelSort    1000000  REPEATED  avgt    4   0.658 ±  0.004  ms/op
ArraysSort.Byte.testParallelSort    1000000   STAGGER  avgt    4   0.664 ±  0.003  ms/op
ArraysSort.Byte.testParallelSort    1000000   SHUFFLE  avgt    4   0.665 ±  0.005  ms/op
ArraysSort.Byte.testSort                100    RANDOM  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Byte.testSort                100  REPEATED  avgt    4  ≈ 10⁻⁴           ms/op
ArraysSort.Byte.testSort                100   STAGGER  avgt    4  ≈ 10⁻³           ms/op
ArraysSort.Byte.testSort                100   SHUFFLE  avgt    4  ≈ 10⁻³           ms/op
ArraysSort.Byte.testSort               1000    RANDOM  avgt    4   0.006 ±  0.004  ms/op
ArraysSort.Byte.testSort               1000  REPEATED  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Byte.testSort               1000   STAGGER  avgt    4   0.002 ±  0.002  ms/op
ArraysSort.Byte.testSort               1000   SHUFFLE  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Byte.testSort              10000    RANDOM  avgt    4   0.014 ±  0.009  ms/op
ArraysSort.Byte.testSort              10000  REPEATED  avgt    4   0.011 ±  0.004  ms/op
ArraysSort.Byte.testSort              10000   STAGGER  avgt    4   0.009 ±  0.003  ms/op
ArraysSort.Byte.testSort              10000   SHUFFLE  avgt    4   0.009 ±  0.001  ms/op
ArraysSort.Byte.testSort             100000    RANDOM  avgt    4   0.083 ±  0.024  ms/op
ArraysSort.Byte.testSort             100000  REPEATED  avgt    4   0.067 ±  0.023  ms/op
ArraysSort.Byte.testSort             100000   STAGGER  avgt    4   0.072 ±  0.002  ms/op
ArraysSort.Byte.testSort             100000   SHUFFLE  avgt    4   0.077 ±  0.041  ms/op
ArraysSort.Byte.testSort            1000000    RANDOM  avgt    4   0.698 ±  0.003  ms/op
ArraysSort.Byte.testSort            1000000  REPEATED  avgt    4   0.658 ±  0.006  ms/op
ArraysSort.Byte.testSort            1000000   STAGGER  avgt    4   0.665 ±  0.002  ms/op
ArraysSort.Byte.testSort            1000000   SHUFFLE  avgt    4   0.665 ±  0.004  ms/op
ArraysSort.Char.testParallelSort        100    RANDOM  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Char.testParallelSort        100  REPEATED  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Char.testParallelSort        100   STAGGER  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Char.testParallelSort        100   SHUFFLE  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Char.testParallelSort       1000    RANDOM  avgt    4   0.048 ±  0.001  ms/op
ArraysSort.Char.testParallelSort       1000  REPEATED  avgt    4   0.005 ±  0.001  ms/op
ArraysSort.Char.testParallelSort       1000   STAGGER  avgt    4   0.015 ±  0.001  ms/op
ArraysSort.Char.testParallelSort       1000   SHUFFLE  avgt    4   0.025 ±  0.001  ms/op
ArraysSort.Char.testParallelSort      10000    RANDOM  avgt    4   0.180 ±  0.001  ms/op
ArraysSort.Char.testParallelSort      10000  REPEATED  avgt    4   0.054 ±  0.039  ms/op
ArraysSort.Char.testParallelSort      10000   STAGGER  avgt    4   0.057 ±  0.001  ms/op
ArraysSort.Char.testParallelSort      10000   SHUFFLE  avgt    4   0.064 ±  0.002  ms/op
ArraysSort.Char.testParallelSort     100000    RANDOM  avgt    4   0.903 ±  0.042  ms/op
ArraysSort.Char.testParallelSort     100000  REPEATED  avgt    4   0.186 ±  0.002  ms/op
ArraysSort.Char.testParallelSort     100000   STAGGER  avgt    4   0.243 ±  0.001  ms/op
ArraysSort.Char.testParallelSort     100000   SHUFFLE  avgt    4   0.275 ±  0.017  ms/op
ArraysSort.Char.testParallelSort    1000000    RANDOM  avgt    4   2.536 ±  0.345  ms/op
ArraysSort.Char.testParallelSort    1000000  REPEATED  avgt    4   0.827 ±  0.137  ms/op
ArraysSort.Char.testParallelSort    1000000   STAGGER  avgt    4   1.234 ±  0.122  ms/op
ArraysSort.Char.testParallelSort    1000000   SHUFFLE  avgt    4   1.133 ±  0.055  ms/op
ArraysSort.Char.testSort                100    RANDOM  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Char.testSort                100  REPEATED  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Char.testSort                100   STAGGER  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Char.testSort                100   SHUFFLE  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Char.testSort               1000    RANDOM  avgt    4   0.050 ±  0.002  ms/op
ArraysSort.Char.testSort               1000  REPEATED  avgt    4   0.005 ±  0.001  ms/op
ArraysSort.Char.testSort               1000   STAGGER  avgt    4   0.016 ±  0.001  ms/op
ArraysSort.Char.testSort               1000   SHUFFLE  avgt    4   0.025 ±  0.001  ms/op
ArraysSort.Char.testSort              10000    RANDOM  avgt    4   0.182 ±  0.001  ms/op
ArraysSort.Char.testSort              10000  REPEATED  avgt    4   0.052 ±  0.043  ms/op
ArraysSort.Char.testSort              10000   STAGGER  avgt    4   0.058 ±  0.001  ms/op
ArraysSort.Char.testSort              10000   SHUFFLE  avgt    4   0.064 ±  0.004  ms/op
ArraysSort.Char.testSort             100000    RANDOM  avgt    4   0.904 ±  0.042  ms/op
ArraysSort.Char.testSort             100000  REPEATED  avgt    4   0.186 ±  0.002  ms/op
ArraysSort.Char.testSort             100000   STAGGER  avgt    4   0.243 ±  0.001  ms/op
ArraysSort.Char.testSort             100000   SHUFFLE  avgt    4   0.275 ±  0.019  ms/op
ArraysSort.Char.testSort            1000000    RANDOM  avgt    4   2.552 ±  0.350  ms/op
ArraysSort.Char.testSort            1000000  REPEATED  avgt    4   0.827 ±  0.138  ms/op
ArraysSort.Char.testSort            1000000   STAGGER  avgt    4   1.231 ±  0.123  ms/op
ArraysSort.Char.testSort            1000000   SHUFFLE  avgt    4   1.135 ±  0.064  ms/op
ArraysSort.Double.testParallelSort      100    RANDOM  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Double.testParallelSort      100  REPEATED  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Double.testParallelSort      100   STAGGER  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Double.testParallelSort      100   SHUFFLE  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Double.testParallelSort     1000    RANDOM  avgt    4   0.031 ±  0.001  ms/op
ArraysSort.Double.testParallelSort     1000  REPEATED  avgt    4   0.017 ±  0.001  ms/op
ArraysSort.Double.testParallelSort     1000   STAGGER  avgt    4   0.007 ±  0.001  ms/op
ArraysSort.Double.testParallelSort     1000   SHUFFLE  avgt    4   0.021 ±  0.001  ms/op
ArraysSort.Double.testParallelSort    10000    RANDOM  avgt    4   0.249 ±  0.011  ms/op
ArraysSort.Double.testParallelSort    10000  REPEATED  avgt    4   0.068 ±  0.002  ms/op
ArraysSort.Double.testParallelSort    10000   STAGGER  avgt    4   0.065 ±  0.002  ms/op
ArraysSort.Double.testParallelSort    10000   SHUFFLE  avgt    4   0.107 ±  0.003  ms/op
ArraysSort.Double.testParallelSort   100000    RANDOM  avgt    4   1.877 ±  0.122  ms/op
ArraysSort.Double.testParallelSort   100000  REPEATED  avgt    4   0.480 ±  0.002  ms/op
ArraysSort.Double.testParallelSort   100000   STAGGER  avgt    4   0.441 ±  0.009  ms/op
ArraysSort.Double.testParallelSort   100000   SHUFFLE  avgt    4   0.744 ±  0.089  ms/op
ArraysSort.Double.testParallelSort  1000000    RANDOM  avgt    4  19.078 ±  0.386  ms/op
ArraysSort.Double.testParallelSort  1000000  REPEATED  avgt    4   4.333 ±  0.054  ms/op
ArraysSort.Double.testParallelSort  1000000   STAGGER  avgt    4   4.961 ±  0.104  ms/op
ArraysSort.Double.testParallelSort  1000000   SHUFFLE  avgt    4   8.360 ±  0.340  ms/op
ArraysSort.Double.testSort              100    RANDOM  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Double.testSort              100  REPEATED  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Double.testSort              100   STAGGER  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Double.testSort              100   SHUFFLE  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Double.testSort             1000    RANDOM  avgt    4   0.030 ±  0.001  ms/op
ArraysSort.Double.testSort             1000  REPEATED  avgt    4   0.018 ±  0.001  ms/op
ArraysSort.Double.testSort             1000   STAGGER  avgt    4   0.007 ±  0.001  ms/op
ArraysSort.Double.testSort             1000   SHUFFLE  avgt    4   0.021 ±  0.001  ms/op
ArraysSort.Double.testSort            10000    RANDOM  avgt    4   0.374 ±  0.004  ms/op
ArraysSort.Double.testSort            10000  REPEATED  avgt    4   0.124 ±  0.001  ms/op
ArraysSort.Double.testSort            10000   STAGGER  avgt    4   0.071 ±  0.001  ms/op
ArraysSort.Double.testSort            10000   SHUFFLE  avgt    4   0.172 ±  0.001  ms/op
ArraysSort.Double.testSort           100000    RANDOM  avgt    4   4.868 ±  0.086  ms/op
ArraysSort.Double.testSort           100000  REPEATED  avgt    4   0.482 ±  0.003  ms/op
ArraysSort.Double.testSort           100000   STAGGER  avgt    4   0.679 ±  0.003  ms/op
ArraysSort.Double.testSort           100000   SHUFFLE  avgt    4   1.902 ±  0.013  ms/op
ArraysSort.Double.testSort          1000000    RANDOM  avgt    4  53.021 ±  0.981  ms/op
ArraysSort.Double.testSort          1000000  REPEATED  avgt    4   4.658 ±  0.045  ms/op
ArraysSort.Double.testSort          1000000   STAGGER  avgt    4   7.656 ±  0.375  ms/op
ArraysSort.Double.testSort          1000000   SHUFFLE  avgt    4  26.364 ±  0.949  ms/op
ArraysSort.Float.testParallelSort       100    RANDOM  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Float.testParallelSort       100  REPEATED  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Float.testParallelSort       100   STAGGER  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Float.testParallelSort       100   SHUFFLE  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Float.testParallelSort      1000    RANDOM  avgt    4   0.015 ±  0.001  ms/op
ArraysSort.Float.testParallelSort      1000  REPEATED  avgt    4   0.010 ±  0.001  ms/op
ArraysSort.Float.testParallelSort      1000   STAGGER  avgt    4   0.007 ±  0.001  ms/op
ArraysSort.Float.testParallelSort      1000   SHUFFLE  avgt    4   0.019 ±  0.001  ms/op
ArraysSort.Float.testParallelSort     10000    RANDOM  avgt    4   0.156 ±  0.010  ms/op
ArraysSort.Float.testParallelSort     10000  REPEATED  avgt    4   0.065 ±  0.001  ms/op
ArraysSort.Float.testParallelSort     10000   STAGGER  avgt    4   0.061 ±  0.001  ms/op
ArraysSort.Float.testParallelSort     10000   SHUFFLE  avgt    4   0.097 ±  0.003  ms/op
ArraysSort.Float.testParallelSort    100000    RANDOM  avgt    4   1.266 ±  0.014  ms/op
ArraysSort.Float.testParallelSort    100000  REPEATED  avgt    4   0.444 ±  0.009  ms/op
ArraysSort.Float.testParallelSort    100000   STAGGER  avgt    4   0.414 ±  0.016  ms/op
ArraysSort.Float.testParallelSort    100000   SHUFFLE  avgt    4   0.576 ±  0.033  ms/op
ArraysSort.Float.testParallelSort   1000000    RANDOM  avgt    4  11.641 ±  0.422  ms/op
ArraysSort.Float.testParallelSort   1000000  REPEATED  avgt    4   3.020 ±  0.069  ms/op
ArraysSort.Float.testParallelSort   1000000   STAGGER  avgt    4   3.457 ±  0.145  ms/op
ArraysSort.Float.testParallelSort   1000000   SHUFFLE  avgt    4   5.607 ±  0.237  ms/op
ArraysSort.Float.testSort               100    RANDOM  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Float.testSort               100  REPEATED  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Float.testSort               100   STAGGER  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Float.testSort               100   SHUFFLE  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Float.testSort              1000    RANDOM  avgt    4   0.015 ±  0.001  ms/op
ArraysSort.Float.testSort              1000  REPEATED  avgt    4   0.010 ±  0.001  ms/op
ArraysSort.Float.testSort              1000   STAGGER  avgt    4   0.007 ±  0.001  ms/op
ArraysSort.Float.testSort              1000   SHUFFLE  avgt    4   0.019 ±  0.001  ms/op
ArraysSort.Float.testSort             10000    RANDOM  avgt    4   0.137 ±  0.001  ms/op
ArraysSort.Float.testSort             10000  REPEATED  avgt    4   0.068 ±  0.001  ms/op
ArraysSort.Float.testSort             10000   STAGGER  avgt    4   0.067 ±  0.001  ms/op
ArraysSort.Float.testSort             10000   SHUFFLE  avgt    4   0.108 ±  0.001  ms/op
ArraysSort.Float.testSort            100000    RANDOM  avgt    4   1.842 ±  0.012  ms/op
ArraysSort.Float.testSort            100000  REPEATED  avgt    4   0.472 ±  0.005  ms/op
ArraysSort.Float.testSort            100000   STAGGER  avgt    4   0.649 ±  0.007  ms/op
ArraysSort.Float.testSort            100000   SHUFFLE  avgt    4   1.588 ±  0.015  ms/op
ArraysSort.Float.testSort           1000000    RANDOM  avgt    4  18.843 ±  0.155  ms/op
ArraysSort.Float.testSort           1000000  REPEATED  avgt    4   4.553 ±  0.045  ms/op
ArraysSort.Float.testSort           1000000   STAGGER  avgt    4   6.849 ±  0.337  ms/op
ArraysSort.Float.testSort           1000000   SHUFFLE  avgt    4  16.897 ±  0.199  ms/op
ArraysSort.Int.testParallelSort         100    RANDOM  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Int.testParallelSort         100  REPEATED  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Int.testParallelSort         100   STAGGER  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Int.testParallelSort         100   SHUFFLE  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Int.testParallelSort        1000    RANDOM  avgt    4   0.013 ±  0.001  ms/op
ArraysSort.Int.testParallelSort        1000  REPEATED  avgt    4   0.008 ±  0.001  ms/op
ArraysSort.Int.testParallelSort        1000   STAGGER  avgt    4   0.006 ±  0.001  ms/op
ArraysSort.Int.testParallelSort        1000   SHUFFLE  avgt    4   0.017 ±  0.001  ms/op
ArraysSort.Int.testParallelSort       10000    RANDOM  avgt    4   0.141 ±  0.010  ms/op
ArraysSort.Int.testParallelSort       10000  REPEATED  avgt    4   0.057 ±  0.002  ms/op
ArraysSort.Int.testParallelSort       10000   STAGGER  avgt    4   0.048 ±  0.001  ms/op
ArraysSort.Int.testParallelSort       10000   SHUFFLE  avgt    4   0.084 ±  0.003  ms/op
ArraysSort.Int.testParallelSort      100000    RANDOM  avgt    4   1.165 ±  0.039  ms/op
ArraysSort.Int.testParallelSort      100000  REPEATED  avgt    4   0.330 ±  0.007  ms/op
ArraysSort.Int.testParallelSort      100000   STAGGER  avgt    4   0.364 ±  0.006  ms/op
ArraysSort.Int.testParallelSort      100000   SHUFFLE  avgt    4   0.502 ±  0.017  ms/op
ArraysSort.Int.testParallelSort     1000000    RANDOM  avgt    4  11.340 ±  0.585  ms/op
ArraysSort.Int.testParallelSort     1000000  REPEATED  avgt    4   2.056 ±  0.043  ms/op
ArraysSort.Int.testParallelSort     1000000   STAGGER  avgt    4   2.479 ±  0.071  ms/op
ArraysSort.Int.testParallelSort     1000000   SHUFFLE  avgt    4   5.245 ±  0.186  ms/op
ArraysSort.Int.testSort                 100    RANDOM  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Int.testSort                 100  REPEATED  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Int.testSort                 100   STAGGER  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Int.testSort                 100   SHUFFLE  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Int.testSort                1000    RANDOM  avgt    4   0.011 ±  0.001  ms/op
ArraysSort.Int.testSort                1000  REPEATED  avgt    4   0.008 ±  0.001  ms/op
ArraysSort.Int.testSort                1000   STAGGER  avgt    4   0.006 ±  0.001  ms/op
ArraysSort.Int.testSort                1000   SHUFFLE  avgt    4   0.017 ±  0.001  ms/op
ArraysSort.Int.testSort               10000    RANDOM  avgt    4   0.141 ±  0.002  ms/op
ArraysSort.Int.testSort               10000  REPEATED  avgt    4   0.053 ±  0.002  ms/op
ArraysSort.Int.testSort               10000   STAGGER  avgt    4   0.052 ±  0.001  ms/op
ArraysSort.Int.testSort               10000   SHUFFLE  avgt    4   0.099 ±  0.001  ms/op
ArraysSort.Int.testSort              100000    RANDOM  avgt    4   2.235 ±  0.044  ms/op
ArraysSort.Int.testSort              100000  REPEATED  avgt    4   0.367 ±  0.005  ms/op
ArraysSort.Int.testSort              100000   STAGGER  avgt    4   0.544 ±  0.001  ms/op
ArraysSort.Int.testSort              100000   SHUFFLE  avgt    4   1.727 ±  0.013  ms/op
ArraysSort.Int.testSort             1000000    RANDOM  avgt    4  22.494 ±  0.375  ms/op
ArraysSort.Int.testSort             1000000  REPEATED  avgt    4   3.313 ±  0.044  ms/op
ArraysSort.Int.testSort             1000000   STAGGER  avgt    4   5.317 ±  0.159  ms/op
ArraysSort.Int.testSort             1000000   SHUFFLE  avgt    4  22.482 ±  1.206  ms/op
ArraysSort.Long.testParallelSort        100    RANDOM  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Long.testParallelSort        100  REPEATED  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Long.testParallelSort        100   STAGGER  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Long.testParallelSort        100   SHUFFLE  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Long.testParallelSort       1000    RANDOM  avgt    4   0.025 ±  0.001  ms/op
ArraysSort.Long.testParallelSort       1000  REPEATED  avgt    4   0.011 ±  0.001  ms/op
ArraysSort.Long.testParallelSort       1000   STAGGER  avgt    4   0.006 ±  0.001  ms/op
ArraysSort.Long.testParallelSort       1000   SHUFFLE  avgt    4   0.019 ±  0.001  ms/op
ArraysSort.Long.testParallelSort      10000    RANDOM  avgt    4   0.233 ±  0.019  ms/op
ArraysSort.Long.testParallelSort      10000  REPEATED  avgt    4   0.059 ±  0.001  ms/op
ArraysSort.Long.testParallelSort      10000   STAGGER  avgt    4   0.049 ±  0.001  ms/op
ArraysSort.Long.testParallelSort      10000   SHUFFLE  avgt    4   0.089 ±  0.003  ms/op
ArraysSort.Long.testParallelSort     100000    RANDOM  avgt    4   1.839 ±  0.055  ms/op
ArraysSort.Long.testParallelSort     100000  REPEATED  avgt    4   0.333 ±  0.012  ms/op
ArraysSort.Long.testParallelSort     100000   STAGGER  avgt    4   0.398 ±  0.022  ms/op
ArraysSort.Long.testParallelSort     100000   SHUFFLE  avgt    4   0.674 ±  0.030  ms/op
ArraysSort.Long.testParallelSort    1000000    RANDOM  avgt    4  18.992 ±  0.667  ms/op
ArraysSort.Long.testParallelSort    1000000  REPEATED  avgt    4   3.140 ±  0.112  ms/op
ArraysSort.Long.testParallelSort    1000000   STAGGER  avgt    4   3.670 ±  0.072  ms/op
ArraysSort.Long.testParallelSort    1000000   SHUFFLE  avgt    4   7.304 ±  0.366  ms/op
ArraysSort.Long.testSort                100    RANDOM  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Long.testSort                100  REPEATED  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Long.testSort                100   STAGGER  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Long.testSort                100   SHUFFLE  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Long.testSort               1000    RANDOM  avgt    4   0.025 ±  0.001  ms/op
ArraysSort.Long.testSort               1000  REPEATED  avgt    4   0.011 ±  0.001  ms/op
ArraysSort.Long.testSort               1000   STAGGER  avgt    4   0.006 ±  0.001  ms/op
ArraysSort.Long.testSort               1000   SHUFFLE  avgt    4   0.019 ±  0.001  ms/op
ArraysSort.Long.testSort              10000    RANDOM  avgt    4   0.388 ±  0.001  ms/op
ArraysSort.Long.testSort              10000  REPEATED  avgt    4   0.077 ±  0.001  ms/op
ArraysSort.Long.testSort              10000   STAGGER  avgt    4   0.056 ±  0.001  ms/op
ArraysSort.Long.testSort              10000   SHUFFLE  avgt    4   0.176 ±  0.001  ms/op
ArraysSort.Long.testSort             100000    RANDOM  avgt    4   5.018 ±  0.089  ms/op
ArraysSort.Long.testSort             100000  REPEATED  avgt    4   0.358 ±  0.010  ms/op
ArraysSort.Long.testSort             100000   STAGGER  avgt    4   0.545 ±  0.003  ms/op
ArraysSort.Long.testSort             100000   SHUFFLE  avgt    4   2.381 ±  0.038  ms/op
ArraysSort.Long.testSort            1000000    RANDOM  avgt    4  55.146 ±  0.681  ms/op
ArraysSort.Long.testSort            1000000  REPEATED  avgt    4   3.468 ±  0.034  ms/op
ArraysSort.Long.testSort            1000000   STAGGER  avgt    4   6.044 ±  0.427  ms/op
ArraysSort.Long.testSort            1000000   SHUFFLE  avgt    4  26.630 ±  0.396  ms/op
ArraysSort.Short.testParallelSort       100    RANDOM  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Short.testParallelSort       100  REPEATED  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Short.testParallelSort       100   STAGGER  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Short.testParallelSort       100   SHUFFLE  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Short.testParallelSort      1000    RANDOM  avgt    4   0.048 ±  0.001  ms/op
ArraysSort.Short.testParallelSort      1000  REPEATED  avgt    4   0.005 ±  0.001  ms/op
ArraysSort.Short.testParallelSort      1000   STAGGER  avgt    4   0.014 ±  0.001  ms/op
ArraysSort.Short.testParallelSort      1000   SHUFFLE  avgt    4   0.025 ±  0.001  ms/op
ArraysSort.Short.testParallelSort     10000    RANDOM  avgt    4   0.176 ±  0.001  ms/op
ArraysSort.Short.testParallelSort     10000  REPEATED  avgt    4   0.044 ±  0.004  ms/op
ArraysSort.Short.testParallelSort     10000   STAGGER  avgt    4   0.056 ±  0.001  ms/op
ArraysSort.Short.testParallelSort     10000   SHUFFLE  avgt    4   0.047 ±  0.001  ms/op
ArraysSort.Short.testParallelSort    100000    RANDOM  avgt    4   0.924 ±  0.001  ms/op
ArraysSort.Short.testParallelSort    100000  REPEATED  avgt    4   0.192 ±  0.001  ms/op
ArraysSort.Short.testParallelSort    100000   STAGGER  avgt    4   0.219 ±  0.001  ms/op
ArraysSort.Short.testParallelSort    100000   SHUFFLE  avgt    4   0.254 ±  0.038  ms/op
ArraysSort.Short.testParallelSort   1000000    RANDOM  avgt    4   2.561 ±  0.339  ms/op
ArraysSort.Short.testParallelSort   1000000  REPEATED  avgt    4   0.794 ±  0.006  ms/op
ArraysSort.Short.testParallelSort   1000000   STAGGER  avgt    4   1.243 ±  0.170  ms/op
ArraysSort.Short.testParallelSort   1000000   SHUFFLE  avgt    4   1.102 ±  0.242  ms/op
ArraysSort.Short.testSort               100    RANDOM  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Short.testSort               100  REPEATED  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Short.testSort               100   STAGGER  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Short.testSort               100   SHUFFLE  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Short.testSort              1000    RANDOM  avgt    4   0.048 ±  0.001  ms/op
ArraysSort.Short.testSort              1000  REPEATED  avgt    4   0.005 ±  0.001  ms/op
ArraysSort.Short.testSort              1000   STAGGER  avgt    4   0.016 ±  0.001  ms/op
ArraysSort.Short.testSort              1000   SHUFFLE  avgt    4   0.025 ±  0.001  ms/op
ArraysSort.Short.testSort             10000    RANDOM  avgt    4   0.176 ±  0.001  ms/op
ArraysSort.Short.testSort             10000  REPEATED  avgt    4   0.044 ±  0.003  ms/op
ArraysSort.Short.testSort             10000   STAGGER  avgt    4   0.055 ±  0.006  ms/op
ArraysSort.Short.testSort             10000   SHUFFLE  avgt    4   0.047 ±  0.001  ms/op
ArraysSort.Short.testSort            100000    RANDOM  avgt    4   0.919 ±  0.026  ms/op
ArraysSort.Short.testSort            100000  REPEATED  avgt    4   0.192 ±  0.001  ms/op
ArraysSort.Short.testSort            100000   STAGGER  avgt    4   0.219 ±  0.001  ms/op
ArraysSort.Short.testSort            100000   SHUFFLE  avgt    4   0.254 ±  0.036  ms/op
ArraysSort.Short.testSort           1000000    RANDOM  avgt    4   2.554 ±  0.317  ms/op
ArraysSort.Short.testSort           1000000  REPEATED  avgt    4   0.794 ±  0.005  ms/op
ArraysSort.Short.testSort           1000000   STAGGER  avgt    4   1.238 ±  0.122  ms/op
ArraysSort.Short.testSort           1000000   SHUFFLE  avgt    4   1.118 ±  0.231  ms/op

