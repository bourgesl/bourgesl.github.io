# Run complete. Total time: 00:11:34

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                         (size)    (type)  Mode  Cnt    Score    Error  Units
ArraysSort.Int.testParallelSort      100    RANDOM  avgt    4    0.004 ±  0.001  ms/op
ArraysSort.Int.testParallelSort      100  REPEATED  avgt    4    0.001 ±  0.001  ms/op
ArraysSort.Int.testParallelSort      100   STAGGER  avgt    4    0.002 ±  0.001  ms/op
ArraysSort.Int.testParallelSort      100   SHUFFLE  avgt    4    0.002 ±  0.001  ms/op
ArraysSort.Int.testParallelSort     1000    RANDOM  avgt    4    0.059 ±  0.001  ms/op
ArraysSort.Int.testParallelSort     1000  REPEATED  avgt    4    0.006 ±  0.001  ms/op
ArraysSort.Int.testParallelSort     1000   STAGGER  avgt    4    0.007 ±  0.001  ms/op
ArraysSort.Int.testParallelSort     1000   SHUFFLE  avgt    4    0.030 ±  0.001  ms/op
ArraysSort.Int.testParallelSort    10000    RANDOM  avgt    4    0.508 ±  0.009  ms/op
ArraysSort.Int.testParallelSort    10000  REPEATED  avgt    4    0.073 ±  0.001  ms/op
ArraysSort.Int.testParallelSort    10000   STAGGER  avgt    4    0.063 ±  0.002  ms/op
ArraysSort.Int.testParallelSort    10000   SHUFFLE  avgt    4    0.288 ±  0.004  ms/op
ArraysSort.Int.testParallelSort   100000    RANDOM  avgt    4    3.721 ±  0.064  ms/op
ArraysSort.Int.testParallelSort   100000  REPEATED  avgt    4    0.668 ±  0.007  ms/op
ArraysSort.Int.testParallelSort   100000   STAGGER  avgt    4    0.573 ±  0.017  ms/op
ArraysSort.Int.testParallelSort   100000   SHUFFLE  avgt    4    1.610 ±  0.072  ms/op
ArraysSort.Int.testParallelSort  1000000    RANDOM  avgt    4   40.521 ±  0.818  ms/op
ArraysSort.Int.testParallelSort  1000000  REPEATED  avgt    4    3.554 ±  0.038  ms/op
ArraysSort.Int.testParallelSort  1000000   STAGGER  avgt    4    4.547 ±  0.122  ms/op
ArraysSort.Int.testParallelSort  1000000   SHUFFLE  avgt    4   14.602 ±  0.636  ms/op
ArraysSort.Int.testSort              100    RANDOM  avgt    4    0.004 ±  0.001  ms/op
ArraysSort.Int.testSort              100  REPEATED  avgt    4    0.001 ±  0.001  ms/op
ArraysSort.Int.testSort              100   STAGGER  avgt    4    0.002 ±  0.001  ms/op
ArraysSort.Int.testSort              100   SHUFFLE  avgt    4    0.002 ±  0.001  ms/op
ArraysSort.Int.testSort             1000    RANDOM  avgt    4    0.060 ±  0.001  ms/op
ArraysSort.Int.testSort             1000  REPEATED  avgt    4    0.006 ±  0.001  ms/op
ArraysSort.Int.testSort             1000   STAGGER  avgt    4    0.007 ±  0.001  ms/op
ArraysSort.Int.testSort             1000   SHUFFLE  avgt    4    0.030 ±  0.001  ms/op
ArraysSort.Int.testSort            10000    RANDOM  avgt    4    0.800 ±  0.004  ms/op
ArraysSort.Int.testSort            10000  REPEATED  avgt    4    0.067 ±  0.001  ms/op
ArraysSort.Int.testSort            10000   STAGGER  avgt    4    0.073 ±  0.001  ms/op
ArraysSort.Int.testSort            10000   SHUFFLE  avgt    4    0.361 ±  0.007  ms/op
ArraysSort.Int.testSort           100000    RANDOM  avgt    4    9.947 ±  0.132  ms/op
ArraysSort.Int.testSort           100000  REPEATED  avgt    4    0.712 ±  0.002  ms/op
ArraysSort.Int.testSort           100000   STAGGER  avgt    4    0.704 ±  0.004  ms/op
ArraysSort.Int.testSort           100000   SHUFFLE  avgt    4    3.688 ±  0.104  ms/op
ArraysSort.Int.testSort          1000000    RANDOM  avgt    4  119.530 ±  0.097  ms/op
ArraysSort.Int.testSort          1000000  REPEATED  avgt    4    4.596 ±  0.064  ms/op
ArraysSort.Int.testSort          1000000   STAGGER  avgt    4    7.086 ±  0.632  ms/op
ArraysSort.Int.testSort          1000000   SHUFFLE  avgt    4   38.113 ±  1.031  ms/op

