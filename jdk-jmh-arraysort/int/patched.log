Running tests using MICRO control variable 'FORK=1;RESULTS_FORMAT=json'
Test selection 'micro:java.util.ArraysSort', will run:
* micro:java.util.ArraysSort

Running test 'micro:java.util.ArraysSort'
# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100, type = RANDOM)

# Run progress: 0.00% complete, ETA 00:11:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.004 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.004 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.004), stdev = 0.001
  CI (99.9%): [0.004, 0.004] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100, type = REPEATED)

# Run progress: 2.50% complete, ETA 00:11:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100, type = STAGGER)

# Run progress: 5.00% complete, ETA 00:11:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100, type = SHUFFLE)

# Run progress: 7.50% complete, ETA 00:10:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.003 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000, type = RANDOM)

# Run progress: 10.00% complete, ETA 00:10:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.017 ms/op
Iteration   1: 0.015 ms/op
Iteration   2: 0.015 ms/op
Iteration   3: 0.015 ms/op
Iteration   4: 0.015 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.015 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.015, 0.015, 0.015), stdev = 0.001
  CI (99.9%): [0.015, 0.015] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000, type = REPEATED)

# Run progress: 12.50% complete, ETA 00:10:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
Iteration   1: 0.010 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.010 ms/op
Iteration   4: 0.010 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.010 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.010, 0.010, 0.010), stdev = 0.001
  CI (99.9%): [0.010, 0.010] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000, type = STAGGER)

# Run progress: 15.00% complete, ETA 00:09:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.007 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.007 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000, type = SHUFFLE)

# Run progress: 17.50% complete, ETA 00:09:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
Iteration   1: 0.023 ms/op
Iteration   2: 0.023 ms/op
Iteration   3: 0.023 ms/op
Iteration   4: 0.023 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.023 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.023, 0.023, 0.023), stdev = 0.001
  CI (99.9%): [0.023, 0.023] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 10000, type = RANDOM)

# Run progress: 20.00% complete, ETA 00:09:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.275 ms/op
Iteration   1: 0.236 ms/op
Iteration   2: 0.239 ms/op
Iteration   3: 0.243 ms/op
Iteration   4: 0.245 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.241 ±(99.9%) 0.026 ms/op [Average]
  (min, avg, max) = (0.236, 0.241, 0.245), stdev = 0.004
  CI (99.9%): [0.215, 0.267] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 10000, type = REPEATED)

# Run progress: 22.50% complete, ETA 00:08:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.089 ms/op
Iteration   1: 0.077 ms/op
Iteration   2: 0.077 ms/op
Iteration   3: 0.077 ms/op
Iteration   4: 0.077 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.077 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.077, 0.077, 0.077), stdev = 0.001
  CI (99.9%): [0.075, 0.079] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 10000, type = STAGGER)

# Run progress: 25.00% complete, ETA 00:08:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.074 ms/op
Iteration   1: 0.068 ms/op
Iteration   2: 0.068 ms/op
Iteration   3: 0.069 ms/op
Iteration   4: 0.068 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.068 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.068, 0.068, 0.069), stdev = 0.001
  CI (99.9%): [0.064, 0.072] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 10000, type = SHUFFLE)

# Run progress: 27.50% complete, ETA 00:08:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.157 ms/op
Iteration   1: 0.122 ms/op
Iteration   2: 0.122 ms/op
Iteration   3: 0.122 ms/op
Iteration   4: 0.122 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.122 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.122, 0.122, 0.122), stdev = 0.001
  CI (99.9%): [0.119, 0.125] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100000, type = RANDOM)

# Run progress: 30.00% complete, ETA 00:08:05
# Fork: 1 of 1
# Warmup Iteration   1: 1.851 ms/op
Iteration   1: 1.654 ms/op
Iteration   2: 1.658 ms/op
Iteration   3: 1.641 ms/op
Iteration   4: 1.641 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  1.649 ±(99.9%) 0.056 ms/op [Average]
  (min, avg, max) = (1.641, 1.649, 1.658), stdev = 0.009
  CI (99.9%): [1.592, 1.705] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100000, type = REPEATED)

# Run progress: 32.50% complete, ETA 00:07:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.502 ms/op
Iteration   1: 0.440 ms/op
Iteration   2: 0.445 ms/op
Iteration   3: 0.442 ms/op
Iteration   4: 0.440 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.442 ±(99.9%) 0.014 ms/op [Average]
  (min, avg, max) = (0.440, 0.442, 0.445), stdev = 0.002
  CI (99.9%): [0.428, 0.455] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100000, type = STAGGER)

# Run progress: 35.00% complete, ETA 00:07:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.547 ms/op
Iteration   1: 0.503 ms/op
Iteration   2: 0.502 ms/op
Iteration   3: 0.505 ms/op
Iteration   4: 0.504 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.504 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.502, 0.504, 0.505), stdev = 0.001
  CI (99.9%): [0.495, 0.513] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100000, type = SHUFFLE)

# Run progress: 37.50% complete, ETA 00:07:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.845 ms/op
Iteration   1: 0.663 ms/op
Iteration   2: 0.664 ms/op
Iteration   3: 0.662 ms/op
Iteration   4: 0.643 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.658 ±(99.9%) 0.065 ms/op [Average]
  (min, avg, max) = (0.643, 0.658, 0.664), stdev = 0.010
  CI (99.9%): [0.593, 0.723] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000000, type = RANDOM)

# Run progress: 40.00% complete, ETA 00:06:56
# Fork: 1 of 1
# Warmup Iteration   1: 18.506 ms/op
Iteration   1: 15.134 ms/op
Iteration   2: 14.954 ms/op
Iteration   3: 14.925 ms/op
Iteration   4: 14.995 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  15.002 ±(99.9%) 0.599 ms/op [Average]
  (min, avg, max) = (14.925, 15.002, 15.134), stdev = 0.093
  CI (99.9%): [14.403, 15.601] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000000, type = REPEATED)

# Run progress: 42.50% complete, ETA 00:06:39
# Fork: 1 of 1
# Warmup Iteration   1: 2.902 ms/op
Iteration   1: 2.566 ms/op
Iteration   2: 2.546 ms/op
Iteration   3: 2.534 ms/op
Iteration   4: 2.550 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  2.549 ±(99.9%) 0.086 ms/op [Average]
  (min, avg, max) = (2.534, 2.549, 2.566), stdev = 0.013
  CI (99.9%): [2.463, 2.635] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000000, type = STAGGER)

# Run progress: 45.00% complete, ETA 00:06:21
# Fork: 1 of 1
# Warmup Iteration   1: 3.438 ms/op
Iteration   1: 3.088 ms/op
Iteration   2: 2.922 ms/op
Iteration   3: 2.953 ms/op
Iteration   4: 2.944 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  2.977 ±(99.9%) 0.488 ms/op [Average]
  (min, avg, max) = (2.922, 2.977, 3.088), stdev = 0.076
  CI (99.9%): [2.488, 3.465] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000000, type = SHUFFLE)

# Run progress: 47.50% complete, ETA 00:06:04
# Fork: 1 of 1
# Warmup Iteration   1: 9.434 ms/op
Iteration   1: 6.898 ms/op
Iteration   2: 7.130 ms/op
Iteration   3: 7.061 ms/op
Iteration   4: 6.906 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  6.999 ±(99.9%) 0.745 ms/op [Average]
  (min, avg, max) = (6.898, 6.999, 7.130), stdev = 0.115
  CI (99.9%): [6.254, 7.744] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100, type = RANDOM)

# Run progress: 50.00% complete, ETA 00:05:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.004 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.004 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.004), stdev = 0.001
  CI (99.9%): [0.004, 0.004] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100, type = REPEATED)

# Run progress: 52.50% complete, ETA 00:05:29
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100, type = STAGGER)

# Run progress: 55.00% complete, ETA 00:05:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100, type = SHUFFLE)

# Run progress: 57.50% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.003 ms/op
Iteration   4: 0.003 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.003 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000, type = RANDOM)

# Run progress: 60.00% complete, ETA 00:04:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.018 ms/op
Iteration   1: 0.017 ms/op
Iteration   2: 0.017 ms/op
Iteration   3: 0.017 ms/op
Iteration   4: 0.017 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.017 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.017, 0.017, 0.017), stdev = 0.001
  CI (99.9%): [0.016, 0.017] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000, type = REPEATED)

# Run progress: 62.50% complete, ETA 00:04:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ms/op
Iteration   1: 0.010 ms/op
Iteration   2: 0.010 ms/op
Iteration   3: 0.010 ms/op
Iteration   4: 0.010 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.010 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.010, 0.010, 0.010), stdev = 0.001
  CI (99.9%): [0.010, 0.010] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000, type = STAGGER)

# Run progress: 65.00% complete, ETA 00:04:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.007 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.007 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000, type = SHUFFLE)

# Run progress: 67.50% complete, ETA 00:03:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.025 ms/op
Iteration   1: 0.023 ms/op
Iteration   2: 0.023 ms/op
Iteration   3: 0.023 ms/op
Iteration   4: 0.023 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.023 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.023, 0.023, 0.023), stdev = 0.001
  CI (99.9%): [0.023, 0.023] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 10000, type = RANDOM)

# Run progress: 70.00% complete, ETA 00:03:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.204 ms/op
Iteration   1: 0.191 ms/op
Iteration   2: 0.192 ms/op
Iteration   3: 0.192 ms/op
Iteration   4: 0.191 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.191 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.191, 0.191, 0.192), stdev = 0.001
  CI (99.9%): [0.190, 0.193] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 10000, type = REPEATED)

# Run progress: 72.50% complete, ETA 00:03:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.073 ms/op
Iteration   1: 0.070 ms/op
Iteration   2: 0.070 ms/op
Iteration   3: 0.070 ms/op
Iteration   4: 0.070 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.070 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.070, 0.070, 0.070), stdev = 0.001
  CI (99.9%): [0.069, 0.071] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 10000, type = STAGGER)

# Run progress: 75.00% complete, ETA 00:02:53
# Fork: 1 of 1
# Warmup Iteration   1: 0.073 ms/op
Iteration   1: 0.069 ms/op
Iteration   2: 0.069 ms/op
Iteration   3: 0.069 ms/op
Iteration   4: 0.069 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.069 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.069, 0.069, 0.069), stdev = 0.001
  CI (99.9%): [0.069, 0.069] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 10000, type = SHUFFLE)

# Run progress: 77.50% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: 0.161 ms/op
Iteration   1: 0.146 ms/op
Iteration   2: 0.146 ms/op
Iteration   3: 0.145 ms/op
Iteration   4: 0.145 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.146 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.145, 0.146, 0.146), stdev = 0.001
  CI (99.9%): [0.142, 0.150] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100000, type = RANDOM)

# Run progress: 80.00% complete, ETA 00:02:18
# Fork: 1 of 1
# Warmup Iteration   1: 3.107 ms/op
Iteration   1: 2.958 ms/op
Iteration   2: 2.984 ms/op
Iteration   3: 2.986 ms/op
Iteration   4: 2.958 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  2.971 ±(99.9%) 0.099 ms/op [Average]
  (min, avg, max) = (2.958, 2.971, 2.986), stdev = 0.015
  CI (99.9%): [2.872, 3.070] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100000, type = REPEATED)

# Run progress: 82.50% complete, ETA 00:02:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.454 ms/op
Iteration   1: 0.444 ms/op
Iteration   2: 0.443 ms/op
Iteration   3: 0.442 ms/op
Iteration   4: 0.442 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.443 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.442, 0.443, 0.444), stdev = 0.001
  CI (99.9%): [0.437, 0.449] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100000, type = STAGGER)

# Run progress: 85.00% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.767 ms/op
Iteration   1: 0.734 ms/op
Iteration   2: 0.734 ms/op
Iteration   3: 0.734 ms/op
Iteration   4: 0.733 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.734 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.733, 0.734, 0.734), stdev = 0.001
  CI (99.9%): [0.729, 0.738] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100000, type = SHUFFLE)

# Run progress: 87.50% complete, ETA 00:01:26
# Fork: 1 of 1
# Warmup Iteration   1: 2.452 ms/op
Iteration   1: 2.274 ms/op
Iteration   2: 2.269 ms/op
Iteration   3: 2.264 ms/op
Iteration   4: 2.267 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  2.269 ±(99.9%) 0.027 ms/op [Average]
  (min, avg, max) = (2.264, 2.269, 2.274), stdev = 0.004
  CI (99.9%): [2.242, 2.296] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000000, type = RANDOM)

# Run progress: 90.00% complete, ETA 00:01:09
# Fork: 1 of 1
# Warmup Iteration   1: 31.356 ms/op
Iteration   1: 30.271 ms/op
Iteration   2: 30.145 ms/op
Iteration   3: 30.010 ms/op
Iteration   4: 30.201 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  30.157 ±(99.9%) 0.715 ms/op [Average]
  (min, avg, max) = (30.010, 30.157, 30.271), stdev = 0.111
  CI (99.9%): [29.442, 30.872] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000000, type = REPEATED)

# Run progress: 92.50% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: 4.592 ms/op
Iteration   1: 4.525 ms/op
Iteration   2: 4.524 ms/op
Iteration   3: 4.544 ms/op
Iteration   4: 4.542 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  4.534 ±(99.9%) 0.071 ms/op [Average]
  (min, avg, max) = (4.524, 4.534, 4.544), stdev = 0.011
  CI (99.9%): [4.463, 4.604] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000000, type = STAGGER)

# Run progress: 95.00% complete, ETA 00:00:34
# Fork: 1 of 1
# Warmup Iteration   1: 7.747 ms/op
Iteration   1: 7.395 ms/op
Iteration   2: 7.158 ms/op
Iteration   3: 7.127 ms/op
Iteration   4: 7.117 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  7.199 ±(99.9%) 0.852 ms/op [Average]
  (min, avg, max) = (7.117, 7.199, 7.395), stdev = 0.132
  CI (99.9%): [6.347, 8.051] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000000, type = SHUFFLE)

# Run progress: 97.50% complete, ETA 00:00:17
# Fork: 1 of 1
# Warmup Iteration   1: 31.261 ms/op
Iteration   1: 30.959 ms/op
Iteration   2: 29.701 ms/op
Iteration   3: 30.033 ms/op
Iteration   4: 30.037 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  30.182 ±(99.9%) 3.497 ms/op [Average]
  (min, avg, max) = (29.701, 30.182, 30.959), stdev = 0.541
  CI (99.9%): [26.685, 33.680] (assumes normal distribution)


# Run complete. Total time: 00:11:34

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                         (size)    (type)  Mode  Cnt   Score    Error  Units
ArraysSort.Int.testParallelSort      100    RANDOM  avgt    4   0.004 ±  0.001  ms/op
ArraysSort.Int.testParallelSort      100  REPEATED  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Int.testParallelSort      100   STAGGER  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Int.testParallelSort      100   SHUFFLE  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Int.testParallelSort     1000    RANDOM  avgt    4   0.015 ±  0.001  ms/op
ArraysSort.Int.testParallelSort     1000  REPEATED  avgt    4   0.010 ±  0.001  ms/op
ArraysSort.Int.testParallelSort     1000   STAGGER  avgt    4   0.007 ±  0.001  ms/op
ArraysSort.Int.testParallelSort     1000   SHUFFLE  avgt    4   0.023 ±  0.001  ms/op
ArraysSort.Int.testParallelSort    10000    RANDOM  avgt    4   0.241 ±  0.026  ms/op
ArraysSort.Int.testParallelSort    10000  REPEATED  avgt    4   0.077 ±  0.002  ms/op
ArraysSort.Int.testParallelSort    10000   STAGGER  avgt    4   0.068 ±  0.004  ms/op
ArraysSort.Int.testParallelSort    10000   SHUFFLE  avgt    4   0.122 ±  0.003  ms/op
ArraysSort.Int.testParallelSort   100000    RANDOM  avgt    4   1.649 ±  0.056  ms/op
ArraysSort.Int.testParallelSort   100000  REPEATED  avgt    4   0.442 ±  0.014  ms/op
ArraysSort.Int.testParallelSort   100000   STAGGER  avgt    4   0.504 ±  0.009  ms/op
ArraysSort.Int.testParallelSort   100000   SHUFFLE  avgt    4   0.658 ±  0.065  ms/op
ArraysSort.Int.testParallelSort  1000000    RANDOM  avgt    4  15.002 ±  0.599  ms/op
ArraysSort.Int.testParallelSort  1000000  REPEATED  avgt    4   2.549 ±  0.086  ms/op
ArraysSort.Int.testParallelSort  1000000   STAGGER  avgt    4   2.977 ±  0.488  ms/op
ArraysSort.Int.testParallelSort  1000000   SHUFFLE  avgt    4   6.999 ±  0.745  ms/op
ArraysSort.Int.testSort              100    RANDOM  avgt    4   0.004 ±  0.001  ms/op
ArraysSort.Int.testSort              100  REPEATED  avgt    4   0.002 ±  0.001  ms/op
ArraysSort.Int.testSort              100   STAGGER  avgt    4   0.001 ±  0.001  ms/op
ArraysSort.Int.testSort              100   SHUFFLE  avgt    4   0.003 ±  0.001  ms/op
ArraysSort.Int.testSort             1000    RANDOM  avgt    4   0.017 ±  0.001  ms/op
ArraysSort.Int.testSort             1000  REPEATED  avgt    4   0.010 ±  0.001  ms/op
ArraysSort.Int.testSort             1000   STAGGER  avgt    4   0.007 ±  0.001  ms/op
ArraysSort.Int.testSort             1000   SHUFFLE  avgt    4   0.023 ±  0.001  ms/op
ArraysSort.Int.testSort            10000    RANDOM  avgt    4   0.191 ±  0.002  ms/op
ArraysSort.Int.testSort            10000  REPEATED  avgt    4   0.070 ±  0.001  ms/op
ArraysSort.Int.testSort            10000   STAGGER  avgt    4   0.069 ±  0.001  ms/op
ArraysSort.Int.testSort            10000   SHUFFLE  avgt    4   0.146 ±  0.004  ms/op
ArraysSort.Int.testSort           100000    RANDOM  avgt    4   2.971 ±  0.099  ms/op
ArraysSort.Int.testSort           100000  REPEATED  avgt    4   0.443 ±  0.006  ms/op
ArraysSort.Int.testSort           100000   STAGGER  avgt    4   0.734 ±  0.004  ms/op
ArraysSort.Int.testSort           100000   SHUFFLE  avgt    4   2.269 ±  0.027  ms/op
ArraysSort.Int.testSort          1000000    RANDOM  avgt    4  30.157 ±  0.715  ms/op
ArraysSort.Int.testSort          1000000  REPEATED  avgt    4   4.534 ±  0.071  ms/op
ArraysSort.Int.testSort          1000000   STAGGER  avgt    4   7.199 ±  0.852  ms/op
ArraysSort.Int.testSort          1000000   SHUFFLE  avgt    4  30.182 ±  3.497  ms/op

Benchmark result is saved to /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/test-results/micro_java_util_ArraysSort/jmh-result.json
Finished running test 'micro:java.util.ArraysSort'
Test report is stored in build/linux-x86_64-server-release/test-results/micro_java_util_ArraysSort

==============================
Test summary
==============================
   TEST                                              TOTAL  PASS  FAIL ERROR   
   micro:java.util.ArraysSort                            1     1     0     0   
==============================
TEST SUCCESS

Finished building target 'test' in configuration 'linux-x86_64-server-release'

