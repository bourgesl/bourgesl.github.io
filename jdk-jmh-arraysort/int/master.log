Running tests using MICRO control variable 'FORK=1;RESULTS_FORMAT=json'
Test selection 'micro:java.util.ArraysSort', will run:
* micro:java.util.ArraysSort

Running test 'micro:java.util.ArraysSort'
# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100, type = RANDOM)

# Run progress: 0.00% complete, ETA 00:11:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.004 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.004 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.004), stdev = 0.001
  CI (99.9%): [0.004, 0.004] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100, type = REPEATED)

# Run progress: 2.50% complete, ETA 00:11:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100, type = STAGGER)

# Run progress: 5.00% complete, ETA 00:11:08
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100, type = SHUFFLE)

# Run progress: 7.50% complete, ETA 00:10:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000, type = RANDOM)

# Run progress: 10.00% complete, ETA 00:10:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.061 ms/op
Iteration   1: 0.059 ms/op
Iteration   2: 0.059 ms/op
Iteration   3: 0.059 ms/op
Iteration   4: 0.060 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.059 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.059, 0.059, 0.060), stdev = 0.001
  CI (99.9%): [0.059, 0.060] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000, type = REPEATED)

# Run progress: 12.50% complete, ETA 00:10:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.006 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.006 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.006 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.006, 0.006, 0.006), stdev = 0.001
  CI (99.9%): [0.006, 0.007] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000, type = STAGGER)

# Run progress: 15.00% complete, ETA 00:09:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.007 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.007 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.007 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000, type = SHUFFLE)

# Run progress: 17.50% complete, ETA 00:09:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.031 ms/op
Iteration   1: 0.030 ms/op
Iteration   2: 0.030 ms/op
Iteration   3: 0.030 ms/op
Iteration   4: 0.030 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.030 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.030, 0.030, 0.030), stdev = 0.001
  CI (99.9%): [0.029, 0.030] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 10000, type = RANDOM)

# Run progress: 20.00% complete, ETA 00:09:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.526 ms/op
Iteration   1: 0.507 ms/op
Iteration   2: 0.508 ms/op
Iteration   3: 0.510 ms/op
Iteration   4: 0.508 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.508 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.507, 0.508, 0.510), stdev = 0.001
  CI (99.9%): [0.499, 0.517] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 10000, type = REPEATED)

# Run progress: 22.50% complete, ETA 00:08:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.074 ms/op
Iteration   1: 0.073 ms/op
Iteration   2: 0.073 ms/op
Iteration   3: 0.073 ms/op
Iteration   4: 0.073 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.073 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.073, 0.073, 0.073), stdev = 0.001
  CI (99.9%): [0.072, 0.074] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 10000, type = STAGGER)

# Run progress: 25.00% complete, ETA 00:08:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.068 ms/op
Iteration   1: 0.064 ms/op
Iteration   2: 0.064 ms/op
Iteration   3: 0.063 ms/op
Iteration   4: 0.063 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.063 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.063, 0.063, 0.064), stdev = 0.001
  CI (99.9%): [0.062, 0.065] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 10000, type = SHUFFLE)

# Run progress: 27.50% complete, ETA 00:08:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.303 ms/op
Iteration   1: 0.288 ms/op
Iteration   2: 0.288 ms/op
Iteration   3: 0.287 ms/op
Iteration   4: 0.288 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.288 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.287, 0.288, 0.288), stdev = 0.001
  CI (99.9%): [0.283, 0.292] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100000, type = RANDOM)

# Run progress: 30.00% complete, ETA 00:08:06
# Fork: 1 of 1
# Warmup Iteration   1: 3.981 ms/op
Iteration   1: 3.725 ms/op
Iteration   2: 3.732 ms/op
Iteration   3: 3.708 ms/op
Iteration   4: 3.719 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  3.721 ±(99.9%) 0.064 ms/op [Average]
  (min, avg, max) = (3.708, 3.721, 3.732), stdev = 0.010
  CI (99.9%): [3.657, 3.785] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100000, type = REPEATED)

# Run progress: 32.50% complete, ETA 00:07:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.682 ms/op
Iteration   1: 0.667 ms/op
Iteration   2: 0.669 ms/op
Iteration   3: 0.669 ms/op
Iteration   4: 0.669 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.668 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.667, 0.668, 0.669), stdev = 0.001
  CI (99.9%): [0.661, 0.675] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100000, type = STAGGER)

# Run progress: 35.00% complete, ETA 00:07:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.613 ms/op
Iteration   1: 0.571 ms/op
Iteration   2: 0.575 ms/op
Iteration   3: 0.571 ms/op
Iteration   4: 0.575 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  0.573 ±(99.9%) 0.017 ms/op [Average]
  (min, avg, max) = (0.571, 0.573, 0.575), stdev = 0.003
  CI (99.9%): [0.556, 0.590] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 100000, type = SHUFFLE)

# Run progress: 37.50% complete, ETA 00:07:14
# Fork: 1 of 1
# Warmup Iteration   1: 1.807 ms/op
Iteration   1: 1.618 ms/op
Iteration   2: 1.610 ms/op
Iteration   3: 1.618 ms/op
Iteration   4: 1.594 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  1.610 ±(99.9%) 0.072 ms/op [Average]
  (min, avg, max) = (1.594, 1.610, 1.618), stdev = 0.011
  CI (99.9%): [1.538, 1.682] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000000, type = RANDOM)

# Run progress: 40.00% complete, ETA 00:06:56
# Fork: 1 of 1
# Warmup Iteration   1: 46.098 ms/op
Iteration   1: 40.577 ms/op
Iteration   2: 40.364 ms/op
Iteration   3: 40.484 ms/op
Iteration   4: 40.658 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  40.521 ±(99.9%) 0.818 ms/op [Average]
  (min, avg, max) = (40.364, 40.521, 40.658), stdev = 0.127
  CI (99.9%): [39.703, 41.338] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000000, type = REPEATED)

# Run progress: 42.50% complete, ETA 00:06:39
# Fork: 1 of 1
# Warmup Iteration   1: 3.669 ms/op
Iteration   1: 3.548 ms/op
Iteration   2: 3.551 ms/op
Iteration   3: 3.555 ms/op
Iteration   4: 3.561 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  3.554 ±(99.9%) 0.038 ms/op [Average]
  (min, avg, max) = (3.548, 3.554, 3.561), stdev = 0.006
  CI (99.9%): [3.516, 3.591] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000000, type = STAGGER)

# Run progress: 45.00% complete, ETA 00:06:22
# Fork: 1 of 1
# Warmup Iteration   1: 5.041 ms/op
Iteration   1: 4.566 ms/op
Iteration   2: 4.552 ms/op
Iteration   3: 4.551 ms/op
Iteration   4: 4.521 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  4.547 ±(99.9%) 0.122 ms/op [Average]
  (min, avg, max) = (4.521, 4.547, 4.566), stdev = 0.019
  CI (99.9%): [4.425, 4.670] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort
# Parameters: (size = 1000000, type = SHUFFLE)

# Run progress: 47.50% complete, ETA 00:06:04
# Fork: 1 of 1
# Warmup Iteration   1: 17.672 ms/op
Iteration   1: 14.667 ms/op
Iteration   2: 14.685 ms/op
Iteration   3: 14.588 ms/op
Iteration   4: 14.469 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testParallelSort":
  14.602 ±(99.9%) 0.636 ms/op [Average]
  (min, avg, max) = (14.469, 14.602, 14.685), stdev = 0.098
  CI (99.9%): [13.966, 15.238] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100, type = RANDOM)

# Run progress: 50.00% complete, ETA 00:05:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.004 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.004 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.004), stdev = 0.001
  CI (99.9%): [0.004, 0.004] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100, type = REPEATED)

# Run progress: 52.50% complete, ETA 00:05:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100, type = STAGGER)

# Run progress: 55.00% complete, ETA 00:05:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100, type = SHUFFLE)

# Run progress: 57.50% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
Iteration   1: 0.002 ms/op
Iteration   2: 0.002 ms/op
Iteration   3: 0.002 ms/op
Iteration   4: 0.002 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000, type = RANDOM)

# Run progress: 60.00% complete, ETA 00:04:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.061 ms/op
Iteration   1: 0.060 ms/op
Iteration   2: 0.060 ms/op
Iteration   3: 0.060 ms/op
Iteration   4: 0.060 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.060 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.060, 0.060, 0.060), stdev = 0.001
  CI (99.9%): [0.059, 0.060] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000, type = REPEATED)

# Run progress: 62.50% complete, ETA 00:04:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ms/op
Iteration   1: 0.006 ms/op
Iteration   2: 0.006 ms/op
Iteration   3: 0.006 ms/op
Iteration   4: 0.006 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.006 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.006, 0.006, 0.006), stdev = 0.001
  CI (99.9%): [0.006, 0.006] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000, type = STAGGER)

# Run progress: 65.00% complete, ETA 00:04:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.008 ms/op
Iteration   1: 0.007 ms/op
Iteration   2: 0.007 ms/op
Iteration   3: 0.007 ms/op
Iteration   4: 0.007 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.007 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000, type = SHUFFLE)

# Run progress: 67.50% complete, ETA 00:03:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.031 ms/op
Iteration   1: 0.030 ms/op
Iteration   2: 0.030 ms/op
Iteration   3: 0.030 ms/op
Iteration   4: 0.030 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.030 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.030, 0.030, 0.030), stdev = 0.001
  CI (99.9%): [0.029, 0.030] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 10000, type = RANDOM)

# Run progress: 70.00% complete, ETA 00:03:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.818 ms/op
Iteration   1: 0.800 ms/op
Iteration   2: 0.799 ms/op
Iteration   3: 0.800 ms/op
Iteration   4: 0.801 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.800 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.799, 0.800, 0.801), stdev = 0.001
  CI (99.9%): [0.796, 0.803] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 10000, type = REPEATED)

# Run progress: 72.50% complete, ETA 00:03:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.068 ms/op
Iteration   1: 0.067 ms/op
Iteration   2: 0.067 ms/op
Iteration   3: 0.067 ms/op
Iteration   4: 0.068 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.067 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.067, 0.067, 0.068), stdev = 0.001
  CI (99.9%): [0.067, 0.068] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 10000, type = STAGGER)

# Run progress: 75.00% complete, ETA 00:02:53
# Fork: 1 of 1
# Warmup Iteration   1: 0.076 ms/op
Iteration   1: 0.073 ms/op
Iteration   2: 0.073 ms/op
Iteration   3: 0.073 ms/op
Iteration   4: 0.073 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.073 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.073, 0.073, 0.073), stdev = 0.001
  CI (99.9%): [0.072, 0.073] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 10000, type = SHUFFLE)

# Run progress: 77.50% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: 0.379 ms/op
Iteration   1: 0.361 ms/op
Iteration   2: 0.361 ms/op
Iteration   3: 0.363 ms/op
Iteration   4: 0.361 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.361 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.361, 0.361, 0.363), stdev = 0.001
  CI (99.9%): [0.355, 0.368] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100000, type = RANDOM)

# Run progress: 80.00% complete, ETA 00:02:18
# Fork: 1 of 1
# Warmup Iteration   1: 10.262 ms/op
Iteration   1: 9.936 ms/op
Iteration   2: 9.936 ms/op
Iteration   3: 9.938 ms/op
Iteration   4: 9.977 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  9.947 ±(99.9%) 0.132 ms/op [Average]
  (min, avg, max) = (9.936, 9.947, 9.977), stdev = 0.020
  CI (99.9%): [9.815, 10.078] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100000, type = REPEATED)

# Run progress: 82.50% complete, ETA 00:02:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.730 ms/op
Iteration   1: 0.713 ms/op
Iteration   2: 0.712 ms/op
Iteration   3: 0.712 ms/op
Iteration   4: 0.712 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.712 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.712, 0.712, 0.713), stdev = 0.001
  CI (99.9%): [0.711, 0.714] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100000, type = STAGGER)

# Run progress: 85.00% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.738 ms/op
Iteration   1: 0.704 ms/op
Iteration   2: 0.704 ms/op
Iteration   3: 0.703 ms/op
Iteration   4: 0.703 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  0.704 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.703, 0.704, 0.704), stdev = 0.001
  CI (99.9%): [0.699, 0.708] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 100000, type = SHUFFLE)

# Run progress: 87.50% complete, ETA 00:01:26
# Fork: 1 of 1
# Warmup Iteration   1: 4.377 ms/op
Iteration   1: 3.667 ms/op
Iteration   2: 3.706 ms/op
Iteration   3: 3.691 ms/op
Iteration   4: 3.689 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  3.688 ±(99.9%) 0.104 ms/op [Average]
  (min, avg, max) = (3.667, 3.688, 3.706), stdev = 0.016
  CI (99.9%): [3.584, 3.792] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000000, type = RANDOM)

# Run progress: 90.00% complete, ETA 00:01:09
# Fork: 1 of 1
# Warmup Iteration   1: 128.621 ms/op
Iteration   1: 119.528 ms/op
Iteration   2: 119.550 ms/op
Iteration   3: 119.514 ms/op
Iteration   4: 119.527 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  119.530 ±(99.9%) 0.097 ms/op [Average]
  (min, avg, max) = (119.514, 119.530, 119.550), stdev = 0.015
  CI (99.9%): [119.432, 119.627] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000000, type = REPEATED)

# Run progress: 92.50% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: 4.639 ms/op
Iteration   1: 4.581 ms/op
Iteration   2: 4.600 ms/op
Iteration   3: 4.598 ms/op
Iteration   4: 4.603 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  4.596 ±(99.9%) 0.064 ms/op [Average]
  (min, avg, max) = (4.581, 4.596, 4.603), stdev = 0.010
  CI (99.9%): [4.532, 4.659] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000000, type = STAGGER)

# Run progress: 95.00% complete, ETA 00:00:34
# Fork: 1 of 1
# Warmup Iteration   1: 7.670 ms/op
Iteration   1: 7.233 ms/op
Iteration   2: 7.040 ms/op
Iteration   3: 7.033 ms/op
Iteration   4: 7.040 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  7.086 ±(99.9%) 0.632 ms/op [Average]
  (min, avg, max) = (7.033, 7.086, 7.233), stdev = 0.098
  CI (99.9%): [6.455, 7.718] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 20-internal, OpenJDK 64-Bit Server VM, 20-internal-adhoc.bourgesl.jdk-gh
# VM invoker: /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: -Djava.library.path=/home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/images/test/micro/native
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 5 s each
# Measurement: 4 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openjdk.bench.java.util.ArraysSort.Int.testSort
# Parameters: (size = 1000000, type = SHUFFLE)

# Run progress: 97.50% complete, ETA 00:00:17
# Fork: 1 of 1
# Warmup Iteration   1: 40.771 ms/op
Iteration   1: 38.186 ms/op
Iteration   2: 38.199 ms/op
Iteration   3: 38.193 ms/op
Iteration   4: 37.874 ms/op


Result "org.openjdk.bench.java.util.ArraysSort.Int.testSort":
  38.113 ±(99.9%) 1.031 ms/op [Average]
  (min, avg, max) = (37.874, 38.113, 38.199), stdev = 0.160
  CI (99.9%): [37.082, 39.144] (assumes normal distribution)


# Run complete. Total time: 00:11:34

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                         (size)    (type)  Mode  Cnt    Score    Error  Units
ArraysSort.Int.testParallelSort      100    RANDOM  avgt    4    0.004 ±  0.001  ms/op
ArraysSort.Int.testParallelSort      100  REPEATED  avgt    4    0.001 ±  0.001  ms/op
ArraysSort.Int.testParallelSort      100   STAGGER  avgt    4    0.002 ±  0.001  ms/op
ArraysSort.Int.testParallelSort      100   SHUFFLE  avgt    4    0.002 ±  0.001  ms/op
ArraysSort.Int.testParallelSort     1000    RANDOM  avgt    4    0.059 ±  0.001  ms/op
ArraysSort.Int.testParallelSort     1000  REPEATED  avgt    4    0.006 ±  0.001  ms/op
ArraysSort.Int.testParallelSort     1000   STAGGER  avgt    4    0.007 ±  0.001  ms/op
ArraysSort.Int.testParallelSort     1000   SHUFFLE  avgt    4    0.030 ±  0.001  ms/op
ArraysSort.Int.testParallelSort    10000    RANDOM  avgt    4    0.508 ±  0.009  ms/op
ArraysSort.Int.testParallelSort    10000  REPEATED  avgt    4    0.073 ±  0.001  ms/op
ArraysSort.Int.testParallelSort    10000   STAGGER  avgt    4    0.063 ±  0.002  ms/op
ArraysSort.Int.testParallelSort    10000   SHUFFLE  avgt    4    0.288 ±  0.004  ms/op
ArraysSort.Int.testParallelSort   100000    RANDOM  avgt    4    3.721 ±  0.064  ms/op
ArraysSort.Int.testParallelSort   100000  REPEATED  avgt    4    0.668 ±  0.007  ms/op
ArraysSort.Int.testParallelSort   100000   STAGGER  avgt    4    0.573 ±  0.017  ms/op
ArraysSort.Int.testParallelSort   100000   SHUFFLE  avgt    4    1.610 ±  0.072  ms/op
ArraysSort.Int.testParallelSort  1000000    RANDOM  avgt    4   40.521 ±  0.818  ms/op
ArraysSort.Int.testParallelSort  1000000  REPEATED  avgt    4    3.554 ±  0.038  ms/op
ArraysSort.Int.testParallelSort  1000000   STAGGER  avgt    4    4.547 ±  0.122  ms/op
ArraysSort.Int.testParallelSort  1000000   SHUFFLE  avgt    4   14.602 ±  0.636  ms/op
ArraysSort.Int.testSort              100    RANDOM  avgt    4    0.004 ±  0.001  ms/op
ArraysSort.Int.testSort              100  REPEATED  avgt    4    0.001 ±  0.001  ms/op
ArraysSort.Int.testSort              100   STAGGER  avgt    4    0.002 ±  0.001  ms/op
ArraysSort.Int.testSort              100   SHUFFLE  avgt    4    0.002 ±  0.001  ms/op
ArraysSort.Int.testSort             1000    RANDOM  avgt    4    0.060 ±  0.001  ms/op
ArraysSort.Int.testSort             1000  REPEATED  avgt    4    0.006 ±  0.001  ms/op
ArraysSort.Int.testSort             1000   STAGGER  avgt    4    0.007 ±  0.001  ms/op
ArraysSort.Int.testSort             1000   SHUFFLE  avgt    4    0.030 ±  0.001  ms/op
ArraysSort.Int.testSort            10000    RANDOM  avgt    4    0.800 ±  0.004  ms/op
ArraysSort.Int.testSort            10000  REPEATED  avgt    4    0.067 ±  0.001  ms/op
ArraysSort.Int.testSort            10000   STAGGER  avgt    4    0.073 ±  0.001  ms/op
ArraysSort.Int.testSort            10000   SHUFFLE  avgt    4    0.361 ±  0.007  ms/op
ArraysSort.Int.testSort           100000    RANDOM  avgt    4    9.947 ±  0.132  ms/op
ArraysSort.Int.testSort           100000  REPEATED  avgt    4    0.712 ±  0.002  ms/op
ArraysSort.Int.testSort           100000   STAGGER  avgt    4    0.704 ±  0.004  ms/op
ArraysSort.Int.testSort           100000   SHUFFLE  avgt    4    3.688 ±  0.104  ms/op
ArraysSort.Int.testSort          1000000    RANDOM  avgt    4  119.530 ±  0.097  ms/op
ArraysSort.Int.testSort          1000000  REPEATED  avgt    4    4.596 ±  0.064  ms/op
ArraysSort.Int.testSort          1000000   STAGGER  avgt    4    7.086 ±  0.632  ms/op
ArraysSort.Int.testSort          1000000   SHUFFLE  avgt    4   38.113 ±  1.031  ms/op

Benchmark result is saved to /home/graphics-rasterizer/jdk/jdk-gh/build/linux-x86_64-server-release/test-results/micro_java_util_ArraysSort/jmh-result.json
Finished running test 'micro:java.util.ArraysSort'
Test report is stored in build/linux-x86_64-server-release/test-results/micro_java_util_ArraysSort

==============================
Test summary
==============================
   TEST                                              TOTAL  PASS  FAIL ERROR   
   micro:java.util.ArraysSort                            1     1     0     0   
==============================
TEST SUCCESS

Finished building target 'test' in configuration 'linux-x86_64-server-release'

